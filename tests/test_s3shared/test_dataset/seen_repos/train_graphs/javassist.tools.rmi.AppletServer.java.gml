<?xml version="1.0" ?><graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.1/graphml.xsd"><key id="reference" for="node" attr.name="reference" attr.type="string"></key><key id="identifier" for="node" attr.name="identifier" attr.type="string"></key><key id="modifier" for="node" attr.name="modifier" attr.type="string"></key><key id="text" for="node" attr.name="text" attr.type="string"></key><key id="type" for="node" attr.name="type" attr.type="string"></key><key id="parentType" for="node" attr.name="parentType" attr.type="string"></key><key id="type" for="edge" attr.name="type" attr.type="string"></key><graph id="G" edgedefault="directed"><node id="1"><data key="reference"></data><data key="text">/*
 * Javassist, a Java-bytecode translator toolkit.
 * Copyright (C) 1999- Shigeru Chiba. All Rights Reserved.
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License.  Alternatively, the contents of this file may be used under
 * the terms of the GNU Lesser General Public License Version 2.1 or later,
 * or the Apache License Version 2.0.
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 */
package javassist.tools.rmi;

import java.io.*;
import javassist.tools.web.*;
import javassist.CannotCompileException;
import javassist.NotFoundException;
import javassist.ClassPool;
import java.lang.reflect.Method;
import java.util.Hashtable;
import java.util.Vector;

/**
 * An AppletServer object is a web server that an ObjectImporter
 * communicates with.  It makes the objects specified by
 * &lt;code&gt;exportObject()&lt;/code&gt; remotely accessible from applets.
 * If the classes of the exported objects are requested by the client-side
 * JVM, this web server sends proxy classes for the requested classes.
 *
 * @see javassist.tools.rmi.ObjectImporter
 */
public class AppletServer extends Webserver {

    private StubGenerator stubGen;

    private Hashtable exportedNames;

    private Vector exportedObjects;

    private static final byte[] okHeader = "HTTP/1.0 200 OK\r\n\r\n".getBytes();

    /**
     * Constructs a web server.
     *
     * @param port      port number
     */
    public AppletServer(String port) throws IOException, NotFoundException, CannotCompileException {
        this(Integer.parseInt(port));
    }

    /**
     * Constructs a web server.
     *
     * @param port      port number
     */
    public AppletServer(int port) throws IOException, NotFoundException, CannotCompileException {
        this(ClassPool.getDefault(), new StubGenerator(), port);
    }

    /**
     * Constructs a web server.
     *
     * @param port      port number
     * @param src       the source of classs files.
     */
    public AppletServer(int port, ClassPool src) throws IOException, NotFoundException, CannotCompileException {
        this(new ClassPool(src), new StubGenerator(), port);
    }

    private AppletServer(ClassPool loader, StubGenerator gen, int port) throws IOException, NotFoundException, CannotCompileException {
        super(port);
        exportedNames = new Hashtable();
        exportedObjects = new Vector();
        stubGen = gen;
        addTranslator(loader, gen);
    }

    /**
     * Begins the HTTP service.
     */
    public void run() {
        super.run();
    }

    /**
     * Exports an object.
     * This method produces the bytecode of the proxy class used
     * to access the exported object.  A remote applet can load
     * the proxy class and call a method on the exported object.
     *
     * @param name      the name used for looking the object up.
     * @param obj       the exported object.
     * @return          the object identifier
     *
     * @see javassist.tools.rmi.ObjectImporter#lookupObject(String)
     */
    public synchronized int exportObject(String name, Object obj) throws CannotCompileException {
        Class clazz = obj.getClass();
        ExportedObject eo = new ExportedObject();
        eo.object = obj;
        eo.methods = clazz.getMethods();
        exportedObjects.addElement(eo);
        eo.identifier = exportedObjects.size() - 1;
        if (name != null)
            exportedNames.put(name, eo);
        try {
            stubGen.makeProxyClass(clazz);
        } catch (NotFoundException e) {
            throw new CannotCompileException(e);
        }
        return eo.identifier;
    }

    /**
     * Processes a request from a web browser (an ObjectImporter).
     */
    public void doReply(InputStream in, OutputStream out, String cmd) throws IOException, BadHttpRequest {
        if (cmd.startsWith("POST /rmi "))
            processRMI(in, out);
        else if (cmd.startsWith("POST /lookup "))
            lookupName(cmd, in, out);
        else
            super.doReply(in, out, cmd);
    }

    private void processRMI(InputStream ins, OutputStream outs) throws IOException {
        ObjectInputStream in = new ObjectInputStream(ins);
        int objectId = in.readInt();
        int methodId = in.readInt();
        Exception err = null;
        Object rvalue = null;
        try {
            ExportedObject eo = (ExportedObject) exportedObjects.elementAt(objectId);
            Object[] args = readParameters(in);
            rvalue = convertRvalue(eo.methods[methodId].invoke(eo.object, args));
        } catch (Exception e) {
            err = e;
            logging2(e.toString());
        }
        outs.write(okHeader);
        ObjectOutputStream out = new ObjectOutputStream(outs);
        if (err != null) {
            out.writeBoolean(false);
            out.writeUTF(err.toString());
        } else
            try {
                out.writeBoolean(true);
                out.writeObject(rvalue);
            } catch (NotSerializableException e) {
                logging2(e.toString());
            } catch (InvalidClassException e) {
                logging2(e.toString());
            }
        out.flush();
        out.close();
        in.close();
    }

    private Object[] readParameters(ObjectInputStream in) throws IOException, ClassNotFoundException {
        int n = in.readInt();
        Object[] args = new Object[n];
        for (int i = 0; i &lt; n; ++i) {
            Object a = in.readObject();
            if (a instanceof RemoteRef) {
                RemoteRef ref = (RemoteRef) a;
                ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid);
                a = eo.object;
            }
            args[i] = a;
        }
        return args;
    }

    private Object convertRvalue(Object rvalue) throws CannotCompileException {
        if (rvalue == null)
            // the return type is void.
            return null;
        String classname = rvalue.getClass().getName();
        if (stubGen.isProxyClass(classname))
            return new RemoteRef(exportObject(null, rvalue), classname);
        else
            return rvalue;
    }

    private void lookupName(String cmd, InputStream ins, OutputStream outs) throws IOException {
        ObjectInputStream in = new ObjectInputStream(ins);
        String name = DataInputStream.readUTF(in);
        ExportedObject found = (ExportedObject) exportedNames.get(name);
        outs.write(okHeader);
        ObjectOutputStream out = new ObjectOutputStream(outs);
        if (found == null) {
            logging2(name + "not found.");
            // error code
            out.writeInt(-1);
            out.writeUTF("error");
        } else {
            logging2(name);
            out.writeInt(found.identifier);
            out.writeUTF(found.object.getClass().getName());
        }
        out.flush();
        out.close();
        in.close();
    }
}

class ExportedObject {

    public int identifier;

    public Object object;

    public Method[] methods;
}
</data><data key="type">CompilationUnit</data></node><node id="2"><data key="reference"></data><data key="text">package javassist.tools.rmi;

</data><data key="type">PackageDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="3"><data key="reference"></data><data key="identifier">rmi</data><data key="text">javassist.tools.rmi</data><data key="type">Name</data><data key="parentType">PackageDeclaration</data></node><node id="4"><data key="reference"></data><data key="identifier">tools</data><data key="text">javassist.tools</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="5"><data key="reference"></data><data key="identifier">javassist</data><data key="text">javassist</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="6"><data key="reference"></data><data key="modifier">*</data><data key="text">import java.io.*;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="7"><data key="reference"></data><data key="identifier">io</data><data key="text">java.io</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="8"><data key="reference"></data><data key="identifier">java</data><data key="text">java</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="9"><data key="reference"></data><data key="modifier">*</data><data key="text">import javassist.tools.web.*;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="700"><data key="reference"></data><data key="text">found.object</data><data key="type">FieldAccessExpr</data><data key="parentType">MethodCallExpr</data></node><node id="701"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">found</data><data key="text">found</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="702"><data key="reference">java.lang.Object</data><data key="identifier">object</data><data key="text">object</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="703"><data key="reference">otherMethodCall</data><data key="identifier">getClass</data><data key="text">getClass</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="704"><data key="reference">otherMethodCall</data><data key="identifier">getName</data><data key="text">getName</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="705"><data key="reference"></data><data key="text">out.flush()</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="706"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="707"><data key="reference">otherMethodCall</data><data key="identifier">flush</data><data key="text">flush</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="708"><data key="reference"></data><data key="text">out.close()</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="709"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="710"><data key="reference">otherMethodCall</data><data key="identifier">close</data><data key="text">close</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="711"><data key="reference"></data><data key="text">in.close()</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="712"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="713"><data key="reference">otherMethodCall</data><data key="identifier">close</data><data key="text">close</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="714"><data key="reference"></data><data key="text">Webserver</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="715"><data key="reference">nonQualifiedClassName</data><data key="identifier">Webserver</data><data key="text">Webserver</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="716"><data key="reference"></data><data key="modifier"></data><data key="text">class ExportedObject {

    public int identifier;

    public Object object;

    public Method[] methods;
}</data><data key="type">ClassOrInterfaceDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="717"><data key="reference">java.lang.Object</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="718"><data key="reference"></data><data key="modifier">public</data><data key="text">public int identifier;</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="719"><data key="reference"></data><data key="text">identifier</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="720"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">VariableDeclarator</data></node><node id="600"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">MethodCallExpr</data></node><node id="721"><data key="reference">int</data><data key="identifier">identifier</data><data key="text">identifier</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="601"><data key="reference">java.lang.Object</data><data key="identifier">rvalue</data><data key="text">rvalue</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="722"><data key="reference"></data><data key="modifier">public</data><data key="text">public Object object;</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="602"><data key="reference">java.lang.String</data><data key="identifier">classname</data><data key="text">classname</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="723"><data key="reference"></data><data key="text">object</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="603"><data key="reference"></data><data key="text">return rvalue;</data><data key="type">ReturnStmt</data><data key="parentType">IfStmt</data></node><node id="724"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="604"><data key="reference">java.lang.Object</data><data key="identifier">rvalue</data><data key="text">rvalue</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="725"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="605"><data key="reference"></data><data key="modifier">private</data><data key="text">private void lookupName(String cmd, InputStream ins, OutputStream outs) throws IOException {
    ObjectInputStream in = new ObjectInputStream(ins);
    String name = DataInputStream.readUTF(in);
    ExportedObject found = (ExportedObject) exportedNames.get(name);
    outs.write(okHeader);
    ObjectOutputStream out = new ObjectOutputStream(outs);
    if (found == null) {
        logging2(name + "not found.");
        // error code
        out.writeInt(-1);
        out.writeUTF("error");
    } else {
        logging2(name);
        out.writeInt(found.identifier);
        out.writeUTF(found.object.getClass().getName());
    }
    out.flush();
    out.close();
    in.close();
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="726"><data key="reference">java.lang.Object</data><data key="identifier">object</data><data key="text">object</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="606"><data key="reference">userDefinedMethodName</data><data key="identifier">lookupName</data><data key="text">lookupName</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="727"><data key="reference"></data><data key="modifier">public</data><data key="text">public Method[] methods;</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="607"><data key="reference"></data><data key="modifier"></data><data key="text">String cmd</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="728"><data key="reference"></data><data key="text">methods</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="608"><data key="reference"></data><data key="text">String</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="729"><data key="reference"></data><data key="text">Method[]</data><data key="type">ArrayType</data><data key="parentType">VariableDeclarator</data></node><node id="609"><data key="reference">nonQualifiedClassName</data><data key="identifier">String</data><data key="text">String</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="730"><data key="reference"></data><data key="text">Method</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ArrayType</data></node><node id="610"><data key="reference">java.lang.String</data><data key="identifier">cmd</data><data key="text">cmd</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="731"><data key="reference">nonQualifiedClassName</data><data key="identifier">Method</data><data key="text">Method</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="611"><data key="reference"></data><data key="modifier"></data><data key="text">InputStream ins</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="732"><data key="reference">java.lang.reflect.Method[]</data><data key="identifier">methods</data><data key="text">methods</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="612"><data key="reference"></data><data key="text">InputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="613"><data key="reference">nonQualifiedClassName</data><data key="identifier">InputStream</data><data key="text">InputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="614"><data key="reference">java.io.InputStream</data><data key="identifier">ins</data><data key="text">ins</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="615"><data key="reference"></data><data key="modifier"></data><data key="text">OutputStream outs</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="616"><data key="reference"></data><data key="text">OutputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="617"><data key="reference">nonQualifiedClassName</data><data key="identifier">OutputStream</data><data key="text">OutputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="618"><data key="reference">java.io.OutputStream</data><data key="identifier">outs</data><data key="text">outs</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="619"><data key="reference"></data><data key="text">IOException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="620"><data key="reference">nonQualifiedClassName</data><data key="identifier">IOException</data><data key="text">IOException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="500"><data key="reference">int</data><data key="identifier">n</data><data key="text">n</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="621"><data key="reference"></data><data key="text">void</data><data key="type">VoidType</data><data key="parentType">MethodDeclaration</data></node><node id="501"><data key="reference"></data><data key="text">for (int i = 0; i &lt; n; ++i) {
    Object a = in.readObject();
    if (a instanceof RemoteRef) {
        RemoteRef ref = (RemoteRef) a;
        ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid);
        a = eo.object;
    }
    args[i] = a;
}</data><data key="type">ForStmt</data><data key="parentType">BlockStmt</data></node><node id="622"><data key="reference"></data><data key="text">{
    ObjectInputStream in = new ObjectInputStream(ins);
    String name = DataInputStream.readUTF(in);
    ExportedObject found = (ExportedObject) exportedNames.get(name);
    outs.write(okHeader);
    ObjectOutputStream out = new ObjectOutputStream(outs);
    if (found == null) {
        logging2(name + "not found.");
        // error code
        out.writeInt(-1);
        out.writeUTF("error");
    } else {
        logging2(name);
        out.writeInt(found.identifier);
        out.writeUTF(found.object.getClass().getName());
    }
    out.flush();
    out.close();
    in.close();
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="502"><data key="reference"></data><data key="modifier"></data><data key="text">int i = 0</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ForStmt</data></node><node id="623"><data key="reference"></data><data key="modifier"></data><data key="text">ObjectInputStream in = new ObjectInputStream(ins)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="503"><data key="reference"></data><data key="text">i = 0</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="624"><data key="reference"></data><data key="text">in = new ObjectInputStream(ins)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="504"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">VariableDeclarator</data></node><node id="625"><data key="reference"></data><data key="text">ObjectInputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="505"><data key="reference">int</data><data key="identifier">i</data><data key="text">i</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="626"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectInputStream</data><data key="text">ObjectInputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="506"><data key="reference"></data><data key="identifier">0</data><data key="text">0</data><data key="type">IntegerLiteralExpr</data><data key="parentType">VariableDeclarator</data></node><node id="627"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="507"><data key="reference"></data><data key="text">i &lt; n</data><data key="type">BinaryExpr</data><data key="parentType">ForStmt</data></node><node id="628"><data key="reference"></data><data key="text">new ObjectInputStream(ins)</data><data key="type">ObjectCreationExpr</data><data key="parentType">VariableDeclarator</data></node><node id="508"><data key="reference">int</data><data key="identifier">i</data><data key="text">i</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="629"><data key="reference"></data><data key="text">ObjectInputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="509"><data key="reference">int</data><data key="identifier">n</data><data key="text">n</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="630"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectInputStream</data><data key="text">ObjectInputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="510"><data key="reference"></data><data key="text">++i</data><data key="type">UnaryExpr</data><data key="parentType">ForStmt</data></node><node id="631"><data key="reference">java.io.InputStream</data><data key="identifier">ins</data><data key="text">ins</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="511"><data key="reference">int</data><data key="identifier">i</data><data key="text">i</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="632"><data key="reference"></data><data key="modifier"></data><data key="text">String name = DataInputStream.readUTF(in)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="512"><data key="reference"></data><data key="text">{
    Object a = in.readObject();
    if (a instanceof RemoteRef) {
        RemoteRef ref = (RemoteRef) a;
        ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid);
        a = eo.object;
    }
    args[i] = a;
}</data><data key="type">BlockStmt</data><data key="parentType">ForStmt</data></node><node id="633"><data key="reference"></data><data key="text">name = DataInputStream.readUTF(in)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="513"><data key="reference"></data><data key="modifier"></data><data key="text">Object a = in.readObject()</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="634"><data key="reference"></data><data key="text">String</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="514"><data key="reference"></data><data key="text">a = in.readObject()</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="635"><data key="reference">nonQualifiedClassName</data><data key="identifier">String</data><data key="text">String</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="515"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="636"><data key="reference">java.lang.String</data><data key="identifier">name</data><data key="text">name</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="516"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="637"><data key="reference"></data><data key="text">DataInputStream.readUTF(in)</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="517"><data key="reference">java.lang.Object</data><data key="identifier">a</data><data key="text">a</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="638"><data key="reference">UnknownType</data><data key="identifier">DataInputStream</data><data key="text">DataInputStream</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="518"><data key="reference"></data><data key="text">in.readObject()</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="639"><data key="reference">otherMethodCall</data><data key="identifier">readUTF</data><data key="text">readUTF</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="519"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="640"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="520"><data key="reference">otherMethodCall</data><data key="identifier">readObject</data><data key="text">readObject</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="641"><data key="reference"></data><data key="modifier"></data><data key="text">ExportedObject found = (ExportedObject) exportedNames.get(name)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="400"><data key="reference"></data><data key="text">outs.write(okHeader)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="521"><data key="reference"></data><data key="text">if (a instanceof RemoteRef) {
    RemoteRef ref = (RemoteRef) a;
    ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid);
    a = eo.object;
}</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="642"><data key="reference"></data><data key="text">found = (ExportedObject) exportedNames.get(name)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="401"><data key="reference">java.io.OutputStream</data><data key="identifier">outs</data><data key="text">outs</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="522"><data key="reference"></data><data key="text">a instanceof RemoteRef</data><data key="type">InstanceOfExpr</data><data key="parentType">IfStmt</data></node><node id="643"><data key="reference"></data><data key="text">ExportedObject</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="402"><data key="reference">otherMethodCall</data><data key="identifier">write</data><data key="text">write</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="523"><data key="reference">java.lang.Object</data><data key="identifier">a</data><data key="text">a</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="644"><data key="reference">nonQualifiedClassName</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="403"><data key="reference">byte[]</data><data key="identifier">okHeader</data><data key="text">okHeader</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="524"><data key="reference"></data><data key="text">RemoteRef</data><data key="type">ClassOrInterfaceType</data><data key="parentType">InstanceOfExpr</data></node><node id="645"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">found</data><data key="text">found</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="404"><data key="reference"></data><data key="modifier"></data><data key="text">ObjectOutputStream out = new ObjectOutputStream(outs)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="525"><data key="reference">nonQualifiedClassName</data><data key="identifier">RemoteRef</data><data key="text">RemoteRef</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="646"><data key="reference"></data><data key="text">(ExportedObject) exportedNames.get(name)</data><data key="type">CastExpr</data><data key="parentType">VariableDeclarator</data></node><node id="405"><data key="reference"></data><data key="text">out = new ObjectOutputStream(outs)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="526"><data key="reference"></data><data key="text">{
    RemoteRef ref = (RemoteRef) a;
    ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid);
    a = eo.object;
}</data><data key="type">BlockStmt</data><data key="parentType">IfStmt</data></node><node id="647"><data key="reference"></data><data key="text">ExportedObject</data><data key="type">ClassOrInterfaceType</data><data key="parentType">CastExpr</data></node><node id="406"><data key="reference"></data><data key="text">ObjectOutputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="527"><data key="reference"></data><data key="modifier"></data><data key="text">RemoteRef ref = (RemoteRef) a</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="648"><data key="reference">nonQualifiedClassName</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="407"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectOutputStream</data><data key="text">ObjectOutputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="528"><data key="reference"></data><data key="text">ref = (RemoteRef) a</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="649"><data key="reference"></data><data key="text">exportedNames.get(name)</data><data key="type">MethodCallExpr</data><data key="parentType">CastExpr</data></node><node id="408"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="529"><data key="reference"></data><data key="text">RemoteRef</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="409"><data key="reference"></data><data key="text">new ObjectOutputStream(outs)</data><data key="type">ObjectCreationExpr</data><data key="parentType">VariableDeclarator</data></node><node id="650"><data key="reference">java.util.Hashtable</data><data key="identifier">exportedNames</data><data key="text">exportedNames</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="530"><data key="reference">nonQualifiedClassName</data><data key="identifier">RemoteRef</data><data key="text">RemoteRef</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="651"><data key="reference">otherMethodCall</data><data key="identifier">get</data><data key="text">get</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="410"><data key="reference"></data><data key="text">ObjectOutputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="531"><data key="reference">javassist.tools.rmi.RemoteRef</data><data key="identifier">ref</data><data key="text">ref</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="652"><data key="reference">java.lang.String</data><data key="identifier">name</data><data key="text">name</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="411"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectOutputStream</data><data key="text">ObjectOutputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="532"><data key="reference"></data><data key="text">(RemoteRef) a</data><data key="type">CastExpr</data><data key="parentType">VariableDeclarator</data></node><node id="653"><data key="reference"></data><data key="text">outs.write(okHeader)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="412"><data key="reference">java.io.OutputStream</data><data key="identifier">outs</data><data key="text">outs</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="533"><data key="reference"></data><data key="text">RemoteRef</data><data key="type">ClassOrInterfaceType</data><data key="parentType">CastExpr</data></node><node id="654"><data key="reference">java.io.OutputStream</data><data key="identifier">outs</data><data key="text">outs</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="413"><data key="reference"></data><data key="text">if (err != null) {
    out.writeBoolean(false);
    out.writeUTF(err.toString());
} else
    try {
        out.writeBoolean(true);
        out.writeObject(rvalue);
    } catch (NotSerializableException e) {
        logging2(e.toString());
    } catch (InvalidClassException e) {
        logging2(e.toString());
    }</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="534"><data key="reference">nonQualifiedClassName</data><data key="identifier">RemoteRef</data><data key="text">RemoteRef</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="655"><data key="reference">otherMethodCall</data><data key="identifier">write</data><data key="text">write</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="414"><data key="reference"></data><data key="text">err != null</data><data key="type">BinaryExpr</data><data key="parentType">IfStmt</data></node><node id="535"><data key="reference">java.lang.Object</data><data key="identifier">a</data><data key="text">a</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="656"><data key="reference">byte[]</data><data key="identifier">okHeader</data><data key="text">okHeader</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="415"><data key="reference">java.lang.Exception</data><data key="identifier">err</data><data key="text">err</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="536"><data key="reference"></data><data key="modifier"></data><data key="text">ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="657"><data key="reference"></data><data key="modifier"></data><data key="text">ObjectOutputStream out = new ObjectOutputStream(outs)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="416"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">BinaryExpr</data></node><node id="537"><data key="reference"></data><data key="text">eo = (ExportedObject) exportedObjects.elementAt(ref.oid)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="658"><data key="reference"></data><data key="text">out = new ObjectOutputStream(outs)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="417"><data key="reference"></data><data key="text">{
    out.writeBoolean(false);
    out.writeUTF(err.toString());
}</data><data key="type">BlockStmt</data><data key="parentType">IfStmt</data></node><node id="538"><data key="reference"></data><data key="text">ExportedObject</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="659"><data key="reference"></data><data key="text">ObjectOutputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="418"><data key="reference"></data><data key="text">out.writeBoolean(false)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="539"><data key="reference">nonQualifiedClassName</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="419"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="660"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectOutputStream</data><data key="text">ObjectOutputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="540"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="661"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="420"><data key="reference">otherMethodCall</data><data key="identifier">writeBoolean</data><data key="text">writeBoolean</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="541"><data key="reference"></data><data key="text">(ExportedObject) exportedObjects.elementAt(ref.oid)</data><data key="type">CastExpr</data><data key="parentType">VariableDeclarator</data></node><node id="662"><data key="reference"></data><data key="text">new ObjectOutputStream(outs)</data><data key="type">ObjectCreationExpr</data><data key="parentType">VariableDeclarator</data></node><node id="300"><data key="reference">userDefinedMethodName</data><data key="identifier">processRMI</data><data key="text">processRMI</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="421"><data key="reference"></data><data key="identifier">false</data><data key="text">false</data><data key="type">BooleanLiteralExpr</data><data key="parentType">MethodCallExpr</data></node><node id="542"><data key="reference"></data><data key="text">ExportedObject</data><data key="type">ClassOrInterfaceType</data><data key="parentType">CastExpr</data></node><node id="663"><data key="reference"></data><data key="text">ObjectOutputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="301"><data key="reference"></data><data key="modifier"></data><data key="text">InputStream ins</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="422"><data key="reference"></data><data key="text">out.writeUTF(err.toString())</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="543"><data key="reference">nonQualifiedClassName</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="664"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectOutputStream</data><data key="text">ObjectOutputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="302"><data key="reference"></data><data key="text">InputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="423"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="544"><data key="reference"></data><data key="text">exportedObjects.elementAt(ref.oid)</data><data key="type">MethodCallExpr</data><data key="parentType">CastExpr</data></node><node id="665"><data key="reference">java.io.OutputStream</data><data key="identifier">outs</data><data key="text">outs</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="303"><data key="reference">nonQualifiedClassName</data><data key="identifier">InputStream</data><data key="text">InputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="424"><data key="reference">otherMethodCall</data><data key="identifier">writeUTF</data><data key="text">writeUTF</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="545"><data key="reference">java.util.Vector</data><data key="identifier">exportedObjects</data><data key="text">exportedObjects</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="666"><data key="reference"></data><data key="text">if (found == null) {
    logging2(name + "not found.");
    // error code
    out.writeInt(-1);
    out.writeUTF("error");
} else {
    logging2(name);
    out.writeInt(found.identifier);
    out.writeUTF(found.object.getClass().getName());
}</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="304"><data key="reference">java.io.InputStream</data><data key="identifier">ins</data><data key="text">ins</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="425"><data key="reference"></data><data key="text">err.toString()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="546"><data key="reference">otherMethodCall</data><data key="identifier">elementAt</data><data key="text">elementAt</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="667"><data key="reference"></data><data key="text">found == null</data><data key="type">BinaryExpr</data><data key="parentType">IfStmt</data></node><node id="305"><data key="reference"></data><data key="modifier"></data><data key="text">OutputStream outs</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="426"><data key="reference">java.lang.Exception</data><data key="identifier">err</data><data key="text">err</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="547"><data key="reference"></data><data key="text">ref.oid</data><data key="type">FieldAccessExpr</data><data key="parentType">MethodCallExpr</data></node><node id="668"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">found</data><data key="text">found</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="306"><data key="reference"></data><data key="text">OutputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="427"><data key="reference">otherMethodCall</data><data key="identifier">toString</data><data key="text">toString</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="548"><data key="reference">javassist.tools.rmi.RemoteRef</data><data key="identifier">ref</data><data key="text">ref</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="669"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">BinaryExpr</data></node><node id="307"><data key="reference">nonQualifiedClassName</data><data key="identifier">OutputStream</data><data key="text">OutputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="428"><data key="reference"></data><data key="text">try {
    out.writeBoolean(true);
    out.writeObject(rvalue);
} catch (NotSerializableException e) {
    logging2(e.toString());
} catch (InvalidClassException e) {
    logging2(e.toString());
}</data><data key="type">TryStmt</data><data key="parentType">IfStmt</data></node><node id="549"><data key="reference">int</data><data key="identifier">oid</data><data key="text">oid</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="308"><data key="reference">java.io.OutputStream</data><data key="identifier">outs</data><data key="text">outs</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="429"><data key="reference"></data><data key="text">{
    out.writeBoolean(true);
    out.writeObject(rvalue);
}</data><data key="type">BlockStmt</data><data key="parentType">TryStmt</data></node><node id="309"><data key="reference"></data><data key="text">IOException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="670"><data key="reference"></data><data key="text">{
    logging2(name + "not found.");
    // error code
    out.writeInt(-1);
    out.writeUTF("error");
}</data><data key="type">BlockStmt</data><data key="parentType">IfStmt</data></node><node id="550"><data key="reference"></data><data key="identifier">=</data><data key="text">a = eo.object</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="671"><data key="reference"></data><data key="text">logging2(name + "not found.")</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="430"><data key="reference"></data><data key="text">out.writeBoolean(true)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="551"><data key="reference">java.lang.Object</data><data key="identifier">a</data><data key="text">a</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="672"><data key="reference">otherMethodCall</data><data key="identifier">logging2</data><data key="text">logging2</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="310"><data key="reference">nonQualifiedClassName</data><data key="identifier">IOException</data><data key="text">IOException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="431"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="552"><data key="reference"></data><data key="text">eo.object</data><data key="type">FieldAccessExpr</data><data key="parentType">AssignExpr</data></node><node id="673"><data key="reference"></data><data key="text">name + "not found."</data><data key="type">BinaryExpr</data><data key="parentType">MethodCallExpr</data></node><node id="311"><data key="reference"></data><data key="text">void</data><data key="type">VoidType</data><data key="parentType">MethodDeclaration</data></node><node id="432"><data key="reference">otherMethodCall</data><data key="identifier">writeBoolean</data><data key="text">writeBoolean</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="553"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="674"><data key="reference">java.lang.String</data><data key="identifier">name</data><data key="text">name</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="312"><data key="reference"></data><data key="text">{
    ObjectInputStream in = new ObjectInputStream(ins);
    int objectId = in.readInt();
    int methodId = in.readInt();
    Exception err = null;
    Object rvalue = null;
    try {
        ExportedObject eo = (ExportedObject) exportedObjects.elementAt(objectId);
        Object[] args = readParameters(in);
        rvalue = convertRvalue(eo.methods[methodId].invoke(eo.object, args));
    } catch (Exception e) {
        err = e;
        logging2(e.toString());
    }
    outs.write(okHeader);
    ObjectOutputStream out = new ObjectOutputStream(outs);
    if (err != null) {
        out.writeBoolean(false);
        out.writeUTF(err.toString());
    } else
        try {
            out.writeBoolean(true);
            out.writeObject(rvalue);
        } catch (NotSerializableException e) {
            logging2(e.toString());
        } catch (InvalidClassException e) {
            logging2(e.toString());
        }
    out.flush();
    out.close();
    in.close();
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="433"><data key="reference"></data><data key="identifier">true</data><data key="text">true</data><data key="type">BooleanLiteralExpr</data><data key="parentType">MethodCallExpr</data></node><node id="554"><data key="reference">java.lang.Object</data><data key="identifier">object</data><data key="text">object</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="675"><data key="reference"></data><data key="identifier">not found.</data><data key="text">"not found."</data><data key="type">StringLiteralExpr</data><data key="parentType">BinaryExpr</data></node><node id="313"><data key="reference"></data><data key="modifier"></data><data key="text">ObjectInputStream in = new ObjectInputStream(ins)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="434"><data key="reference"></data><data key="text">out.writeObject(rvalue)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="555"><data key="reference"></data><data key="identifier">=</data><data key="text">args[i] = a</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="676"><data key="reference"></data><data key="text">out.writeInt(-1)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="314"><data key="reference"></data><data key="text">in = new ObjectInputStream(ins)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="435"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="556"><data key="reference"></data><data key="text">args[i]</data><data key="type">ArrayAccessExpr</data><data key="parentType">AssignExpr</data></node><node id="677"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="315"><data key="reference"></data><data key="text">ObjectInputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="436"><data key="reference">otherMethodCall</data><data key="identifier">writeObject</data><data key="text">writeObject</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="557"><data key="reference">java.lang.Object[]</data><data key="identifier">args</data><data key="text">args</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="678"><data key="reference">otherMethodCall</data><data key="identifier">writeInt</data><data key="text">writeInt</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="316"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectInputStream</data><data key="text">ObjectInputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="437"><data key="reference">java.lang.Object</data><data key="identifier">rvalue</data><data key="text">rvalue</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="558"><data key="reference">int</data><data key="identifier">i</data><data key="text">i</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="679"><data key="reference"></data><data key="text">-1</data><data key="type">UnaryExpr</data><data key="parentType">MethodCallExpr</data></node><node id="317"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="438"><data key="reference"></data><data key="text"> catch (NotSerializableException e) {
    logging2(e.toString());
}</data><data key="type">CatchClause</data><data key="parentType">TryStmt</data></node><node id="559"><data key="reference">java.lang.Object</data><data key="identifier">a</data><data key="text">a</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="318"><data key="reference"></data><data key="text">new ObjectInputStream(ins)</data><data key="type">ObjectCreationExpr</data><data key="parentType">VariableDeclarator</data></node><node id="439"><data key="reference"></data><data key="modifier"></data><data key="text">NotSerializableException e</data><data key="type">Parameter</data><data key="parentType">CatchClause</data></node><node id="319"><data key="reference"></data><data key="text">ObjectInputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="680"><data key="reference"></data><data key="identifier">1</data><data key="text">1</data><data key="type">IntegerLiteralExpr</data><data key="parentType">UnaryExpr</data></node><node id="560"><data key="reference"></data><data key="text">return args;</data><data key="type">ReturnStmt</data><data key="parentType">BlockStmt</data></node><node id="681"><data key="reference"></data><data key="text">out.writeUTF("error")</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="440"><data key="reference"></data><data key="text">NotSerializableException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="561"><data key="reference">java.lang.Object[]</data><data key="identifier">args</data><data key="text">args</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="682"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="320"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectInputStream</data><data key="text">ObjectInputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="441"><data key="reference">nonQualifiedClassName</data><data key="identifier">NotSerializableException</data><data key="text">NotSerializableException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="562"><data key="reference"></data><data key="modifier">private</data><data key="text">private Object convertRvalue(Object rvalue) throws CannotCompileException {
    if (rvalue == null)
        // the return type is void.
        return null;
    String classname = rvalue.getClass().getName();
    if (stubGen.isProxyClass(classname))
        return new RemoteRef(exportObject(null, rvalue), classname);
    else
        return rvalue;
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="683"><data key="reference">otherMethodCall</data><data key="identifier">writeUTF</data><data key="text">writeUTF</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="200"><data key="reference"></data><data key="text">eo.object</data><data key="type">FieldAccessExpr</data><data key="parentType">AssignExpr</data></node><node id="321"><data key="reference">java.io.InputStream</data><data key="identifier">ins</data><data key="text">ins</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="442"><data key="reference">java.io.NotSerializableException</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="563"><data key="reference">userDefinedMethodName</data><data key="identifier">convertRvalue</data><data key="text">convertRvalue</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="684"><data key="reference"></data><data key="identifier">error</data><data key="text">"error"</data><data key="type">StringLiteralExpr</data><data key="parentType">MethodCallExpr</data></node><node id="201"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="322"><data key="reference"></data><data key="modifier"></data><data key="text">int objectId = in.readInt()</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="443"><data key="reference"></data><data key="text">{
    logging2(e.toString());
}</data><data key="type">BlockStmt</data><data key="parentType">CatchClause</data></node><node id="564"><data key="reference"></data><data key="modifier"></data><data key="text">Object rvalue</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="685"><data key="reference"></data><data key="text">{
    logging2(name);
    out.writeInt(found.identifier);
    out.writeUTF(found.object.getClass().getName());
}</data><data key="type">BlockStmt</data><data key="parentType">IfStmt</data></node><node id="202"><data key="reference">java.lang.Object</data><data key="identifier">object</data><data key="text">object</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="323"><data key="reference"></data><data key="text">objectId = in.readInt()</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="444"><data key="reference"></data><data key="text">logging2(e.toString())</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="565"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="686"><data key="reference"></data><data key="text">logging2(name)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="203"><data key="reference">java.lang.Object</data><data key="identifier">obj</data><data key="text">obj</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="324"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">VariableDeclarator</data></node><node id="445"><data key="reference">otherMethodCall</data><data key="identifier">logging2</data><data key="text">logging2</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="566"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="687"><data key="reference">otherMethodCall</data><data key="identifier">logging2</data><data key="text">logging2</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="204"><data key="reference"></data><data key="identifier">=</data><data key="text">eo.methods = clazz.getMethods()</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="325"><data key="reference">int</data><data key="identifier">objectId</data><data key="text">objectId</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="446"><data key="reference"></data><data key="text">e.toString()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="567"><data key="reference">java.lang.Object</data><data key="identifier">rvalue</data><data key="text">rvalue</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="688"><data key="reference">java.lang.String</data><data key="identifier">name</data><data key="text">name</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="205"><data key="reference"></data><data key="text">eo.methods</data><data key="type">FieldAccessExpr</data><data key="parentType">AssignExpr</data></node><node id="326"><data key="reference"></data><data key="text">in.readInt()</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="447"><data key="reference">java.io.NotSerializableException</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="568"><data key="reference"></data><data key="text">CannotCompileException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="689"><data key="reference"></data><data key="text">out.writeInt(found.identifier)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="206"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="327"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="448"><data key="reference">otherMethodCall</data><data key="identifier">toString</data><data key="text">toString</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="569"><data key="reference">nonQualifiedClassName</data><data key="identifier">CannotCompileException</data><data key="text">CannotCompileException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="207"><data key="reference">java.lang.reflect.Method[]</data><data key="identifier">methods</data><data key="text">methods</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="328"><data key="reference">otherMethodCall</data><data key="identifier">readInt</data><data key="text">readInt</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="449"><data key="reference"></data><data key="text"> catch (InvalidClassException e) {
    logging2(e.toString());
}</data><data key="type">CatchClause</data><data key="parentType">TryStmt</data></node><node id="208"><data key="reference"></data><data key="text">clazz.getMethods()</data><data key="type">MethodCallExpr</data><data key="parentType">AssignExpr</data></node><node id="329"><data key="reference"></data><data key="modifier"></data><data key="text">int methodId = in.readInt()</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="209"><data key="reference">java.lang.Class</data><data key="identifier">clazz</data><data key="text">clazz</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="690"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="570"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="691"><data key="reference">otherMethodCall</data><data key="identifier">writeInt</data><data key="text">writeInt</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="450"><data key="reference"></data><data key="modifier"></data><data key="text">InvalidClassException e</data><data key="type">Parameter</data><data key="parentType">CatchClause</data></node><node id="571"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="692"><data key="reference"></data><data key="text">found.identifier</data><data key="type">FieldAccessExpr</data><data key="parentType">MethodCallExpr</data></node><node id="330"><data key="reference"></data><data key="text">methodId = in.readInt()</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="451"><data key="reference"></data><data key="text">InvalidClassException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="572"><data key="reference"></data><data key="text">{
    if (rvalue == null)
        // the return type is void.
        return null;
    String classname = rvalue.getClass().getName();
    if (stubGen.isProxyClass(classname))
        return new RemoteRef(exportObject(null, rvalue), classname);
    else
        return rvalue;
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="693"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">found</data><data key="text">found</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="210"><data key="reference">otherMethodCall</data><data key="identifier">getMethods</data><data key="text">getMethods</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="331"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">VariableDeclarator</data></node><node id="452"><data key="reference">nonQualifiedClassName</data><data key="identifier">InvalidClassException</data><data key="text">InvalidClassException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="573"><data key="reference"></data><data key="text">if (rvalue == null)
    // the return type is void.
    return null;</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="694"><data key="reference">int</data><data key="identifier">identifier</data><data key="text">identifier</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="211"><data key="reference"></data><data key="text">exportedObjects.addElement(eo)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="332"><data key="reference">int</data><data key="identifier">methodId</data><data key="text">methodId</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="453"><data key="reference">java.io.InvalidClassException</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="574"><data key="reference"></data><data key="text">rvalue == null</data><data key="type">BinaryExpr</data><data key="parentType">IfStmt</data></node><node id="695"><data key="reference"></data><data key="text">out.writeUTF(found.object.getClass().getName())</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="212"><data key="reference">java.util.Vector</data><data key="identifier">exportedObjects</data><data key="text">exportedObjects</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="333"><data key="reference"></data><data key="text">in.readInt()</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="454"><data key="reference"></data><data key="text">{
    logging2(e.toString());
}</data><data key="type">BlockStmt</data><data key="parentType">CatchClause</data></node><node id="575"><data key="reference">java.lang.Object</data><data key="identifier">rvalue</data><data key="text">rvalue</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="696"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="213"><data key="reference">otherMethodCall</data><data key="identifier">addElement</data><data key="text">addElement</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="334"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="455"><data key="reference"></data><data key="text">logging2(e.toString())</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="576"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">BinaryExpr</data></node><node id="697"><data key="reference">otherMethodCall</data><data key="identifier">writeUTF</data><data key="text">writeUTF</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="214"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="335"><data key="reference">otherMethodCall</data><data key="identifier">readInt</data><data key="text">readInt</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="456"><data key="reference">otherMethodCall</data><data key="identifier">logging2</data><data key="text">logging2</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="577"><data key="reference"></data><data key="text">// the return type is void.
return null;</data><data key="type">ReturnStmt</data><data key="parentType">IfStmt</data></node><node id="698"><data key="reference"></data><data key="text">found.object.getClass().getName()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="215"><data key="reference"></data><data key="identifier">=</data><data key="text">eo.identifier = exportedObjects.size() - 1</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="336"><data key="reference"></data><data key="modifier"></data><data key="text">Exception err = null</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="457"><data key="reference"></data><data key="text">e.toString()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="578"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">ReturnStmt</data></node><node id="699"><data key="reference"></data><data key="text">found.object.getClass()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="216"><data key="reference"></data><data key="text">eo.identifier</data><data key="type">FieldAccessExpr</data><data key="parentType">AssignExpr</data></node><node id="337"><data key="reference"></data><data key="text">err = null</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="458"><data key="reference">java.io.InvalidClassException</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="579"><data key="reference"></data><data key="modifier"></data><data key="text">String classname = rvalue.getClass().getName()</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="217"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="338"><data key="reference"></data><data key="text">Exception</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="459"><data key="reference">otherMethodCall</data><data key="identifier">toString</data><data key="text">toString</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="218"><data key="reference">int</data><data key="identifier">identifier</data><data key="text">identifier</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="339"><data key="reference">nonQualifiedClassName</data><data key="identifier">Exception</data><data key="text">Exception</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="219"><data key="reference"></data><data key="text">exportedObjects.size() - 1</data><data key="type">BinaryExpr</data><data key="parentType">AssignExpr</data></node><node id="580"><data key="reference"></data><data key="text">classname = rvalue.getClass().getName()</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="460"><data key="reference"></data><data key="text">out.flush()</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="581"><data key="reference"></data><data key="text">String</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="340"><data key="reference">java.lang.Exception</data><data key="identifier">err</data><data key="text">err</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="461"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="582"><data key="reference">nonQualifiedClassName</data><data key="identifier">String</data><data key="text">String</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="220"><data key="reference"></data><data key="text">exportedObjects.size()</data><data key="type">MethodCallExpr</data><data key="parentType">BinaryExpr</data></node><node id="341"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">VariableDeclarator</data></node><node id="462"><data key="reference">otherMethodCall</data><data key="identifier">flush</data><data key="text">flush</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="583"><data key="reference">java.lang.String</data><data key="identifier">classname</data><data key="text">classname</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="100"><data key="reference"></data><data key="modifier"></data><data key="text">int port</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="221"><data key="reference">java.util.Vector</data><data key="identifier">exportedObjects</data><data key="text">exportedObjects</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="342"><data key="reference"></data><data key="modifier"></data><data key="text">Object rvalue = null</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="463"><data key="reference"></data><data key="text">out.close()</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="584"><data key="reference"></data><data key="text">rvalue.getClass().getName()</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="101"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">Parameter</data></node><node id="222"><data key="reference">otherMethodCall</data><data key="identifier">size</data><data key="text">size</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="343"><data key="reference"></data><data key="text">rvalue = null</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="464"><data key="reference">java.io.ObjectOutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="585"><data key="reference"></data><data key="text">rvalue.getClass()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="102"><data key="reference">int</data><data key="identifier">port</data><data key="text">port</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="223"><data key="reference"></data><data key="identifier">1</data><data key="text">1</data><data key="type">IntegerLiteralExpr</data><data key="parentType">BinaryExpr</data></node><node id="344"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="465"><data key="reference">otherMethodCall</data><data key="identifier">close</data><data key="text">close</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="586"><data key="reference">java.lang.Object</data><data key="identifier">rvalue</data><data key="text">rvalue</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="103"><data key="reference"></data><data key="modifier"></data><data key="text">ClassPool src</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="224"><data key="reference"></data><data key="text">if (name != null)
    exportedNames.put(name, eo);</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="345"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="466"><data key="reference"></data><data key="text">in.close()</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="587"><data key="reference">otherMethodCall</data><data key="identifier">getClass</data><data key="text">getClass</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="104"><data key="reference"></data><data key="text">ClassPool</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="225"><data key="reference"></data><data key="text">name != null</data><data key="type">BinaryExpr</data><data key="parentType">IfStmt</data></node><node id="346"><data key="reference">java.lang.Object</data><data key="identifier">rvalue</data><data key="text">rvalue</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="467"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="588"><data key="reference">otherMethodCall</data><data key="identifier">getName</data><data key="text">getName</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="105"><data key="reference">nonQualifiedClassName</data><data key="identifier">ClassPool</data><data key="text">ClassPool</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="226"><data key="reference">java.lang.String</data><data key="identifier">name</data><data key="text">name</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="347"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">VariableDeclarator</data></node><node id="468"><data key="reference">otherMethodCall</data><data key="identifier">close</data><data key="text">close</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="589"><data key="reference"></data><data key="text">if (stubGen.isProxyClass(classname))
    return new RemoteRef(exportObject(null, rvalue), classname);
else
    return rvalue;</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="106"><data key="reference">javassist.ClassPool</data><data key="identifier">src</data><data key="text">src</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="227"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">BinaryExpr</data></node><node id="348"><data key="reference"></data><data key="text">try {
    ExportedObject eo = (ExportedObject) exportedObjects.elementAt(objectId);
    Object[] args = readParameters(in);
    rvalue = convertRvalue(eo.methods[methodId].invoke(eo.object, args));
} catch (Exception e) {
    err = e;
    logging2(e.toString());
}</data><data key="type">TryStmt</data><data key="parentType">BlockStmt</data></node><node id="469"><data key="reference"></data><data key="modifier">private</data><data key="text">private Object[] readParameters(ObjectInputStream in) throws IOException, ClassNotFoundException {
    int n = in.readInt();
    Object[] args = new Object[n];
    for (int i = 0; i &lt; n; ++i) {
        Object a = in.readObject();
        if (a instanceof RemoteRef) {
            RemoteRef ref = (RemoteRef) a;
            ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid);
            a = eo.object;
        }
        args[i] = a;
    }
    return args;
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="107"><data key="reference"></data><data key="text">IOException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="228"><data key="reference"></data><data key="text">exportedNames.put(name, eo)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="349"><data key="reference"></data><data key="text">{
    ExportedObject eo = (ExportedObject) exportedObjects.elementAt(objectId);
    Object[] args = readParameters(in);
    rvalue = convertRvalue(eo.methods[methodId].invoke(eo.object, args));
}</data><data key="type">BlockStmt</data><data key="parentType">TryStmt</data></node><node id="108"><data key="reference">nonQualifiedClassName</data><data key="identifier">IOException</data><data key="text">IOException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="229"><data key="reference">java.util.Hashtable</data><data key="identifier">exportedNames</data><data key="text">exportedNames</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="109"><data key="reference"></data><data key="text">NotFoundException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="590"><data key="reference"></data><data key="text">stubGen.isProxyClass(classname)</data><data key="type">MethodCallExpr</data><data key="parentType">IfStmt</data></node><node id="470"><data key="reference">userDefinedMethodName</data><data key="identifier">readParameters</data><data key="text">readParameters</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="591"><data key="reference">javassist.tools.rmi.StubGenerator</data><data key="identifier">stubGen</data><data key="text">stubGen</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="350"><data key="reference"></data><data key="modifier"></data><data key="text">ExportedObject eo = (ExportedObject) exportedObjects.elementAt(objectId)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="471"><data key="reference"></data><data key="modifier"></data><data key="text">ObjectInputStream in</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="592"><data key="reference">otherMethodCall</data><data key="identifier">isProxyClass</data><data key="text">isProxyClass</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="230"><data key="reference">otherMethodCall</data><data key="identifier">put</data><data key="text">put</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="351"><data key="reference"></data><data key="text">eo = (ExportedObject) exportedObjects.elementAt(objectId)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="472"><data key="reference"></data><data key="text">ObjectInputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="593"><data key="reference">java.lang.String</data><data key="identifier">classname</data><data key="text">classname</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="110"><data key="reference">nonQualifiedClassName</data><data key="identifier">NotFoundException</data><data key="text">NotFoundException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="231"><data key="reference">java.lang.String</data><data key="identifier">name</data><data key="text">name</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="352"><data key="reference"></data><data key="text">ExportedObject</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="473"><data key="reference">nonQualifiedClassName</data><data key="identifier">ObjectInputStream</data><data key="text">ObjectInputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="594"><data key="reference"></data><data key="text">return new RemoteRef(exportObject(null, rvalue), classname);</data><data key="type">ReturnStmt</data><data key="parentType">IfStmt</data></node><node id="111"><data key="reference"></data><data key="text">CannotCompileException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="232"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="353"><data key="reference">nonQualifiedClassName</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="474"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="595"><data key="reference"></data><data key="text">new RemoteRef(exportObject(null, rvalue), classname)</data><data key="type">ObjectCreationExpr</data><data key="parentType">ReturnStmt</data></node><node id="112"><data key="reference">nonQualifiedClassName</data><data key="identifier">CannotCompileException</data><data key="text">CannotCompileException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="233"><data key="reference"></data><data key="text">try {
    stubGen.makeProxyClass(clazz);
} catch (NotFoundException e) {
    throw new CannotCompileException(e);
}</data><data key="type">TryStmt</data><data key="parentType">BlockStmt</data></node><node id="354"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="475"><data key="reference"></data><data key="text">IOException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="596"><data key="reference"></data><data key="text">RemoteRef</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="113"><data key="reference"></data><data key="text">{
    this(new ClassPool(src), new StubGenerator(), port);
}</data><data key="type">BlockStmt</data><data key="parentType">ConstructorDeclaration</data></node><node id="234"><data key="reference"></data><data key="text">{
    stubGen.makeProxyClass(clazz);
}</data><data key="type">BlockStmt</data><data key="parentType">TryStmt</data></node><node id="355"><data key="reference"></data><data key="text">(ExportedObject) exportedObjects.elementAt(objectId)</data><data key="type">CastExpr</data><data key="parentType">VariableDeclarator</data></node><node id="476"><data key="reference">nonQualifiedClassName</data><data key="identifier">IOException</data><data key="text">IOException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="597"><data key="reference">nonQualifiedClassName</data><data key="identifier">RemoteRef</data><data key="text">RemoteRef</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="114"><data key="reference"></data><data key="text">this(new ClassPool(src), new StubGenerator(), port);</data><data key="type">ExplicitConstructorInvocationStmt</data><data key="parentType">BlockStmt</data></node><node id="235"><data key="reference"></data><data key="text">stubGen.makeProxyClass(clazz)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="356"><data key="reference"></data><data key="text">ExportedObject</data><data key="type">ClassOrInterfaceType</data><data key="parentType">CastExpr</data></node><node id="477"><data key="reference"></data><data key="text">ClassNotFoundException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="598"><data key="reference"></data><data key="text">exportObject(null, rvalue)</data><data key="type">MethodCallExpr</data><data key="parentType">ObjectCreationExpr</data></node><node id="115"><data key="reference"></data><data key="text">new ClassPool(src)</data><data key="type">ObjectCreationExpr</data><data key="parentType">ExplicitConstructorInvocationStmt</data></node><node id="236"><data key="reference">javassist.tools.rmi.StubGenerator</data><data key="identifier">stubGen</data><data key="text">stubGen</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="357"><data key="reference">nonQualifiedClassName</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="478"><data key="reference">nonQualifiedClassName</data><data key="identifier">ClassNotFoundException</data><data key="text">ClassNotFoundException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="599"><data key="reference">otherMethodCall</data><data key="identifier">exportObject</data><data key="text">exportObject</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="116"><data key="reference"></data><data key="text">ClassPool</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="237"><data key="reference">otherMethodCall</data><data key="identifier">makeProxyClass</data><data key="text">makeProxyClass</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="358"><data key="reference"></data><data key="text">exportedObjects.elementAt(objectId)</data><data key="type">MethodCallExpr</data><data key="parentType">CastExpr</data></node><node id="479"><data key="reference"></data><data key="text">Object[]</data><data key="type">ArrayType</data><data key="parentType">MethodDeclaration</data></node><node id="117"><data key="reference">nonQualifiedClassName</data><data key="identifier">ClassPool</data><data key="text">ClassPool</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="238"><data key="reference">java.lang.Class</data><data key="identifier">clazz</data><data key="text">clazz</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="359"><data key="reference">java.util.Vector</data><data key="identifier">exportedObjects</data><data key="text">exportedObjects</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="118"><data key="reference">javassist.ClassPool</data><data key="identifier">src</data><data key="text">src</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="239"><data key="reference"></data><data key="text"> catch (NotFoundException e) {
    throw new CannotCompileException(e);
}</data><data key="type">CatchClause</data><data key="parentType">TryStmt</data></node><node id="119"><data key="reference"></data><data key="text">new StubGenerator()</data><data key="type">ObjectCreationExpr</data><data key="parentType">ExplicitConstructorInvocationStmt</data></node><node id="10"><data key="reference"></data><data key="identifier">web</data><data key="text">javassist.tools.web</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="11"><data key="reference"></data><data key="identifier">tools</data><data key="text">javassist.tools</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="12"><data key="reference"></data><data key="identifier">javassist</data><data key="text">javassist</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="13"><data key="reference"></data><data key="text">import javassist.CannotCompileException;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="14"><data key="reference"></data><data key="identifier">CannotCompileException</data><data key="text">javassist.CannotCompileException</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="15"><data key="reference"></data><data key="identifier">javassist</data><data key="text">javassist</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="16"><data key="reference"></data><data key="text">import javassist.NotFoundException;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="17"><data key="reference"></data><data key="identifier">NotFoundException</data><data key="text">javassist.NotFoundException</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="18"><data key="reference"></data><data key="identifier">javassist</data><data key="text">javassist</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="19"><data key="reference"></data><data key="text">import javassist.ClassPool;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="480"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ArrayType</data></node><node id="360"><data key="reference">otherMethodCall</data><data key="identifier">elementAt</data><data key="text">elementAt</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="481"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="240"><data key="reference"></data><data key="modifier"></data><data key="text">NotFoundException e</data><data key="type">Parameter</data><data key="parentType">CatchClause</data></node><node id="361"><data key="reference">int</data><data key="identifier">objectId</data><data key="text">objectId</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="482"><data key="reference"></data><data key="text">{
    int n = in.readInt();
    Object[] args = new Object[n];
    for (int i = 0; i &lt; n; ++i) {
        Object a = in.readObject();
        if (a instanceof RemoteRef) {
            RemoteRef ref = (RemoteRef) a;
            ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid);
            a = eo.object;
        }
        args[i] = a;
    }
    return args;
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="120"><data key="reference"></data><data key="text">StubGenerator</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="241"><data key="reference"></data><data key="text">NotFoundException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="362"><data key="reference"></data><data key="modifier"></data><data key="text">Object[] args = readParameters(in)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="483"><data key="reference"></data><data key="modifier"></data><data key="text">int n = in.readInt()</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="121"><data key="reference">nonQualifiedClassName</data><data key="identifier">StubGenerator</data><data key="text">StubGenerator</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="242"><data key="reference">nonQualifiedClassName</data><data key="identifier">NotFoundException</data><data key="text">NotFoundException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="363"><data key="reference"></data><data key="text">args = readParameters(in)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="484"><data key="reference"></data><data key="text">n = in.readInt()</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="122"><data key="reference">int</data><data key="identifier">port</data><data key="text">port</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="243"><data key="reference">javassist.NotFoundException</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="364"><data key="reference"></data><data key="text">Object[]</data><data key="type">ArrayType</data><data key="parentType">VariableDeclarator</data></node><node id="485"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">VariableDeclarator</data></node><node id="123"><data key="reference"></data><data key="modifier">private</data><data key="text">private AppletServer(ClassPool loader, StubGenerator gen, int port) throws IOException, NotFoundException, CannotCompileException {
    super(port);
    exportedNames = new Hashtable();
    exportedObjects = new Vector();
    stubGen = gen;
    addTranslator(loader, gen);
}</data><data key="type">ConstructorDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="244"><data key="reference"></data><data key="text">{
    throw new CannotCompileException(e);
}</data><data key="type">BlockStmt</data><data key="parentType">CatchClause</data></node><node id="365"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ArrayType</data></node><node id="486"><data key="reference">int</data><data key="identifier">n</data><data key="text">n</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="124"><data key="reference">userDefinedMethodName</data><data key="identifier">AppletServer</data><data key="text">AppletServer</data><data key="type">SimpleName</data><data key="parentType">ConstructorDeclaration</data></node><node id="245"><data key="reference"></data><data key="text">throw new CannotCompileException(e);</data><data key="type">ThrowStmt</data><data key="parentType">BlockStmt</data></node><node id="366"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="487"><data key="reference"></data><data key="text">in.readInt()</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="125"><data key="reference"></data><data key="modifier"></data><data key="text">ClassPool loader</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="246"><data key="reference"></data><data key="text">new CannotCompileException(e)</data><data key="type">ObjectCreationExpr</data><data key="parentType">ThrowStmt</data></node><node id="367"><data key="reference">java.lang.Object[]</data><data key="identifier">args</data><data key="text">args</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="488"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="126"><data key="reference"></data><data key="text">ClassPool</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="247"><data key="reference"></data><data key="text">CannotCompileException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="368"><data key="reference"></data><data key="text">readParameters(in)</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="489"><data key="reference">otherMethodCall</data><data key="identifier">readInt</data><data key="text">readInt</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="127"><data key="reference">nonQualifiedClassName</data><data key="identifier">ClassPool</data><data key="text">ClassPool</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="248"><data key="reference">nonQualifiedClassName</data><data key="identifier">CannotCompileException</data><data key="text">CannotCompileException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="369"><data key="reference">otherMethodCall</data><data key="identifier">readParameters</data><data key="text">readParameters</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="128"><data key="reference">javassist.ClassPool</data><data key="identifier">loader</data><data key="text">loader</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="249"><data key="reference">javassist.NotFoundException</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="129"><data key="reference"></data><data key="modifier"></data><data key="text">StubGenerator gen</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="20"><data key="reference"></data><data key="identifier">ClassPool</data><data key="text">javassist.ClassPool</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="21"><data key="reference"></data><data key="identifier">javassist</data><data key="text">javassist</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="22"><data key="reference"></data><data key="text">import java.lang.reflect.Method;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="23"><data key="reference"></data><data key="identifier">Method</data><data key="text">java.lang.reflect.Method</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="24"><data key="reference"></data><data key="identifier">reflect</data><data key="text">java.lang.reflect</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="25"><data key="reference"></data><data key="identifier">lang</data><data key="text">java.lang</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="26"><data key="reference"></data><data key="identifier">java</data><data key="text">java</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="27"><data key="reference"></data><data key="text">import java.util.Hashtable;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="28"><data key="reference"></data><data key="identifier">Hashtable</data><data key="text">java.util.Hashtable</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="29"><data key="reference"></data><data key="identifier">util</data><data key="text">java.util</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="490"><data key="reference"></data><data key="modifier"></data><data key="text">Object[] args = new Object[n]</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="370"><data key="reference">java.io.ObjectInputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="491"><data key="reference"></data><data key="text">args = new Object[n]</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="250"><data key="reference"></data><data key="text">return eo.identifier;</data><data key="type">ReturnStmt</data><data key="parentType">BlockStmt</data></node><node id="371"><data key="reference"></data><data key="identifier">=</data><data key="text">rvalue = convertRvalue(eo.methods[methodId].invoke(eo.object, args))</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="492"><data key="reference"></data><data key="text">Object[]</data><data key="type">ArrayType</data><data key="parentType">VariableDeclarator</data></node><node id="130"><data key="reference"></data><data key="text">StubGenerator</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="251"><data key="reference"></data><data key="text">eo.identifier</data><data key="type">FieldAccessExpr</data><data key="parentType">ReturnStmt</data></node><node id="372"><data key="reference">java.lang.Object</data><data key="identifier">rvalue</data><data key="text">rvalue</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="493"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ArrayType</data></node><node id="131"><data key="reference">nonQualifiedClassName</data><data key="identifier">StubGenerator</data><data key="text">StubGenerator</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="252"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="373"><data key="reference"></data><data key="text">convertRvalue(eo.methods[methodId].invoke(eo.object, args))</data><data key="type">MethodCallExpr</data><data key="parentType">AssignExpr</data></node><node id="494"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="132"><data key="reference">javassist.tools.rmi.StubGenerator</data><data key="identifier">gen</data><data key="text">gen</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="253"><data key="reference">int</data><data key="identifier">identifier</data><data key="text">identifier</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="374"><data key="reference">otherMethodCall</data><data key="identifier">convertRvalue</data><data key="text">convertRvalue</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="495"><data key="reference">java.lang.Object[]</data><data key="identifier">args</data><data key="text">args</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="133"><data key="reference"></data><data key="modifier"></data><data key="text">int port</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="254"><data key="reference"></data><data key="modifier">public</data><data key="text">/**
 * Processes a request from a web browser (an ObjectImporter).
 */
public void doReply(InputStream in, OutputStream out, String cmd) throws IOException, BadHttpRequest {
    if (cmd.startsWith("POST /rmi "))
        processRMI(in, out);
    else if (cmd.startsWith("POST /lookup "))
        lookupName(cmd, in, out);
    else
        super.doReply(in, out, cmd);
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="375"><data key="reference"></data><data key="text">eo.methods[methodId].invoke(eo.object, args)</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="496"><data key="reference"></data><data key="text">new Object[n]</data><data key="type">ArrayCreationExpr</data><data key="parentType">VariableDeclarator</data></node><node id="134"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">Parameter</data></node><node id="255"><data key="reference">userDefinedMethodName</data><data key="identifier">doReply</data><data key="text">doReply</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="376"><data key="reference"></data><data key="text">eo.methods[methodId]</data><data key="type">ArrayAccessExpr</data><data key="parentType">MethodCallExpr</data></node><node id="497"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ArrayCreationExpr</data></node><node id="135"><data key="reference">int</data><data key="identifier">port</data><data key="text">port</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="256"><data key="reference"></data><data key="modifier"></data><data key="text">InputStream in</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="377"><data key="reference"></data><data key="text">eo.methods</data><data key="type">FieldAccessExpr</data><data key="parentType">ArrayAccessExpr</data></node><node id="498"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="136"><data key="reference"></data><data key="text">IOException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="257"><data key="reference"></data><data key="text">InputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="378"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="499"><data key="reference"></data><data key="text">[n]</data><data key="type">ArrayCreationLevel</data><data key="parentType">ArrayCreationExpr</data></node><node id="137"><data key="reference">nonQualifiedClassName</data><data key="identifier">IOException</data><data key="text">IOException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="258"><data key="reference">nonQualifiedClassName</data><data key="identifier">InputStream</data><data key="text">InputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="379"><data key="reference">java.lang.reflect.Method[]</data><data key="identifier">methods</data><data key="text">methods</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="138"><data key="reference"></data><data key="text">NotFoundException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="259"><data key="reference">java.io.InputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="139"><data key="reference">nonQualifiedClassName</data><data key="identifier">NotFoundException</data><data key="text">NotFoundException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="30"><data key="reference"></data><data key="identifier">java</data><data key="text">java</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="31"><data key="reference"></data><data key="text">import java.util.Vector;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="32"><data key="reference"></data><data key="identifier">Vector</data><data key="text">java.util.Vector</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="33"><data key="reference"></data><data key="identifier">util</data><data key="text">java.util</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="34"><data key="reference"></data><data key="identifier">java</data><data key="text">java</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="35"><data key="reference"></data><data key="modifier">public</data><data key="text">/**
 * An AppletServer object is a web server that an ObjectImporter
 * communicates with.  It makes the objects specified by
 * &lt;code&gt;exportObject()&lt;/code&gt; remotely accessible from applets.
 * If the classes of the exported objects are requested by the client-side
 * JVM, this web server sends proxy classes for the requested classes.
 *
 * @see javassist.tools.rmi.ObjectImporter
 */
public class AppletServer extends Webserver {

    private StubGenerator stubGen;

    private Hashtable exportedNames;

    private Vector exportedObjects;

    private static final byte[] okHeader = "HTTP/1.0 200 OK\r\n\r\n".getBytes();

    /**
     * Constructs a web server.
     *
     * @param port      port number
     */
    public AppletServer(String port) throws IOException, NotFoundException, CannotCompileException {
        this(Integer.parseInt(port));
    }

    /**
     * Constructs a web server.
     *
     * @param port      port number
     */
    public AppletServer(int port) throws IOException, NotFoundException, CannotCompileException {
        this(ClassPool.getDefault(), new StubGenerator(), port);
    }

    /**
     * Constructs a web server.
     *
     * @param port      port number
     * @param src       the source of classs files.
     */
    public AppletServer(int port, ClassPool src) throws IOException, NotFoundException, CannotCompileException {
        this(new ClassPool(src), new StubGenerator(), port);
    }

    private AppletServer(ClassPool loader, StubGenerator gen, int port) throws IOException, NotFoundException, CannotCompileException {
        super(port);
        exportedNames = new Hashtable();
        exportedObjects = new Vector();
        stubGen = gen;
        addTranslator(loader, gen);
    }

    /**
     * Begins the HTTP service.
     */
    public void run() {
        super.run();
    }

    /**
     * Exports an object.
     * This method produces the bytecode of the proxy class used
     * to access the exported object.  A remote applet can load
     * the proxy class and call a method on the exported object.
     *
     * @param name      the name used for looking the object up.
     * @param obj       the exported object.
     * @return          the object identifier
     *
     * @see javassist.tools.rmi.ObjectImporter#lookupObject(String)
     */
    public synchronized int exportObject(String name, Object obj) throws CannotCompileException {
        Class clazz = obj.getClass();
        ExportedObject eo = new ExportedObject();
        eo.object = obj;
        eo.methods = clazz.getMethods();
        exportedObjects.addElement(eo);
        eo.identifier = exportedObjects.size() - 1;
        if (name != null)
            exportedNames.put(name, eo);
        try {
            stubGen.makeProxyClass(clazz);
        } catch (NotFoundException e) {
            throw new CannotCompileException(e);
        }
        return eo.identifier;
    }

    /**
     * Processes a request from a web browser (an ObjectImporter).
     */
    public void doReply(InputStream in, OutputStream out, String cmd) throws IOException, BadHttpRequest {
        if (cmd.startsWith("POST /rmi "))
            processRMI(in, out);
        else if (cmd.startsWith("POST /lookup "))
            lookupName(cmd, in, out);
        else
            super.doReply(in, out, cmd);
    }

    private void processRMI(InputStream ins, OutputStream outs) throws IOException {
        ObjectInputStream in = new ObjectInputStream(ins);
        int objectId = in.readInt();
        int methodId = in.readInt();
        Exception err = null;
        Object rvalue = null;
        try {
            ExportedObject eo = (ExportedObject) exportedObjects.elementAt(objectId);
            Object[] args = readParameters(in);
            rvalue = convertRvalue(eo.methods[methodId].invoke(eo.object, args));
        } catch (Exception e) {
            err = e;
            logging2(e.toString());
        }
        outs.write(okHeader);
        ObjectOutputStream out = new ObjectOutputStream(outs);
        if (err != null) {
            out.writeBoolean(false);
            out.writeUTF(err.toString());
        } else
            try {
                out.writeBoolean(true);
                out.writeObject(rvalue);
            } catch (NotSerializableException e) {
                logging2(e.toString());
            } catch (InvalidClassException e) {
                logging2(e.toString());
            }
        out.flush();
        out.close();
        in.close();
    }

    private Object[] readParameters(ObjectInputStream in) throws IOException, ClassNotFoundException {
        int n = in.readInt();
        Object[] args = new Object[n];
        for (int i = 0; i &lt; n; ++i) {
            Object a = in.readObject();
            if (a instanceof RemoteRef) {
                RemoteRef ref = (RemoteRef) a;
                ExportedObject eo = (ExportedObject) exportedObjects.elementAt(ref.oid);
                a = eo.object;
            }
            args[i] = a;
        }
        return args;
    }

    private Object convertRvalue(Object rvalue) throws CannotCompileException {
        if (rvalue == null)
            // the return type is void.
            return null;
        String classname = rvalue.getClass().getName();
        if (stubGen.isProxyClass(classname))
            return new RemoteRef(exportObject(null, rvalue), classname);
        else
            return rvalue;
    }

    private void lookupName(String cmd, InputStream ins, OutputStream outs) throws IOException {
        ObjectInputStream in = new ObjectInputStream(ins);
        String name = DataInputStream.readUTF(in);
        ExportedObject found = (ExportedObject) exportedNames.get(name);
        outs.write(okHeader);
        ObjectOutputStream out = new ObjectOutputStream(outs);
        if (found == null) {
            logging2(name + "not found.");
            // error code
            out.writeInt(-1);
            out.writeUTF("error");
        } else {
            logging2(name);
            out.writeInt(found.identifier);
            out.writeUTF(found.object.getClass().getName());
        }
        out.flush();
        out.close();
        in.close();
    }
}</data><data key="type">ClassOrInterfaceDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="36"><data key="reference">javassist.tools.web.Webserver,java.lang.Object</data><data key="identifier">AppletServer</data><data key="text">AppletServer</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="37"><data key="reference"></data><data key="modifier">private</data><data key="text">private StubGenerator stubGen;</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="38"><data key="reference"></data><data key="text">stubGen</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="39"><data key="reference"></data><data key="text">StubGenerator</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="380"><data key="reference">int</data><data key="identifier">methodId</data><data key="text">methodId</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="260"><data key="reference"></data><data key="modifier"></data><data key="text">OutputStream out</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="381"><data key="reference">otherMethodCall</data><data key="identifier">invoke</data><data key="text">invoke</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="140"><data key="reference"></data><data key="text">CannotCompileException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="261"><data key="reference"></data><data key="text">OutputStream</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="382"><data key="reference"></data><data key="text">eo.object</data><data key="type">FieldAccessExpr</data><data key="parentType">MethodCallExpr</data></node><node id="141"><data key="reference">nonQualifiedClassName</data><data key="identifier">CannotCompileException</data><data key="text">CannotCompileException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="262"><data key="reference">nonQualifiedClassName</data><data key="identifier">OutputStream</data><data key="text">OutputStream</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="383"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="142"><data key="reference"></data><data key="text">{
    super(port);
    exportedNames = new Hashtable();
    exportedObjects = new Vector();
    stubGen = gen;
    addTranslator(loader, gen);
}</data><data key="type">BlockStmt</data><data key="parentType">ConstructorDeclaration</data></node><node id="263"><data key="reference">java.io.OutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="384"><data key="reference">java.lang.Object</data><data key="identifier">object</data><data key="text">object</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="143"><data key="reference"></data><data key="text">super(port);</data><data key="type">ExplicitConstructorInvocationStmt</data><data key="parentType">BlockStmt</data></node><node id="264"><data key="reference"></data><data key="modifier"></data><data key="text">String cmd</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="385"><data key="reference">java.lang.Object[]</data><data key="identifier">args</data><data key="text">args</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="144"><data key="reference">int</data><data key="identifier">port</data><data key="text">port</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="265"><data key="reference"></data><data key="text">String</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="386"><data key="reference"></data><data key="text"> catch (Exception e) {
    err = e;
    logging2(e.toString());
}</data><data key="type">CatchClause</data><data key="parentType">TryStmt</data></node><node id="145"><data key="reference"></data><data key="identifier">=</data><data key="text">exportedNames = new Hashtable()</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="266"><data key="reference">nonQualifiedClassName</data><data key="identifier">String</data><data key="text">String</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="387"><data key="reference"></data><data key="modifier"></data><data key="text">Exception e</data><data key="type">Parameter</data><data key="parentType">CatchClause</data></node><node id="146"><data key="reference">java.util.Hashtable</data><data key="identifier">exportedNames</data><data key="text">exportedNames</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="267"><data key="reference">java.lang.String</data><data key="identifier">cmd</data><data key="text">cmd</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="388"><data key="reference"></data><data key="text">Exception</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="147"><data key="reference"></data><data key="text">new Hashtable()</data><data key="type">ObjectCreationExpr</data><data key="parentType">AssignExpr</data></node><node id="268"><data key="reference"></data><data key="text">IOException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="389"><data key="reference">nonQualifiedClassName</data><data key="identifier">Exception</data><data key="text">Exception</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="148"><data key="reference"></data><data key="text">Hashtable</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="269"><data key="reference">nonQualifiedClassName</data><data key="identifier">IOException</data><data key="text">IOException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="149"><data key="reference">nonQualifiedClassName</data><data key="identifier">Hashtable</data><data key="text">Hashtable</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="40"><data key="reference">nonQualifiedClassName</data><data key="identifier">StubGenerator</data><data key="text">StubGenerator</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="41"><data key="reference">javassist.tools.rmi.StubGenerator</data><data key="identifier">stubGen</data><data key="text">stubGen</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="42"><data key="reference"></data><data key="modifier">private</data><data key="text">private Hashtable exportedNames;</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="43"><data key="reference"></data><data key="text">exportedNames</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="44"><data key="reference"></data><data key="text">Hashtable</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="45"><data key="reference">nonQualifiedClassName</data><data key="identifier">Hashtable</data><data key="text">Hashtable</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="46"><data key="reference">java.util.Hashtable</data><data key="identifier">exportedNames</data><data key="text">exportedNames</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="47"><data key="reference"></data><data key="modifier">private</data><data key="text">private Vector exportedObjects;</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="48"><data key="reference"></data><data key="text">exportedObjects</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="49"><data key="reference"></data><data key="text">Vector</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="390"><data key="reference">java.lang.Exception</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="270"><data key="reference"></data><data key="text">BadHttpRequest</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="391"><data key="reference"></data><data key="text">{
    err = e;
    logging2(e.toString());
}</data><data key="type">BlockStmt</data><data key="parentType">CatchClause</data></node><node id="150"><data key="reference"></data><data key="identifier">=</data><data key="text">exportedObjects = new Vector()</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="271"><data key="reference">nonQualifiedClassName</data><data key="identifier">BadHttpRequest</data><data key="text">BadHttpRequest</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="392"><data key="reference"></data><data key="identifier">=</data><data key="text">err = e</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="151"><data key="reference">java.util.Vector</data><data key="identifier">exportedObjects</data><data key="text">exportedObjects</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="272"><data key="reference"></data><data key="text">void</data><data key="type">VoidType</data><data key="parentType">MethodDeclaration</data></node><node id="393"><data key="reference">java.lang.Exception</data><data key="identifier">err</data><data key="text">err</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="152"><data key="reference"></data><data key="text">new Vector()</data><data key="type">ObjectCreationExpr</data><data key="parentType">AssignExpr</data></node><node id="273"><data key="reference"></data><data key="text">{
    if (cmd.startsWith("POST /rmi "))
        processRMI(in, out);
    else if (cmd.startsWith("POST /lookup "))
        lookupName(cmd, in, out);
    else
        super.doReply(in, out, cmd);
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="394"><data key="reference">java.lang.Exception</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="153"><data key="reference"></data><data key="text">Vector</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="274"><data key="reference"></data><data key="text">if (cmd.startsWith("POST /rmi "))
    processRMI(in, out);
else if (cmd.startsWith("POST /lookup "))
    lookupName(cmd, in, out);
else
    super.doReply(in, out, cmd);</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="395"><data key="reference"></data><data key="text">logging2(e.toString())</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="154"><data key="reference">nonQualifiedClassName</data><data key="identifier">Vector</data><data key="text">Vector</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="275"><data key="reference"></data><data key="text">cmd.startsWith("POST /rmi ")</data><data key="type">MethodCallExpr</data><data key="parentType">IfStmt</data></node><node id="396"><data key="reference">otherMethodCall</data><data key="identifier">logging2</data><data key="text">logging2</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="155"><data key="reference"></data><data key="identifier">=</data><data key="text">stubGen = gen</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="276"><data key="reference">java.lang.String</data><data key="identifier">cmd</data><data key="text">cmd</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="397"><data key="reference"></data><data key="text">e.toString()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="156"><data key="reference">javassist.tools.rmi.StubGenerator</data><data key="identifier">stubGen</data><data key="text">stubGen</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="277"><data key="reference">otherMethodCall</data><data key="identifier">startsWith</data><data key="text">startsWith</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="398"><data key="reference">java.lang.Exception</data><data key="identifier">e</data><data key="text">e</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="157"><data key="reference">javassist.tools.rmi.StubGenerator</data><data key="identifier">gen</data><data key="text">gen</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="278"><data key="reference"></data><data key="identifier">POST /rmi </data><data key="text">"POST /rmi "</data><data key="type">StringLiteralExpr</data><data key="parentType">MethodCallExpr</data></node><node id="399"><data key="reference">otherMethodCall</data><data key="identifier">toString</data><data key="text">toString</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="158"><data key="reference"></data><data key="text">addTranslator(loader, gen)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="279"><data key="reference"></data><data key="text">processRMI(in, out)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="159"><data key="reference">otherMethodCall</data><data key="identifier">addTranslator</data><data key="text">addTranslator</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="50"><data key="reference">nonQualifiedClassName</data><data key="identifier">Vector</data><data key="text">Vector</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="51"><data key="reference">java.util.Vector</data><data key="identifier">exportedObjects</data><data key="text">exportedObjects</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="52"><data key="reference"></data><data key="modifier">private,static,final</data><data key="text">private static final byte[] okHeader = "HTTP/1.0 200 OK\r\n\r\n".getBytes();</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="53"><data key="reference"></data><data key="text">okHeader = "HTTP/1.0 200 OK\r\n\r\n".getBytes()</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="54"><data key="reference"></data><data key="text">byte[]</data><data key="type">ArrayType</data><data key="parentType">VariableDeclarator</data></node><node id="55"><data key="reference"></data><data key="identifier">byte</data><data key="text">byte</data><data key="type">PrimitiveType</data><data key="parentType">ArrayType</data></node><node id="56"><data key="reference">byte[]</data><data key="identifier">okHeader</data><data key="text">okHeader</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="57"><data key="reference"></data><data key="text">"HTTP/1.0 200 OK\r\n\r\n".getBytes()</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="58"><data key="reference"></data><data key="identifier">HTTP/1.0 200 OK\r\n\r\n</data><data key="text">"HTTP/1.0 200 OK\r\n\r\n"</data><data key="type">StringLiteralExpr</data><data key="parentType">MethodCallExpr</data></node><node id="59"><data key="reference">otherMethodCall</data><data key="identifier">getBytes</data><data key="text">getBytes</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="280"><data key="reference">otherMethodCall</data><data key="identifier">processRMI</data><data key="text">processRMI</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="160"><data key="reference">javassist.ClassPool</data><data key="identifier">loader</data><data key="text">loader</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="281"><data key="reference">java.io.InputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="161"><data key="reference">javassist.tools.rmi.StubGenerator</data><data key="identifier">gen</data><data key="text">gen</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="282"><data key="reference">java.io.OutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="162"><data key="reference"></data><data key="modifier">public</data><data key="text">/**
 * Begins the HTTP service.
 */
public void run() {
    super.run();
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="283"><data key="reference"></data><data key="text">if (cmd.startsWith("POST /lookup "))
    lookupName(cmd, in, out);
else
    super.doReply(in, out, cmd);</data><data key="type">IfStmt</data><data key="parentType">IfStmt</data></node><node id="163"><data key="reference">userDefinedMethodName</data><data key="identifier">run</data><data key="text">run</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="284"><data key="reference"></data><data key="text">cmd.startsWith("POST /lookup ")</data><data key="type">MethodCallExpr</data><data key="parentType">IfStmt</data></node><node id="164"><data key="reference"></data><data key="text">void</data><data key="type">VoidType</data><data key="parentType">MethodDeclaration</data></node><node id="285"><data key="reference">java.lang.String</data><data key="identifier">cmd</data><data key="text">cmd</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="165"><data key="reference"></data><data key="text">{
    super.run();
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="286"><data key="reference">otherMethodCall</data><data key="identifier">startsWith</data><data key="text">startsWith</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="166"><data key="reference"></data><data key="text">super.run()</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="287"><data key="reference"></data><data key="identifier">POST /lookup </data><data key="text">"POST /lookup "</data><data key="type">StringLiteralExpr</data><data key="parentType">MethodCallExpr</data></node><node id="167"><data key="reference"></data><data key="text">super</data><data key="type">SuperExpr</data><data key="parentType">MethodCallExpr</data></node><node id="288"><data key="reference"></data><data key="text">lookupName(cmd, in, out)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="168"><data key="reference">otherMethodCall</data><data key="identifier">run</data><data key="text">run</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="289"><data key="reference">otherMethodCall</data><data key="identifier">lookupName</data><data key="text">lookupName</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="169"><data key="reference"></data><data key="modifier">public,synchronized</data><data key="text">/**
 * Exports an object.
 * This method produces the bytecode of the proxy class used
 * to access the exported object.  A remote applet can load
 * the proxy class and call a method on the exported object.
 *
 * @param name      the name used for looking the object up.
 * @param obj       the exported object.
 * @return          the object identifier
 *
 * @see javassist.tools.rmi.ObjectImporter#lookupObject(String)
 */
public synchronized int exportObject(String name, Object obj) throws CannotCompileException {
    Class clazz = obj.getClass();
    ExportedObject eo = new ExportedObject();
    eo.object = obj;
    eo.methods = clazz.getMethods();
    exportedObjects.addElement(eo);
    eo.identifier = exportedObjects.size() - 1;
    if (name != null)
        exportedNames.put(name, eo);
    try {
        stubGen.makeProxyClass(clazz);
    } catch (NotFoundException e) {
        throw new CannotCompileException(e);
    }
    return eo.identifier;
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="60"><data key="reference"></data><data key="modifier">public</data><data key="text">/**
 * Constructs a web server.
 *
 * @param port      port number
 */
public AppletServer(String port) throws IOException, NotFoundException, CannotCompileException {
    this(Integer.parseInt(port));
}</data><data key="type">ConstructorDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="61"><data key="reference">userDefinedMethodName</data><data key="identifier">AppletServer</data><data key="text">AppletServer</data><data key="type">SimpleName</data><data key="parentType">ConstructorDeclaration</data></node><node id="62"><data key="reference"></data><data key="modifier"></data><data key="text">String port</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="63"><data key="reference"></data><data key="text">String</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="64"><data key="reference">nonQualifiedClassName</data><data key="identifier">String</data><data key="text">String</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="65"><data key="reference">java.lang.String</data><data key="identifier">port</data><data key="text">port</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="66"><data key="reference"></data><data key="text">IOException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="67"><data key="reference">nonQualifiedClassName</data><data key="identifier">IOException</data><data key="text">IOException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="68"><data key="reference"></data><data key="text">NotFoundException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="69"><data key="reference">nonQualifiedClassName</data><data key="identifier">NotFoundException</data><data key="text">NotFoundException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="290"><data key="reference">java.lang.String</data><data key="identifier">cmd</data><data key="text">cmd</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="170"><data key="reference">userDefinedMethodName</data><data key="identifier">exportObject</data><data key="text">exportObject</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="291"><data key="reference">java.io.InputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="171"><data key="reference"></data><data key="modifier"></data><data key="text">String name</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="292"><data key="reference">java.io.OutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="172"><data key="reference"></data><data key="text">String</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="293"><data key="reference"></data><data key="text">super.doReply(in, out, cmd)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="173"><data key="reference">nonQualifiedClassName</data><data key="identifier">String</data><data key="text">String</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="294"><data key="reference"></data><data key="text">super</data><data key="type">SuperExpr</data><data key="parentType">MethodCallExpr</data></node><node id="174"><data key="reference">java.lang.String</data><data key="identifier">name</data><data key="text">name</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="295"><data key="reference">otherMethodCall</data><data key="identifier">doReply</data><data key="text">doReply</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="175"><data key="reference"></data><data key="modifier"></data><data key="text">Object obj</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="296"><data key="reference">java.io.InputStream</data><data key="identifier">in</data><data key="text">in</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="176"><data key="reference"></data><data key="text">Object</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="297"><data key="reference">java.io.OutputStream</data><data key="identifier">out</data><data key="text">out</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="177"><data key="reference">nonQualifiedClassName</data><data key="identifier">Object</data><data key="text">Object</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="298"><data key="reference">java.lang.String</data><data key="identifier">cmd</data><data key="text">cmd</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="178"><data key="reference">java.lang.Object</data><data key="identifier">obj</data><data key="text">obj</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="299"><data key="reference"></data><data key="modifier">private</data><data key="text">private void processRMI(InputStream ins, OutputStream outs) throws IOException {
    ObjectInputStream in = new ObjectInputStream(ins);
    int objectId = in.readInt();
    int methodId = in.readInt();
    Exception err = null;
    Object rvalue = null;
    try {
        ExportedObject eo = (ExportedObject) exportedObjects.elementAt(objectId);
        Object[] args = readParameters(in);
        rvalue = convertRvalue(eo.methods[methodId].invoke(eo.object, args));
    } catch (Exception e) {
        err = e;
        logging2(e.toString());
    }
    outs.write(okHeader);
    ObjectOutputStream out = new ObjectOutputStream(outs);
    if (err != null) {
        out.writeBoolean(false);
        out.writeUTF(err.toString());
    } else
        try {
            out.writeBoolean(true);
            out.writeObject(rvalue);
        } catch (NotSerializableException e) {
            logging2(e.toString());
        } catch (InvalidClassException e) {
            logging2(e.toString());
        }
    out.flush();
    out.close();
    in.close();
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="179"><data key="reference"></data><data key="text">CannotCompileException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">MethodDeclaration</data></node><node id="70"><data key="reference"></data><data key="text">CannotCompileException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="71"><data key="reference">nonQualifiedClassName</data><data key="identifier">CannotCompileException</data><data key="text">CannotCompileException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="72"><data key="reference"></data><data key="text">{
    this(Integer.parseInt(port));
}</data><data key="type">BlockStmt</data><data key="parentType">ConstructorDeclaration</data></node><node id="73"><data key="reference"></data><data key="text">this(Integer.parseInt(port));</data><data key="type">ExplicitConstructorInvocationStmt</data><data key="parentType">BlockStmt</data></node><node id="74"><data key="reference"></data><data key="text">Integer.parseInt(port)</data><data key="type">MethodCallExpr</data><data key="parentType">ExplicitConstructorInvocationStmt</data></node><node id="75"><data key="reference">UnknownType</data><data key="identifier">Integer</data><data key="text">Integer</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="76"><data key="reference">otherMethodCall</data><data key="identifier">parseInt</data><data key="text">parseInt</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="77"><data key="reference">java.lang.String</data><data key="identifier">port</data><data key="text">port</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="78"><data key="reference"></data><data key="modifier">public</data><data key="text">/**
 * Constructs a web server.
 *
 * @param port      port number
 */
public AppletServer(int port) throws IOException, NotFoundException, CannotCompileException {
    this(ClassPool.getDefault(), new StubGenerator(), port);
}</data><data key="type">ConstructorDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="79"><data key="reference">userDefinedMethodName</data><data key="identifier">AppletServer</data><data key="text">AppletServer</data><data key="type">SimpleName</data><data key="parentType">ConstructorDeclaration</data></node><node id="180"><data key="reference">nonQualifiedClassName</data><data key="identifier">CannotCompileException</data><data key="text">CannotCompileException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="181"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">MethodDeclaration</data></node><node id="182"><data key="reference"></data><data key="text">{
    Class clazz = obj.getClass();
    ExportedObject eo = new ExportedObject();
    eo.object = obj;
    eo.methods = clazz.getMethods();
    exportedObjects.addElement(eo);
    eo.identifier = exportedObjects.size() - 1;
    if (name != null)
        exportedNames.put(name, eo);
    try {
        stubGen.makeProxyClass(clazz);
    } catch (NotFoundException e) {
        throw new CannotCompileException(e);
    }
    return eo.identifier;
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="183"><data key="reference"></data><data key="modifier"></data><data key="text">Class clazz = obj.getClass()</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="184"><data key="reference"></data><data key="text">clazz = obj.getClass()</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="185"><data key="reference"></data><data key="text">Class</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="186"><data key="reference">nonQualifiedClassName</data><data key="identifier">Class</data><data key="text">Class</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="187"><data key="reference">java.lang.Class</data><data key="identifier">clazz</data><data key="text">clazz</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="188"><data key="reference"></data><data key="text">obj.getClass()</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="189"><data key="reference">java.lang.Object</data><data key="identifier">obj</data><data key="text">obj</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="80"><data key="reference"></data><data key="modifier"></data><data key="text">int port</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="81"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">Parameter</data></node><node id="82"><data key="reference">int</data><data key="identifier">port</data><data key="text">port</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="83"><data key="reference"></data><data key="text">IOException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="84"><data key="reference">nonQualifiedClassName</data><data key="identifier">IOException</data><data key="text">IOException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="85"><data key="reference"></data><data key="text">NotFoundException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="86"><data key="reference">nonQualifiedClassName</data><data key="identifier">NotFoundException</data><data key="text">NotFoundException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="87"><data key="reference"></data><data key="text">CannotCompileException</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ConstructorDeclaration</data></node><node id="88"><data key="reference">nonQualifiedClassName</data><data key="identifier">CannotCompileException</data><data key="text">CannotCompileException</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="89"><data key="reference"></data><data key="text">{
    this(ClassPool.getDefault(), new StubGenerator(), port);
}</data><data key="type">BlockStmt</data><data key="parentType">ConstructorDeclaration</data></node><node id="190"><data key="reference">otherMethodCall</data><data key="identifier">getClass</data><data key="text">getClass</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="191"><data key="reference"></data><data key="modifier"></data><data key="text">ExportedObject eo = new ExportedObject()</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="192"><data key="reference"></data><data key="text">eo = new ExportedObject()</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="193"><data key="reference"></data><data key="text">ExportedObject</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="194"><data key="reference">nonQualifiedClassName</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="195"><data key="reference">javassist.tools.rmi.ExportedObject</data><data key="identifier">eo</data><data key="text">eo</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="196"><data key="reference"></data><data key="text">new ExportedObject()</data><data key="type">ObjectCreationExpr</data><data key="parentType">VariableDeclarator</data></node><node id="197"><data key="reference"></data><data key="text">ExportedObject</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="198"><data key="reference">nonQualifiedClassName</data><data key="identifier">ExportedObject</data><data key="text">ExportedObject</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="199"><data key="reference"></data><data key="identifier">=</data><data key="text">eo.object = obj</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="90"><data key="reference"></data><data key="text">this(ClassPool.getDefault(), new StubGenerator(), port);</data><data key="type">ExplicitConstructorInvocationStmt</data><data key="parentType">BlockStmt</data></node><node id="91"><data key="reference"></data><data key="text">ClassPool.getDefault()</data><data key="type">MethodCallExpr</data><data key="parentType">ExplicitConstructorInvocationStmt</data></node><node id="92"><data key="reference">UnknownType</data><data key="identifier">ClassPool</data><data key="text">ClassPool</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="93"><data key="reference">otherMethodCall</data><data key="identifier">getDefault</data><data key="text">getDefault</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="94"><data key="reference"></data><data key="text">new StubGenerator()</data><data key="type">ObjectCreationExpr</data><data key="parentType">ExplicitConstructorInvocationStmt</data></node><node id="95"><data key="reference"></data><data key="text">StubGenerator</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ObjectCreationExpr</data></node><node id="96"><data key="reference">nonQualifiedClassName</data><data key="identifier">StubGenerator</data><data key="text">StubGenerator</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="97"><data key="reference">int</data><data key="identifier">port</data><data key="text">port</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="98"><data key="reference"></data><data key="modifier">public</data><data key="text">/**
 * Constructs a web server.
 *
 * @param port      port number
 * @param src       the source of classs files.
 */
public AppletServer(int port, ClassPool src) throws IOException, NotFoundException, CannotCompileException {
    this(new ClassPool(src), new StubGenerator(), port);
}</data><data key="type">ConstructorDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="99"><data key="reference">userDefinedMethodName</data><data key="identifier">AppletServer</data><data key="text">AppletServer</data><data key="type">SimpleName</data><data key="parentType">ConstructorDeclaration</data></node><edge id="0" source="1" target="2" label="AST"><data key="type">AST</data></edge><edge id="22" source="1" target="19" label="AST"><data key="type">AST</data></edge><edge id="14" source="1" target="13" label="AST"><data key="type">AST</data></edge><edge id="26" source="1" target="22" label="AST"><data key="type">AST</data></edge><edge id="37" source="1" target="31" label="AST"><data key="type">AST</data></edge><edge id="5" source="1" target="6" label="AST"><data key="type">AST</data></edge><edge id="1355" source="1" target="716" label="AST"><data key="type">AST</data></edge><edge id="18" source="1" target="16" label="AST"><data key="type">AST</data></edge><edge id="9" source="1" target="9" label="AST"><data key="type">AST</data></edge><edge id="42" source="1" target="35" label="AST"><data key="type">AST</data></edge><edge id="32" source="1" target="27" label="AST"><data key="type">AST</data></edge><edge id="2" source="2" target="3" label="AST"><data key="type">AST</data></edge><edge id="1" source="2" target="6" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="3" source="3" target="4" label="AST"><data key="type">AST</data></edge><edge id="4" source="4" target="5" label="AST"><data key="type">AST</data></edge><edge id="7" source="6" target="7" label="AST"><data key="type">AST</data></edge><edge id="6" source="6" target="9" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="8" source="7" target="8" label="AST"><data key="type">AST</data></edge><edge id="11" source="9" target="10" label="AST"><data key="type">AST</data></edge><edge id="10" source="9" target="13" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1326" source="700" target="702" label="AST"><data key="type">AST</data></edge><edge id="1322" source="700" target="701" label="AST"><data key="type">AST</data></edge><edge id="1321" source="700" target="703" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1323" source="701" target="645" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1325" source="701" target="693" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1324" source="701" target="702" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1337" source="705" target="707" label="AST"><data key="type">AST</data></edge><edge id="1331" source="705" target="706" label="AST"><data key="type">AST</data></edge><edge id="1330" source="705" target="708" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1332" source="706" target="661" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1336" source="706" target="696" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1335" source="706" target="696" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1334" source="706" target="682" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1333" source="706" target="707" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1345" source="708" target="710" label="AST"><data key="type">AST</data></edge><edge id="1340" source="708" target="709" label="AST"><data key="type">AST</data></edge><edge id="1339" source="708" target="711" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1341" source="709" target="661" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1344" source="709" target="706" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1343" source="709" target="706" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1342" source="709" target="710" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1347" source="711" target="712" label="AST"><data key="type">AST</data></edge><edge id="1352" source="711" target="713" label="AST"><data key="type">AST</data></edge><edge id="1348" source="712" target="627" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1351" source="712" target="640" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1350" source="712" target="640" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1349" source="712" target="713" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1354" source="714" target="715" label="AST"><data key="type">AST</data></edge><edge id="1358" source="716" target="718" label="AST"><data key="type">AST</data></edge><edge id="1356" source="716" target="717" label="AST"><data key="type">AST</data></edge><edge id="1364" source="716" target="722" label="AST"><data key="type">AST</data></edge><edge id="1371" source="716" target="727" label="AST"><data key="type">AST</data></edge><edge id="1357" source="717" target="718" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1360" source="718" target="719" label="AST"><data key="type">AST</data></edge><edge id="1359" source="718" target="722" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1363" source="719" target="721" label="AST"><data key="type">AST</data></edge><edge id="1361" source="719" target="720" label="AST"><data key="type">AST</data></edge><edge id="1362" source="720" target="721" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1118" source="600" target="601" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1120" source="601" target="567" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1122" source="601" target="586" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1121" source="601" target="586" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1366" source="722" target="723" label="AST"><data key="type">AST</data></edge><edge id="1365" source="722" target="727" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1124" source="602" target="583" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1126" source="602" target="593" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1125" source="602" target="593" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1367" source="723" target="724" label="AST"><data key="type">AST</data></edge><edge id="1370" source="723" target="726" label="AST"><data key="type">AST</data></edge><edge id="1129" source="603" target="604" label="AST"><data key="type">AST</data></edge><edge id="1133" source="603" target="562" label="RETURNS_TO"><data key="type">RETURNS_TO</data></edge><edge id="1369" source="724" target="725" label="AST"><data key="type">AST</data></edge><edge id="1368" source="724" target="726" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1130" source="604" target="567" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1132" source="604" target="601" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1131" source="604" target="586" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1138" source="605" target="607" label="AST"><data key="type">AST</data></edge><edge id="1159" source="605" target="621" label="AST"><data key="type">AST</data></edge><edge id="1136" source="605" target="606" label="AST"><data key="type">AST</data></edge><edge id="1156" source="605" target="619" label="AST"><data key="type">AST</data></edge><edge id="1144" source="605" target="611" label="AST"><data key="type">AST</data></edge><edge id="1150" source="605" target="615" label="AST"><data key="type">AST</data></edge><edge id="1161" source="605" target="622" label="AST"><data key="type">AST</data></edge><edge id="1135" source="605" target="714" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1137" source="606" target="607" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1372" source="727" target="728" label="AST"><data key="type">AST</data></edge><edge id="1143" source="607" target="610" label="AST"><data key="type">AST</data></edge><edge id="1140" source="607" target="608" label="AST"><data key="type">AST</data></edge><edge id="1139" source="607" target="611" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1377" source="728" target="732" label="AST"><data key="type">AST</data></edge><edge id="1373" source="728" target="729" label="AST"><data key="type">AST</data></edge><edge id="1142" source="608" target="609" label="AST"><data key="type">AST</data></edge><edge id="1141" source="608" target="610" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1375" source="729" target="730" label="AST"><data key="type">AST</data></edge><edge id="1374" source="729" target="732" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1376" source="730" target="731" label="AST"><data key="type">AST</data></edge><edge id="1149" source="611" target="614" label="AST"><data key="type">AST</data></edge><edge id="1146" source="611" target="612" label="AST"><data key="type">AST</data></edge><edge id="1145" source="611" target="615" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1148" source="612" target="613" label="AST"><data key="type">AST</data></edge><edge id="1147" source="612" target="614" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1155" source="615" target="618" label="AST"><data key="type">AST</data></edge><edge id="1152" source="615" target="616" label="AST"><data key="type">AST</data></edge><edge id="1151" source="615" target="619" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1154" source="616" target="617" label="AST"><data key="type">AST</data></edge><edge id="1153" source="616" target="618" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1158" source="619" target="620" label="AST"><data key="type">AST</data></edge><edge id="1157" source="619" target="621" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="903" source="500" target="486" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="905" source="500" target="486" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="904" source="500" target="486" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1160" source="621" target="622" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="908" source="501" target="502" label="AST"><data key="type">AST</data></edge><edge id="930" source="501" target="510" label="AST"><data key="type">AST</data></edge><edge id="936" source="501" target="512" label="AST"><data key="type">AST</data></edge><edge id="916" source="501" target="507" label="AST"><data key="type">AST</data></edge><edge id="907" source="501" target="560" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1338" source="622" target="708" label="AST"><data key="type">AST</data></edge><edge id="1216" source="622" target="653" label="AST"><data key="type">AST</data></edge><edge id="1226" source="622" target="657" label="AST"><data key="type">AST</data></edge><edge id="1346" source="622" target="711" label="AST"><data key="type">AST</data></edge><edge id="1178" source="622" target="632" label="AST"><data key="type">AST</data></edge><edge id="1242" source="622" target="666" label="AST"><data key="type">AST</data></edge><edge id="1162" source="622" target="623" label="AST"><data key="type">AST</data></edge><edge id="1195" source="622" target="641" label="AST"><data key="type">AST</data></edge><edge id="1329" source="622" target="705" label="AST"><data key="type">AST</data></edge><edge id="910" source="502" target="503" label="AST"><data key="type">AST</data></edge><edge id="909" source="502" target="507" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1164" source="623" target="624" label="AST"><data key="type">AST</data></edge><edge id="1163" source="623" target="632" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="911" source="503" target="504" label="AST"><data key="type">AST</data></edge><edge id="913" source="503" target="505" label="AST"><data key="type">AST</data></edge><edge id="915" source="503" target="506" label="AST"><data key="type">AST</data></edge><edge id="1168" source="624" target="627" label="AST"><data key="type">AST</data></edge><edge id="1165" source="624" target="625" label="AST"><data key="type">AST</data></edge><edge id="1170" source="624" target="628" label="AST"><data key="type">AST</data></edge><edge id="912" source="504" target="505" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1167" source="625" target="626" label="AST"><data key="type">AST</data></edge><edge id="1166" source="625" target="627" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="914" source="505" target="506" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1169" source="627" target="628" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="918" source="507" target="508" label="AST"><data key="type">AST</data></edge><edge id="925" source="507" target="509" label="AST"><data key="type">AST</data></edge><edge id="917" source="507" target="510" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1174" source="628" target="631" label="AST"><data key="type">AST</data></edge><edge id="1171" source="628" target="629" label="AST"><data key="type">AST</data></edge><edge id="919" source="508" target="505" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="920" source="508" target="511" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="924" source="508" target="505" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="922" source="508" target="505" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="923" source="508" target="511" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="921" source="508" target="509" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1173" source="629" target="630" label="AST"><data key="type">AST</data></edge><edge id="1172" source="629" target="631" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="926" source="509" target="486" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="929" source="509" target="500" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="927" source="509" target="500" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="928" source="509" target="509" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="932" source="510" target="511" label="AST"><data key="type">AST</data></edge><edge id="931" source="510" target="512" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1175" source="631" target="614" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1177" source="631" target="614" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1176" source="631" target="614" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="933" source="511" target="558" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="935" source="511" target="508" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="934" source="511" target="558" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1180" source="632" target="633" label="AST"><data key="type">AST</data></edge><edge id="1179" source="632" target="641" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1018" source="512" target="555" label="AST"><data key="type">AST</data></edge><edge id="953" source="512" target="521" label="AST"><data key="type">AST</data></edge><edge id="937" source="512" target="513" label="AST"><data key="type">AST</data></edge><edge id="1186" source="633" target="637" label="AST"><data key="type">AST</data></edge><edge id="1184" source="633" target="636" label="AST"><data key="type">AST</data></edge><edge id="1181" source="633" target="634" label="AST"><data key="type">AST</data></edge><edge id="939" source="513" target="514" label="AST"><data key="type">AST</data></edge><edge id="938" source="513" target="521" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1183" source="634" target="635" label="AST"><data key="type">AST</data></edge><edge id="1182" source="634" target="636" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="940" source="514" target="515" label="AST"><data key="type">AST</data></edge><edge id="943" source="514" target="517" label="AST"><data key="type">AST</data></edge><edge id="945" source="514" target="518" label="AST"><data key="type">AST</data></edge><edge id="942" source="515" target="516" label="AST"><data key="type">AST</data></edge><edge id="941" source="515" target="517" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1185" source="636" target="637" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1189" source="637" target="639" label="AST"><data key="type">AST</data></edge><edge id="1187" source="637" target="638" label="AST"><data key="type">AST</data></edge><edge id="1191" source="637" target="640" label="AST"><data key="type">AST</data></edge><edge id="944" source="517" target="518" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1188" source="638" target="639" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="952" source="518" target="520" label="AST"><data key="type">AST</data></edge><edge id="946" source="518" target="519" label="AST"><data key="type">AST</data></edge><edge id="1190" source="639" target="640" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="947" source="519" target="474" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="951" source="519" target="488" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="950" source="519" target="519" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="949" source="519" target="488" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="948" source="519" target="520" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1192" source="640" target="627" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1194" source="640" target="627" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1193" source="640" target="627" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1197" source="641" target="642" label="AST"><data key="type">AST</data></edge><edge id="1196" source="641" target="653" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="710" source="400" target="401" label="AST"><data key="type">AST</data></edge><edge id="715" source="400" target="402" label="AST"><data key="type">AST</data></edge><edge id="717" source="400" target="403" label="AST"><data key="type">AST</data></edge><edge id="709" source="400" target="404" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="964" source="521" target="526" label="AST"><data key="type">AST</data></edge><edge id="955" source="521" target="522" label="AST"><data key="type">AST</data></edge><edge id="954" source="521" target="555" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1203" source="642" target="646" label="AST"><data key="type">AST</data></edge><edge id="1201" source="642" target="645" label="AST"><data key="type">AST</data></edge><edge id="1198" source="642" target="643" label="AST"><data key="type">AST</data></edge><edge id="711" source="401" target="308" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="714" source="401" target="308" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="713" source="401" target="308" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="712" source="401" target="402" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="962" source="522" target="524" label="AST"><data key="type">AST</data></edge><edge id="957" source="522" target="523" label="AST"><data key="type">AST</data></edge><edge id="956" source="522" target="526" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1200" source="643" target="644" label="AST"><data key="type">AST</data></edge><edge id="1199" source="643" target="645" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="716" source="402" target="403" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="958" source="523" target="517" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="961" source="523" target="517" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="960" source="523" target="517" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="959" source="523" target="524" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="963" source="524" target="525" label="AST"><data key="type">AST</data></edge><edge id="1202" source="645" target="646" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="720" source="404" target="405" label="AST"><data key="type">AST</data></edge><edge id="719" source="404" target="413" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1204" source="646" target="647" label="AST"><data key="type">AST</data></edge><edge id="1207" source="646" target="649" label="AST"><data key="type">AST</data></edge><edge id="721" source="405" target="406" label="AST"><data key="type">AST</data></edge><edge id="724" source="405" target="408" label="AST"><data key="type">AST</data></edge><edge id="726" source="405" target="409" label="AST"><data key="type">AST</data></edge><edge id="981" source="526" target="536" label="AST"><data key="type">AST</data></edge><edge id="1004" source="526" target="550" label="AST"><data key="type">AST</data></edge><edge id="965" source="526" target="527" label="AST"><data key="type">AST</data></edge><edge id="1206" source="647" target="648" label="AST"><data key="type">AST</data></edge><edge id="1205" source="647" target="649" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="723" source="406" target="407" label="AST"><data key="type">AST</data></edge><edge id="722" source="406" target="408" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="967" source="527" target="528" label="AST"><data key="type">AST</data></edge><edge id="966" source="527" target="536" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="971" source="528" target="531" label="AST"><data key="type">AST</data></edge><edge id="973" source="528" target="532" label="AST"><data key="type">AST</data></edge><edge id="968" source="528" target="529" label="AST"><data key="type">AST</data></edge><edge id="1212" source="649" target="652" label="AST"><data key="type">AST</data></edge><edge id="1210" source="649" target="651" label="AST"><data key="type">AST</data></edge><edge id="1208" source="649" target="650" label="AST"><data key="type">AST</data></edge><edge id="725" source="408" target="409" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="970" source="529" target="530" label="AST"><data key="type">AST</data></edge><edge id="969" source="529" target="531" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="730" source="409" target="412" label="AST"><data key="type">AST</data></edge><edge id="727" source="409" target="410" label="AST"><data key="type">AST</data></edge><edge id="1209" source="650" target="651" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1211" source="651" target="652" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="729" source="410" target="411" label="AST"><data key="type">AST</data></edge><edge id="728" source="410" target="412" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="972" source="531" target="532" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1213" source="652" target="636" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1215" source="652" target="636" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1214" source="652" target="636" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="974" source="532" target="533" label="AST"><data key="type">AST</data></edge><edge id="977" source="532" target="535" label="AST"><data key="type">AST</data></edge><edge id="1225" source="653" target="656" label="AST"><data key="type">AST</data></edge><edge id="1223" source="653" target="655" label="AST"><data key="type">AST</data></edge><edge id="1218" source="653" target="654" label="AST"><data key="type">AST</data></edge><edge id="1217" source="653" target="657" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="731" source="412" target="308" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="733" source="412" target="401" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="732" source="412" target="401" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="976" source="533" target="534" label="AST"><data key="type">AST</data></edge><edge id="975" source="533" target="535" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1219" source="654" target="618" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1222" source="654" target="618" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1221" source="654" target="618" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1220" source="654" target="655" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="771" source="413" target="428" label="AST"><data key="type">AST</data></edge><edge id="744" source="413" target="417" label="AST"><data key="type">AST</data></edge><edge id="736" source="413" target="414" label="AST"><data key="type">AST</data></edge><edge id="735" source="413" target="460" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1224" source="655" target="656" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="743" source="414" target="416" label="AST"><data key="type">AST</data></edge><edge id="738" source="414" target="415" label="AST"><data key="type">AST</data></edge><edge id="737" source="414" target="417" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="978" source="535" target="517" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="980" source="535" target="523" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="979" source="535" target="523" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="739" source="415" target="393" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="742" source="415" target="393" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="741" source="415" target="393" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="740" source="415" target="416" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="983" source="536" target="537" label="AST"><data key="type">AST</data></edge><edge id="982" source="536" target="550" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1228" source="657" target="658" label="AST"><data key="type">AST</data></edge><edge id="1227" source="657" target="666" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="984" source="537" target="538" label="AST"><data key="type">AST</data></edge><edge id="987" source="537" target="540" label="AST"><data key="type">AST</data></edge><edge id="989" source="537" target="541" label="AST"><data key="type">AST</data></edge><edge id="1234" source="658" target="662" label="AST"><data key="type">AST</data></edge><edge id="1232" source="658" target="661" label="AST"><data key="type">AST</data></edge><edge id="1229" source="658" target="659" label="AST"><data key="type">AST</data></edge><edge id="756" source="417" target="422" label="AST"><data key="type">AST</data></edge><edge id="746" source="417" target="418" label="AST"><data key="type">AST</data></edge><edge id="745" source="417" target="428" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="986" source="538" target="539" label="AST"><data key="type">AST</data></edge><edge id="985" source="538" target="540" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1231" source="659" target="660" label="AST"><data key="type">AST</data></edge><edge id="1230" source="659" target="661" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="753" source="418" target="420" label="AST"><data key="type">AST</data></edge><edge id="755" source="418" target="421" label="AST"><data key="type">AST</data></edge><edge id="748" source="418" target="419" label="AST"><data key="type">AST</data></edge><edge id="747" source="418" target="422" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="749" source="419" target="408" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="752" source="419" target="408" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="751" source="419" target="408" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="750" source="419" target="420" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="988" source="540" target="541" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1233" source="661" target="662" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="754" source="420" target="421" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="990" source="541" target="542" label="AST"><data key="type">AST</data></edge><edge id="993" source="541" target="544" label="AST"><data key="type">AST</data></edge><edge id="1238" source="662" target="665" label="AST"><data key="type">AST</data></edge><edge id="1235" source="662" target="663" label="AST"><data key="type">AST</data></edge><edge id="518" source="300" target="301" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="992" source="542" target="543" label="AST"><data key="type">AST</data></edge><edge id="991" source="542" target="544" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1237" source="663" target="664" label="AST"><data key="type">AST</data></edge><edge id="1236" source="663" target="665" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="521" source="301" target="302" label="AST"><data key="type">AST</data></edge><edge id="524" source="301" target="304" label="AST"><data key="type">AST</data></edge><edge id="520" source="301" target="305" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="762" source="422" target="424" label="AST"><data key="type">AST</data></edge><edge id="764" source="422" target="425" label="AST"><data key="type">AST</data></edge><edge id="757" source="422" target="423" label="AST"><data key="type">AST</data></edge><edge id="523" source="302" target="303" label="AST"><data key="type">AST</data></edge><edge id="522" source="302" target="304" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="758" source="423" target="408" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="761" source="423" target="419" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="760" source="423" target="419" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="759" source="423" target="424" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="994" source="544" target="545" label="AST"><data key="type">AST</data></edge><edge id="996" source="544" target="546" label="AST"><data key="type">AST</data></edge><edge id="998" source="544" target="547" label="AST"><data key="type">AST</data></edge><edge id="1239" source="665" target="618" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1241" source="665" target="654" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1240" source="665" target="654" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="763" source="424" target="425" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="995" source="545" target="546" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1244" source="666" target="667" label="AST"><data key="type">AST</data></edge><edge id="1252" source="666" target="670" label="AST"><data key="type">AST</data></edge><edge id="1285" source="666" target="685" label="AST"><data key="type">AST</data></edge><edge id="1243" source="666" target="705" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="770" source="425" target="427" label="AST"><data key="type">AST</data></edge><edge id="765" source="425" target="426" label="AST"><data key="type">AST</data></edge><edge id="997" source="546" target="547" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1246" source="667" target="668" label="AST"><data key="type">AST</data></edge><edge id="1251" source="667" target="669" label="AST"><data key="type">AST</data></edge><edge id="1245" source="667" target="670" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="530" source="305" target="308" label="AST"><data key="type">AST</data></edge><edge id="527" source="305" target="306" label="AST"><data key="type">AST</data></edge><edge id="526" source="305" target="309" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="766" source="426" target="393" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="769" source="426" target="415" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="768" source="426" target="415" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="767" source="426" target="427" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1003" source="547" target="549" label="AST"><data key="type">AST</data></edge><edge id="999" source="547" target="548" label="AST"><data key="type">AST</data></edge><edge id="1247" source="668" target="645" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1250" source="668" target="645" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1249" source="668" target="645" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1248" source="668" target="669" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="529" source="306" target="307" label="AST"><data key="type">AST</data></edge><edge id="528" source="306" target="308" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1000" source="548" target="531" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1002" source="548" target="531" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1001" source="548" target="549" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="772" source="428" target="429" label="AST"><data key="type">AST</data></edge><edge id="796" source="428" target="438" label="AST"><data key="type">AST</data></edge><edge id="813" source="428" target="449" label="AST"><data key="type">AST</data></edge><edge id="784" source="429" target="434" label="AST"><data key="type">AST</data></edge><edge id="774" source="429" target="430" label="AST"><data key="type">AST</data></edge><edge id="773" source="429" target="438" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="533" source="309" target="310" label="AST"><data key="type">AST</data></edge><edge id="532" source="309" target="311" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1254" source="670" target="671" label="AST"><data key="type">AST</data></edge><edge id="1265" source="670" target="676" label="AST"><data key="type">AST</data></edge><edge id="1276" source="670" target="681" label="AST"><data key="type">AST</data></edge><edge id="1253" source="670" target="685" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1005" source="550" target="551" label="AST"><data key="type">AST</data></edge><edge id="1012" source="550" target="552" label="AST"><data key="type">AST</data></edge><edge id="1258" source="671" target="673" label="AST"><data key="type">AST</data></edge><edge id="1256" source="671" target="672" label="AST"><data key="type">AST</data></edge><edge id="1255" source="671" target="676" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="781" source="430" target="432" label="AST"><data key="type">AST</data></edge><edge id="783" source="430" target="433" label="AST"><data key="type">AST</data></edge><edge id="776" source="430" target="431" label="AST"><data key="type">AST</data></edge><edge id="775" source="430" target="434" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1006" source="551" target="517" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1011" source="551" target="535" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1010" source="551" target="553" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="1009" source="551" target="554" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="1008" source="551" target="535" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1007" source="551" target="552" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1257" source="672" target="673" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="777" source="431" target="408" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="780" source="431" target="423" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="779" source="431" target="408" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="778" source="431" target="432" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1017" source="552" target="554" label="AST"><data key="type">AST</data></edge><edge id="1013" source="552" target="553" label="AST"><data key="type">AST</data></edge><edge id="1259" source="673" target="674" label="AST"><data key="type">AST</data></edge><edge id="1264" source="673" target="675" label="AST"><data key="type">AST</data></edge><edge id="535" source="311" target="312" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="782" source="432" target="433" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1014" source="553" target="540" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1016" source="553" target="540" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1015" source="553" target="554" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1260" source="674" target="636" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1263" source="674" target="652" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1262" source="674" target="652" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1261" source="674" target="675" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="553" source="312" target="322" label="AST"><data key="type">AST</data></edge><edge id="599" source="312" target="348" label="AST"><data key="type">AST</data></edge><edge id="567" source="312" target="329" label="AST"><data key="type">AST</data></edge><edge id="734" source="312" target="413" label="AST"><data key="type">AST</data></edge><edge id="537" source="312" target="313" label="AST"><data key="type">AST</data></edge><edge id="846" source="312" target="466" label="AST"><data key="type">AST</data></edge><edge id="590" source="312" target="342" label="AST"><data key="type">AST</data></edge><edge id="838" source="312" target="463" label="AST"><data key="type">AST</data></edge><edge id="581" source="312" target="336" label="AST"><data key="type">AST</data></edge><edge id="718" source="312" target="404" label="AST"><data key="type">AST</data></edge><edge id="708" source="312" target="400" label="AST"><data key="type">AST</data></edge><edge id="829" source="312" target="460" label="AST"><data key="type">AST</data></edge><edge id="539" source="313" target="314" label="AST"><data key="type">AST</data></edge><edge id="538" source="313" target="322" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="792" source="434" target="437" label="AST"><data key="type">AST</data></edge><edge id="785" source="434" target="435" label="AST"><data key="type">AST</data></edge><edge id="790" source="434" target="436" label="AST"><data key="type">AST</data></edge><edge id="1019" source="555" target="556" label="AST"><data key="type">AST</data></edge><edge id="1034" source="555" target="559" label="AST"><data key="type">AST</data></edge><edge id="1267" source="676" target="677" label="AST"><data key="type">AST</data></edge><edge id="1274" source="676" target="679" label="AST"><data key="type">AST</data></edge><edge id="1272" source="676" target="678" label="AST"><data key="type">AST</data></edge><edge id="1266" source="676" target="681" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="540" source="314" target="315" label="AST"><data key="type">AST</data></edge><edge id="543" source="314" target="317" label="AST"><data key="type">AST</data></edge><edge id="545" source="314" target="318" label="AST"><data key="type">AST</data></edge><edge id="786" source="435" target="408" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="789" source="435" target="431" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="788" source="435" target="431" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="787" source="435" target="436" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1029" source="556" target="558" label="AST"><data key="type">AST</data></edge><edge id="1021" source="556" target="557" label="AST"><data key="type">AST</data></edge><edge id="1020" source="556" target="559" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1268" source="677" target="661" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1271" source="677" target="661" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1270" source="677" target="661" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1269" source="677" target="678" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="542" source="315" target="316" label="AST"><data key="type">AST</data></edge><edge id="541" source="315" target="317" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="791" source="436" target="437" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1023" source="557" target="557" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1022" source="557" target="495" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1028" source="557" target="495" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1027" source="557" target="559" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="1026" source="557" target="557" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1025" source="557" target="495" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1024" source="557" target="558" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1273" source="678" target="679" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="793" source="437" target="372" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="795" source="437" target="372" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="794" source="437" target="372" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1031" source="558" target="511" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1030" source="558" target="505" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1033" source="558" target="511" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1032" source="558" target="508" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1275" source="679" target="680" label="AST"><data key="type">AST</data></edge><edge id="544" source="317" target="318" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="798" source="438" target="439" label="AST"><data key="type">AST</data></edge><edge id="804" source="438" target="443" label="AST"><data key="type">AST</data></edge><edge id="797" source="438" target="449" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1036" source="559" target="551" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1035" source="559" target="517" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1039" source="559" target="551" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1038" source="559" target="551" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1037" source="559" target="523" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="546" source="318" target="319" label="AST"><data key="type">AST</data></edge><edge id="549" source="318" target="321" label="AST"><data key="type">AST</data></edge><edge id="800" source="439" target="440" label="AST"><data key="type">AST</data></edge><edge id="803" source="439" target="442" label="AST"><data key="type">AST</data></edge><edge id="799" source="439" target="443" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="548" source="319" target="320" label="AST"><data key="type">AST</data></edge><edge id="547" source="319" target="321" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1041" source="560" target="561" label="AST"><data key="type">AST</data></edge><edge id="1047" source="560" target="469" label="RETURNS_TO"><data key="type">RETURNS_TO</data></edge><edge id="1277" source="681" target="682" label="AST"><data key="type">AST</data></edge><edge id="1284" source="681" target="684" label="AST"><data key="type">AST</data></edge><edge id="1282" source="681" target="683" label="AST"><data key="type">AST</data></edge><edge id="802" source="440" target="441" label="AST"><data key="type">AST</data></edge><edge id="801" source="440" target="442" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1043" source="561" target="557" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1042" source="561" target="495" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1046" source="561" target="557" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1045" source="561" target="557" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1044" source="561" target="495" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1278" source="682" target="661" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1281" source="682" target="677" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1280" source="682" target="677" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1279" source="682" target="683" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1058" source="562" target="568" label="AST"><data key="type">AST</data></edge><edge id="1064" source="562" target="572" label="AST"><data key="type">AST</data></edge><edge id="1052" source="562" target="564" label="AST"><data key="type">AST</data></edge><edge id="1050" source="562" target="563" label="AST"><data key="type">AST</data></edge><edge id="1061" source="562" target="570" label="AST"><data key="type">AST</data></edge><edge id="1049" source="562" target="605" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1283" source="683" target="684" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="300" source="200" target="202" label="AST"><data key="type">AST</data></edge><edge id="296" source="200" target="201" label="AST"><data key="type">AST</data></edge><edge id="295" source="200" target="203" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="550" source="321" target="304" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="552" source="321" target="304" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="551" source="321" target="304" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1051" source="563" target="564" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="297" source="201" target="195" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="299" source="201" target="195" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="298" source="201" target="202" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="555" source="322" target="323" label="AST"><data key="type">AST</data></edge><edge id="554" source="322" target="329" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="805" source="443" target="444" label="AST"><data key="type">AST</data></edge><edge id="1057" source="564" target="567" label="AST"><data key="type">AST</data></edge><edge id="1054" source="564" target="565" label="AST"><data key="type">AST</data></edge><edge id="1053" source="564" target="568" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1286" source="685" target="686" label="AST"><data key="type">AST</data></edge><edge id="1294" source="685" target="689" label="AST"><data key="type">AST</data></edge><edge id="1309" source="685" target="695" label="AST"><data key="type">AST</data></edge><edge id="301" source="202" target="203" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="556" source="323" target="324" label="AST"><data key="type">AST</data></edge><edge id="558" source="323" target="325" label="AST"><data key="type">AST</data></edge><edge id="560" source="323" target="326" label="AST"><data key="type">AST</data></edge><edge id="808" source="444" target="446" label="AST"><data key="type">AST</data></edge><edge id="806" source="444" target="445" label="AST"><data key="type">AST</data></edge><edge id="1056" source="565" target="566" label="AST"><data key="type">AST</data></edge><edge id="1055" source="565" target="567" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1288" source="686" target="687" label="AST"><data key="type">AST</data></edge><edge id="1290" source="686" target="688" label="AST"><data key="type">AST</data></edge><edge id="1287" source="686" target="689" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="303" source="203" target="178" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="305" source="203" target="189" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="304" source="203" target="189" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="557" source="324" target="325" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="807" source="445" target="446" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1289" source="687" target="688" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="316" source="204" target="208" label="AST"><data key="type">AST</data></edge><edge id="308" source="204" target="205" label="AST"><data key="type">AST</data></edge><edge id="307" source="204" target="211" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="559" source="325" target="326" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="809" source="446" target="447" label="AST"><data key="type">AST</data></edge><edge id="812" source="446" target="448" label="AST"><data key="type">AST</data></edge><edge id="1291" source="688" target="636" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1293" source="688" target="674" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1292" source="688" target="652" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="310" source="205" target="206" label="AST"><data key="type">AST</data></edge><edge id="314" source="205" target="207" label="AST"><data key="type">AST</data></edge><edge id="309" source="205" target="208" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="561" source="326" target="327" label="AST"><data key="type">AST</data></edge><edge id="566" source="326" target="328" label="AST"><data key="type">AST</data></edge><edge id="811" source="447" target="442" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="810" source="447" target="448" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1060" source="568" target="569" label="AST"><data key="type">AST</data></edge><edge id="1059" source="568" target="570" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1303" source="689" target="692" label="AST"><data key="type">AST</data></edge><edge id="1301" source="689" target="691" label="AST"><data key="type">AST</data></edge><edge id="1296" source="689" target="690" label="AST"><data key="type">AST</data></edge><edge id="1295" source="689" target="695" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="311" source="206" target="201" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="313" source="206" target="201" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="312" source="206" target="207" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="562" source="327" target="317" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="565" source="327" target="317" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="564" source="327" target="317" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="563" source="327" target="328" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="315" source="207" target="209" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="820" source="449" target="454" label="AST"><data key="type">AST</data></edge><edge id="814" source="449" target="450" label="AST"><data key="type">AST</data></edge><edge id="322" source="208" target="210" label="AST"><data key="type">AST</data></edge><edge id="317" source="208" target="209" label="AST"><data key="type">AST</data></edge><edge id="569" source="329" target="330" label="AST"><data key="type">AST</data></edge><edge id="568" source="329" target="336" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="318" source="209" target="187" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="321" source="209" target="187" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="320" source="209" target="187" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="319" source="209" target="210" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1297" source="690" target="661" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1300" source="690" target="682" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1299" source="690" target="661" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1298" source="690" target="691" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1063" source="570" target="571" label="AST"><data key="type">AST</data></edge><edge id="1062" source="570" target="572" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1302" source="691" target="692" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="819" source="450" target="453" label="AST"><data key="type">AST</data></edge><edge id="816" source="450" target="451" label="AST"><data key="type">AST</data></edge><edge id="815" source="450" target="454" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1304" source="692" target="693" label="AST"><data key="type">AST</data></edge><edge id="1308" source="692" target="694" label="AST"><data key="type">AST</data></edge><edge id="572" source="330" target="332" label="AST"><data key="type">AST</data></edge><edge id="574" source="330" target="333" label="AST"><data key="type">AST</data></edge><edge id="570" source="330" target="331" label="AST"><data key="type">AST</data></edge><edge id="818" source="451" target="452" label="AST"><data key="type">AST</data></edge><edge id="817" source="451" target="453" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1078" source="572" target="579" label="AST"><data key="type">AST</data></edge><edge id="1065" source="572" target="573" label="AST"><data key="type">AST</data></edge><edge id="1096" source="572" target="589" label="AST"><data key="type">AST</data></edge><edge id="1305" source="693" target="645" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1307" source="693" target="668" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1306" source="693" target="694" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="571" source="331" target="332" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1067" source="573" target="574" label="AST"><data key="type">AST</data></edge><edge id="1075" source="573" target="577" label="AST"><data key="type">AST</data></edge><edge id="1066" source="573" target="579" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="325" source="211" target="212" label="AST"><data key="type">AST</data></edge><edge id="327" source="211" target="213" label="AST"><data key="type">AST</data></edge><edge id="329" source="211" target="214" label="AST"><data key="type">AST</data></edge><edge id="324" source="211" target="215" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="573" source="332" target="333" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1069" source="574" target="575" label="AST"><data key="type">AST</data></edge><edge id="1074" source="574" target="576" label="AST"><data key="type">AST</data></edge><edge id="1068" source="574" target="577" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1315" source="695" target="697" label="AST"><data key="type">AST</data></edge><edge id="1310" source="695" target="696" label="AST"><data key="type">AST</data></edge><edge id="1317" source="695" target="698" label="AST"><data key="type">AST</data></edge><edge id="326" source="212" target="213" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="575" source="333" target="334" label="AST"><data key="type">AST</data></edge><edge id="580" source="333" target="335" label="AST"><data key="type">AST</data></edge><edge id="821" source="454" target="455" label="AST"><data key="type">AST</data></edge><edge id="1070" source="575" target="567" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1073" source="575" target="567" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1072" source="575" target="567" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1071" source="575" target="576" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1311" source="696" target="661" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1314" source="696" target="690" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1313" source="696" target="690" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1312" source="696" target="697" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="328" source="213" target="214" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="576" source="334" target="317" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="579" source="334" target="327" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="578" source="334" target="327" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="577" source="334" target="335" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="822" source="455" target="456" label="AST"><data key="type">AST</data></edge><edge id="824" source="455" target="457" label="AST"><data key="type">AST</data></edge><edge id="1316" source="697" target="698" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="330" source="214" target="206" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="332" source="214" target="195" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="331" source="214" target="206" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="823" source="456" target="457" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1076" source="577" target="578" label="AST"><data key="type">AST</data></edge><edge id="1077" source="577" target="562" label="RETURNS_TO"><data key="type">RETURNS_TO</data></edge><edge id="1318" source="698" target="699" label="AST"><data key="type">AST</data></edge><edge id="1328" source="698" target="704" label="AST"><data key="type">AST</data></edge><edge id="343" source="215" target="219" label="AST"><data key="type">AST</data></edge><edge id="335" source="215" target="216" label="AST"><data key="type">AST</data></edge><edge id="334" source="215" target="224" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="583" source="336" target="337" label="AST"><data key="type">AST</data></edge><edge id="582" source="336" target="342" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="825" source="457" target="458" label="AST"><data key="type">AST</data></edge><edge id="828" source="457" target="459" label="AST"><data key="type">AST</data></edge><edge id="1327" source="699" target="703" label="AST"><data key="type">AST</data></edge><edge id="1320" source="699" target="700" label="AST"><data key="type">AST</data></edge><edge id="1319" source="699" target="704" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="341" source="216" target="218" label="AST"><data key="type">AST</data></edge><edge id="337" source="216" target="217" label="AST"><data key="type">AST</data></edge><edge id="336" source="216" target="219" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="584" source="337" target="338" label="AST"><data key="type">AST</data></edge><edge id="587" source="337" target="340" label="AST"><data key="type">AST</data></edge><edge id="589" source="337" target="341" label="AST"><data key="type">AST</data></edge><edge id="827" source="458" target="453" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="826" source="458" target="459" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1080" source="579" target="580" label="AST"><data key="type">AST</data></edge><edge id="1079" source="579" target="589" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="338" source="217" target="206" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="340" source="217" target="214" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="339" source="217" target="218" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="586" source="338" target="339" label="AST"><data key="type">AST</data></edge><edge id="585" source="338" target="340" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="342" source="218" target="221" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="344" source="219" target="220" label="AST"><data key="type">AST</data></edge><edge id="349" source="219" target="223" label="AST"><data key="type">AST</data></edge><edge id="1086" source="580" target="584" label="AST"><data key="type">AST</data></edge><edge id="1084" source="580" target="583" label="AST"><data key="type">AST</data></edge><edge id="1081" source="580" target="581" label="AST"><data key="type">AST</data></edge><edge id="831" source="460" target="461" label="AST"><data key="type">AST</data></edge><edge id="837" source="460" target="462" label="AST"><data key="type">AST</data></edge><edge id="830" source="460" target="463" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1083" source="581" target="582" label="AST"><data key="type">AST</data></edge><edge id="1082" source="581" target="583" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="588" source="340" target="341" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="832" source="461" target="408" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="836" source="461" target="435" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="834" source="461" target="423" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="835" source="461" target="435" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="833" source="461" target="462" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="346" source="220" target="221" label="AST"><data key="type">AST</data></edge><edge id="348" source="220" target="222" label="AST"><data key="type">AST</data></edge><edge id="345" source="220" target="223" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1085" source="583" target="584" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="144" source="100" target="102" label="AST"><data key="type">AST</data></edge><edge id="142" source="100" target="101" label="AST"><data key="type">AST</data></edge><edge id="141" source="100" target="103" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="347" source="221" target="222" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="592" source="342" target="343" label="AST"><data key="type">AST</data></edge><edge id="591" source="342" target="348" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="840" source="463" target="464" label="AST"><data key="type">AST</data></edge><edge id="845" source="463" target="465" label="AST"><data key="type">AST</data></edge><edge id="839" source="463" target="466" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1087" source="584" target="585" label="AST"><data key="type">AST</data></edge><edge id="1095" source="584" target="588" label="AST"><data key="type">AST</data></edge><edge id="143" source="101" target="102" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="596" source="343" target="346" label="AST"><data key="type">AST</data></edge><edge id="598" source="343" target="347" label="AST"><data key="type">AST</data></edge><edge id="593" source="343" target="344" label="AST"><data key="type">AST</data></edge><edge id="841" source="464" target="408" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="844" source="464" target="461" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="843" source="464" target="461" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="842" source="464" target="465" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1089" source="585" target="586" label="AST"><data key="type">AST</data></edge><edge id="1094" source="585" target="587" label="AST"><data key="type">AST</data></edge><edge id="1088" source="585" target="588" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="595" source="344" target="345" label="AST"><data key="type">AST</data></edge><edge id="594" source="344" target="346" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1090" source="586" target="567" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1093" source="586" target="575" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1092" source="586" target="575" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1091" source="586" target="587" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="147" source="103" target="104" label="AST"><data key="type">AST</data></edge><edge id="150" source="103" target="106" label="AST"><data key="type">AST</data></edge><edge id="146" source="103" target="107" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="352" source="224" target="225" label="AST"><data key="type">AST</data></edge><edge id="360" source="224" target="228" label="AST"><data key="type">AST</data></edge><edge id="351" source="224" target="233" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="852" source="466" target="468" label="AST"><data key="type">AST</data></edge><edge id="847" source="466" target="467" label="AST"><data key="type">AST</data></edge><edge id="149" source="104" target="105" label="AST"><data key="type">AST</data></edge><edge id="148" source="104" target="106" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="354" source="225" target="226" label="AST"><data key="type">AST</data></edge><edge id="359" source="225" target="227" label="AST"><data key="type">AST</data></edge><edge id="353" source="225" target="228" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="597" source="346" target="347" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="848" source="467" target="317" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="851" source="467" target="370" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="850" source="467" target="370" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="849" source="467" target="468" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="355" source="226" target="174" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="358" source="226" target="174" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="357" source="226" target="174" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="356" source="226" target="227" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1107" source="589" target="594" label="AST"><data key="type">AST</data></edge><edge id="1128" source="589" target="603" label="AST"><data key="type">AST</data></edge><edge id="1097" source="589" target="590" label="AST"><data key="type">AST</data></edge><edge id="682" source="348" target="386" label="AST"><data key="type">AST</data></edge><edge id="601" source="348" target="349" label="AST"><data key="type">AST</data></edge><edge id="600" source="348" target="400" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="873" source="469" target="482" label="AST"><data key="type">AST</data></edge><edge id="863" source="469" target="475" label="AST"><data key="type">AST</data></edge><edge id="855" source="469" target="470" label="AST"><data key="type">AST</data></edge><edge id="866" source="469" target="477" label="AST"><data key="type">AST</data></edge><edge id="857" source="469" target="471" label="AST"><data key="type">AST</data></edge><edge id="869" source="469" target="479" label="AST"><data key="type">AST</data></edge><edge id="854" source="469" target="562" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="153" source="107" target="108" label="AST"><data key="type">AST</data></edge><edge id="152" source="107" target="109" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="363" source="228" target="230" label="AST"><data key="type">AST</data></edge><edge id="365" source="228" target="231" label="AST"><data key="type">AST</data></edge><edge id="370" source="228" target="232" label="AST"><data key="type">AST</data></edge><edge id="361" source="228" target="229" label="AST"><data key="type">AST</data></edge><edge id="640" source="349" target="371" label="AST"><data key="type">AST</data></edge><edge id="624" source="349" target="362" label="AST"><data key="type">AST</data></edge><edge id="603" source="349" target="350" label="AST"><data key="type">AST</data></edge><edge id="602" source="349" target="386" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="362" source="229" target="230" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="156" source="109" target="110" label="AST"><data key="type">AST</data></edge><edge id="155" source="109" target="111" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1103" source="590" target="593" label="AST"><data key="type">AST</data></edge><edge id="1101" source="590" target="592" label="AST"><data key="type">AST</data></edge><edge id="1099" source="590" target="591" label="AST"><data key="type">AST</data></edge><edge id="1098" source="590" target="594" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="856" source="470" target="471" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1100" source="591" target="592" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="605" source="350" target="351" label="AST"><data key="type">AST</data></edge><edge id="604" source="350" target="362" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="862" source="471" target="474" label="AST"><data key="type">AST</data></edge><edge id="859" source="471" target="472" label="AST"><data key="type">AST</data></edge><edge id="858" source="471" target="475" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1102" source="592" target="593" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="364" source="230" target="231" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="611" source="351" target="355" label="AST"><data key="type">AST</data></edge><edge id="606" source="351" target="352" label="AST"><data key="type">AST</data></edge><edge id="609" source="351" target="354" label="AST"><data key="type">AST</data></edge><edge id="861" source="472" target="473" label="AST"><data key="type">AST</data></edge><edge id="860" source="472" target="474" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1104" source="593" target="583" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="1106" source="593" target="583" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="1105" source="593" target="583" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="366" source="231" target="174" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="369" source="231" target="226" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="368" source="231" target="226" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="367" source="231" target="232" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="608" source="352" target="353" label="AST"><data key="type">AST</data></edge><edge id="607" source="352" target="354" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1109" source="594" target="595" label="AST"><data key="type">AST</data></edge><edge id="1108" source="594" target="603" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1127" source="594" target="562" label="RETURNS_TO"><data key="type">RETURNS_TO</data></edge><edge id="159" source="111" target="112" label="AST"><data key="type">AST</data></edge><edge id="158" source="111" target="113" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="371" source="232" target="217" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="373" source="232" target="214" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="372" source="232" target="217" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="1113" source="595" target="598" label="AST"><data key="type">AST</data></edge><edge id="1123" source="595" target="602" label="AST"><data key="type">AST</data></edge><edge id="1110" source="595" target="596" label="AST"><data key="type">AST</data></edge><edge id="376" source="233" target="234" label="AST"><data key="type">AST</data></edge><edge id="387" source="233" target="239" label="AST"><data key="type">AST</data></edge><edge id="375" source="233" target="250" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="610" source="354" target="355" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="865" source="475" target="476" label="AST"><data key="type">AST</data></edge><edge id="864" source="475" target="477" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1112" source="596" target="597" label="AST"><data key="type">AST</data></edge><edge id="1111" source="596" target="598" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="161" source="113" target="114" label="AST"><data key="type">AST</data></edge><edge id="378" source="234" target="235" label="AST"><data key="type">AST</data></edge><edge id="377" source="234" target="239" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="612" source="355" target="356" label="AST"><data key="type">AST</data></edge><edge id="615" source="355" target="358" label="AST"><data key="type">AST</data></edge><edge id="168" source="114" target="119" label="AST"><data key="type">AST</data></edge><edge id="172" source="114" target="122" label="AST"><data key="type">AST</data></edge><edge id="162" source="114" target="115" label="AST"><data key="type">AST</data></edge><edge id="379" source="235" target="236" label="AST"><data key="type">AST</data></edge><edge id="381" source="235" target="237" label="AST"><data key="type">AST</data></edge><edge id="383" source="235" target="238" label="AST"><data key="type">AST</data></edge><edge id="614" source="356" target="357" label="AST"><data key="type">AST</data></edge><edge id="613" source="356" target="358" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="868" source="477" target="478" label="AST"><data key="type">AST</data></edge><edge id="867" source="477" target="479" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1117" source="598" target="600" label="AST"><data key="type">AST</data></edge><edge id="1115" source="598" target="599" label="AST"><data key="type">AST</data></edge><edge id="1119" source="598" target="601" label="AST"><data key="type">AST</data></edge><edge id="1114" source="598" target="602" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="167" source="115" target="118" label="AST"><data key="type">AST</data></edge><edge id="164" source="115" target="116" label="AST"><data key="type">AST</data></edge><edge id="163" source="115" target="119" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="380" source="236" target="237" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="1116" source="599" target="600" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="166" source="116" target="117" label="AST"><data key="type">AST</data></edge><edge id="165" source="116" target="118" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="382" source="237" target="238" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="620" source="358" target="361" label="AST"><data key="type">AST</data></edge><edge id="616" source="358" target="359" label="AST"><data key="type">AST</data></edge><edge id="618" source="358" target="360" label="AST"><data key="type">AST</data></edge><edge id="871" source="479" target="480" label="AST"><data key="type">AST</data></edge><edge id="870" source="479" target="482" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="384" source="238" target="187" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="386" source="238" target="209" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="385" source="238" target="209" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="617" source="359" target="360" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="388" source="239" target="240" label="AST"><data key="type">AST</data></edge><edge id="394" source="239" target="244" label="AST"><data key="type">AST</data></edge><edge id="170" source="119" target="120" label="AST"><data key="type">AST</data></edge><edge id="169" source="119" target="122" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="12" source="10" target="11" label="AST"><data key="type">AST</data></edge><edge id="13" source="11" target="12" label="AST"><data key="type">AST</data></edge><edge id="16" source="13" target="14" label="AST"><data key="type">AST</data></edge><edge id="15" source="13" target="16" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="17" source="14" target="15" label="AST"><data key="type">AST</data></edge><edge id="20" source="16" target="17" label="AST"><data key="type">AST</data></edge><edge id="19" source="16" target="19" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="21" source="17" target="18" label="AST"><data key="type">AST</data></edge><edge id="24" source="19" target="20" label="AST"><data key="type">AST</data></edge><edge id="23" source="19" target="22" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="872" source="480" target="481" label="AST"><data key="type">AST</data></edge><edge id="619" source="360" target="361" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="390" source="240" target="241" label="AST"><data key="type">AST</data></edge><edge id="393" source="240" target="243" label="AST"><data key="type">AST</data></edge><edge id="389" source="240" target="244" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="621" source="361" target="325" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="623" source="361" target="325" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="622" source="361" target="325" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="874" source="482" target="483" label="AST"><data key="type">AST</data></edge><edge id="888" source="482" target="490" label="AST"><data key="type">AST</data></edge><edge id="1040" source="482" target="560" label="AST"><data key="type">AST</data></edge><edge id="906" source="482" target="501" label="AST"><data key="type">AST</data></edge><edge id="171" source="120" target="121" label="AST"><data key="type">AST</data></edge><edge id="392" source="241" target="242" label="AST"><data key="type">AST</data></edge><edge id="391" source="241" target="243" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="626" source="362" target="363" label="AST"><data key="type">AST</data></edge><edge id="625" source="362" target="371" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="876" source="483" target="484" label="AST"><data key="type">AST</data></edge><edge id="875" source="483" target="490" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="631" source="363" target="367" label="AST"><data key="type">AST</data></edge><edge id="633" source="363" target="368" label="AST"><data key="type">AST</data></edge><edge id="627" source="363" target="364" label="AST"><data key="type">AST</data></edge><edge id="881" source="484" target="487" label="AST"><data key="type">AST</data></edge><edge id="877" source="484" target="485" label="AST"><data key="type">AST</data></edge><edge id="879" source="484" target="486" label="AST"><data key="type">AST</data></edge><edge id="629" source="364" target="365" label="AST"><data key="type">AST</data></edge><edge id="628" source="364" target="367" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="878" source="485" target="486" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="177" source="123" target="125" label="AST"><data key="type">AST</data></edge><edge id="189" source="123" target="133" label="AST"><data key="type">AST</data></edge><edge id="200" source="123" target="140" label="AST"><data key="type">AST</data></edge><edge id="203" source="123" target="142" label="AST"><data key="type">AST</data></edge><edge id="183" source="123" target="129" label="AST"><data key="type">AST</data></edge><edge id="194" source="123" target="136" label="AST"><data key="type">AST</data></edge><edge id="175" source="123" target="124" label="AST"><data key="type">AST</data></edge><edge id="197" source="123" target="138" label="AST"><data key="type">AST</data></edge><edge id="174" source="123" target="162" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="395" source="244" target="245" label="AST"><data key="type">AST</data></edge><edge id="630" source="365" target="366" label="AST"><data key="type">AST</data></edge><edge id="880" source="486" target="487" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="176" source="124" target="125" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="396" source="245" target="246" label="AST"><data key="type">AST</data></edge><edge id="882" source="487" target="488" label="AST"><data key="type">AST</data></edge><edge id="887" source="487" target="489" label="AST"><data key="type">AST</data></edge><edge id="179" source="125" target="126" label="AST"><data key="type">AST</data></edge><edge id="182" source="125" target="128" label="AST"><data key="type">AST</data></edge><edge id="178" source="125" target="129" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="397" source="246" target="247" label="AST"><data key="type">AST</data></edge><edge id="400" source="246" target="249" label="AST"><data key="type">AST</data></edge><edge id="632" source="367" target="368" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="883" source="488" target="474" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="886" source="488" target="474" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="885" source="488" target="474" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="884" source="488" target="489" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="181" source="126" target="127" label="AST"><data key="type">AST</data></edge><edge id="180" source="126" target="128" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="399" source="247" target="248" label="AST"><data key="type">AST</data></edge><edge id="398" source="247" target="249" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="634" source="368" target="369" label="AST"><data key="type">AST</data></edge><edge id="636" source="368" target="370" label="AST"><data key="type">AST</data></edge><edge id="635" source="369" target="370" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="401" source="249" target="243" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="188" source="129" target="132" label="AST"><data key="type">AST</data></edge><edge id="185" source="129" target="130" label="AST"><data key="type">AST</data></edge><edge id="184" source="129" target="133" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="25" source="20" target="21" label="AST"><data key="type">AST</data></edge><edge id="28" source="22" target="23" label="AST"><data key="type">AST</data></edge><edge id="27" source="22" target="27" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="29" source="23" target="24" label="AST"><data key="type">AST</data></edge><edge id="30" source="24" target="25" label="AST"><data key="type">AST</data></edge><edge id="31" source="25" target="26" label="AST"><data key="type">AST</data></edge><edge id="34" source="27" target="28" label="AST"><data key="type">AST</data></edge><edge id="33" source="27" target="31" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="35" source="28" target="29" label="AST"><data key="type">AST</data></edge><edge id="36" source="29" target="30" label="AST"><data key="type">AST</data></edge><edge id="890" source="490" target="491" label="AST"><data key="type">AST</data></edge><edge id="889" source="490" target="501" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="637" source="370" target="317" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="639" source="370" target="334" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="638" source="370" target="334" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="891" source="491" target="492" label="AST"><data key="type">AST</data></edge><edge id="895" source="491" target="495" label="AST"><data key="type">AST</data></edge><edge id="897" source="491" target="496" label="AST"><data key="type">AST</data></edge><edge id="403" source="250" target="251" label="AST"><data key="type">AST</data></edge><edge id="411" source="250" target="169" label="RETURNS_TO"><data key="type">RETURNS_TO</data></edge><edge id="641" source="371" target="372" label="AST"><data key="type">AST</data></edge><edge id="652" source="371" target="373" label="AST"><data key="type">AST</data></edge><edge id="893" source="492" target="493" label="AST"><data key="type">AST</data></edge><edge id="892" source="492" target="495" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="187" source="130" target="131" label="AST"><data key="type">AST</data></edge><edge id="186" source="130" target="132" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="404" source="251" target="252" label="AST"><data key="type">AST</data></edge><edge id="409" source="251" target="253" label="AST"><data key="type">AST</data></edge><edge id="410" source="251" target="216" label="LAST_FIELD_LEX"><data key="type">LAST_FIELD_LEX</data></edge><edge id="642" source="372" target="346" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="651" source="372" target="346" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="650" source="372" target="385" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="645" source="372" target="379" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="646" source="372" target="378" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="647" source="372" target="380" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="648" source="372" target="384" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="649" source="372" target="383" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="644" source="372" target="346" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="643" source="372" target="373" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="894" source="493" target="494" label="AST"><data key="type">AST</data></edge><edge id="405" source="252" target="217" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="407" source="252" target="217" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="408" source="252" target="232" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="406" source="252" target="253" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="653" source="373" target="374" label="AST"><data key="type">AST</data></edge><edge id="655" source="373" target="375" label="AST"><data key="type">AST</data></edge><edge id="654" source="374" target="375" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="896" source="495" target="496" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="191" source="133" target="134" label="AST"><data key="type">AST</data></edge><edge id="193" source="133" target="135" label="AST"><data key="type">AST</data></edge><edge id="190" source="133" target="136" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="440" source="254" target="272" label="AST"><data key="type">AST</data></edge><edge id="442" source="254" target="273" label="AST"><data key="type">AST</data></edge><edge id="422" source="254" target="260" label="AST"><data key="type">AST</data></edge><edge id="434" source="254" target="268" label="AST"><data key="type">AST</data></edge><edge id="414" source="254" target="255" label="AST"><data key="type">AST</data></edge><edge id="437" source="254" target="270" label="AST"><data key="type">AST</data></edge><edge id="416" source="254" target="256" label="AST"><data key="type">AST</data></edge><edge id="428" source="254" target="264" label="AST"><data key="type">AST</data></edge><edge id="413" source="254" target="299" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="671" source="375" target="382" label="AST"><data key="type">AST</data></edge><edge id="656" source="375" target="376" label="AST"><data key="type">AST</data></edge><edge id="678" source="375" target="385" label="AST"><data key="type">AST</data></edge><edge id="669" source="375" target="381" label="AST"><data key="type">AST</data></edge><edge id="898" source="496" target="497" label="AST"><data key="type">AST</data></edge><edge id="901" source="496" target="499" label="AST"><data key="type">AST</data></edge><edge id="192" source="134" target="135" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="415" source="255" target="256" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="665" source="376" target="380" label="AST"><data key="type">AST</data></edge><edge id="658" source="376" target="377" label="AST"><data key="type">AST</data></edge><edge id="657" source="376" target="381" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="900" source="497" target="498" label="AST"><data key="type">AST</data></edge><edge id="899" source="497" target="499" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="421" source="256" target="259" label="AST"><data key="type">AST</data></edge><edge id="418" source="256" target="257" label="AST"><data key="type">AST</data></edge><edge id="417" source="256" target="260" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="660" source="377" target="378" label="AST"><data key="type">AST</data></edge><edge id="664" source="377" target="379" label="AST"><data key="type">AST</data></edge><edge id="659" source="377" target="380" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="196" source="136" target="137" label="AST"><data key="type">AST</data></edge><edge id="195" source="136" target="138" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="420" source="257" target="258" label="AST"><data key="type">AST</data></edge><edge id="419" source="257" target="259" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="661" source="378" target="354" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="663" source="378" target="354" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="662" source="378" target="379" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="902" source="499" target="500" label="AST"><data key="type">AST</data></edge><edge id="199" source="138" target="139" label="AST"><data key="type">AST</data></edge><edge id="198" source="138" target="140" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="39" source="31" target="32" label="AST"><data key="type">AST</data></edge><edge id="38" source="31" target="35" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="40" source="32" target="33" label="AST"><data key="type">AST</data></edge><edge id="41" source="33" target="34" label="AST"><data key="type">AST</data></edge><edge id="44" source="35" target="36" label="AST"><data key="type">AST</data></edge><edge id="67" source="35" target="52" label="AST"><data key="type">AST</data></edge><edge id="46" source="35" target="37" label="AST"><data key="type">AST</data></edge><edge id="79" source="35" target="60" label="AST"><data key="type">AST</data></edge><edge id="173" source="35" target="123" label="AST"><data key="type">AST</data></edge><edge id="233" source="35" target="162" label="AST"><data key="type">AST</data></edge><edge id="244" source="35" target="169" label="AST"><data key="type">AST</data></edge><edge id="136" source="35" target="98" label="AST"><data key="type">AST</data></edge><edge id="1048" source="35" target="562" label="AST"><data key="type">AST</data></edge><edge id="412" source="35" target="254" label="AST"><data key="type">AST</data></edge><edge id="853" source="35" target="469" label="AST"><data key="type">AST</data></edge><edge id="1134" source="35" target="605" label="AST"><data key="type">AST</data></edge><edge id="106" source="35" target="78" label="AST"><data key="type">AST</data></edge><edge id="1353" source="35" target="714" label="AST"><data key="type">AST</data></edge><edge id="515" source="35" target="299" label="AST"><data key="type">AST</data></edge><edge id="60" source="35" target="47" label="AST"><data key="type">AST</data></edge><edge id="53" source="35" target="42" label="AST"><data key="type">AST</data></edge><edge id="43" source="35" target="716" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="45" source="36" target="37" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="48" source="37" target="38" label="AST"><data key="type">AST</data></edge><edge id="47" source="37" target="42" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="49" source="38" target="39" label="AST"><data key="type">AST</data></edge><edge id="52" source="38" target="41" label="AST"><data key="type">AST</data></edge><edge id="51" source="39" target="40" label="AST"><data key="type">AST</data></edge><edge id="50" source="39" target="41" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="666" source="380" target="332" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="668" source="380" target="332" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="667" source="380" target="332" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="424" source="260" target="261" label="AST"><data key="type">AST</data></edge><edge id="427" source="260" target="263" label="AST"><data key="type">AST</data></edge><edge id="423" source="260" target="264" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="670" source="381" target="382" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="202" source="140" target="141" label="AST"><data key="type">AST</data></edge><edge id="201" source="140" target="142" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="426" source="261" target="262" label="AST"><data key="type">AST</data></edge><edge id="425" source="261" target="263" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="673" source="382" target="383" label="AST"><data key="type">AST</data></edge><edge id="677" source="382" target="384" label="AST"><data key="type">AST</data></edge><edge id="672" source="382" target="385" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="674" source="383" target="354" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="676" source="383" target="378" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="675" source="383" target="384" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="221" source="142" target="155" label="AST"><data key="type">AST</data></edge><edge id="214" source="142" target="150" label="AST"><data key="type">AST</data></edge><edge id="204" source="142" target="143" label="AST"><data key="type">AST</data></edge><edge id="227" source="142" target="158" label="AST"><data key="type">AST</data></edge><edge id="207" source="142" target="145" label="AST"><data key="type">AST</data></edge><edge id="206" source="143" target="144" label="AST"><data key="type">AST</data></edge><edge id="205" source="143" target="145" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="430" source="264" target="265" label="AST"><data key="type">AST</data></edge><edge id="433" source="264" target="267" label="AST"><data key="type">AST</data></edge><edge id="429" source="264" target="268" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="679" source="385" target="367" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="681" source="385" target="367" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="680" source="385" target="367" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="432" source="265" target="266" label="AST"><data key="type">AST</data></edge><edge id="431" source="265" target="267" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="683" source="386" target="387" label="AST"><data key="type">AST</data></edge><edge id="689" source="386" target="391" label="AST"><data key="type">AST</data></edge><edge id="211" source="145" target="147" label="AST"><data key="type">AST</data></edge><edge id="209" source="145" target="146" label="AST"><data key="type">AST</data></edge><edge id="208" source="145" target="150" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="685" source="387" target="388" label="AST"><data key="type">AST</data></edge><edge id="688" source="387" target="390" label="AST"><data key="type">AST</data></edge><edge id="684" source="387" target="391" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="210" source="146" target="147" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="687" source="388" target="389" label="AST"><data key="type">AST</data></edge><edge id="686" source="388" target="390" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="212" source="147" target="148" label="AST"><data key="type">AST</data></edge><edge id="436" source="268" target="269" label="AST"><data key="type">AST</data></edge><edge id="435" source="268" target="270" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="213" source="148" target="149" label="AST"><data key="type">AST</data></edge><edge id="55" source="42" target="43" label="AST"><data key="type">AST</data></edge><edge id="54" source="42" target="47" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="56" source="43" target="44" label="AST"><data key="type">AST</data></edge><edge id="59" source="43" target="46" label="AST"><data key="type">AST</data></edge><edge id="58" source="44" target="45" label="AST"><data key="type">AST</data></edge><edge id="57" source="44" target="46" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="62" source="47" target="48" label="AST"><data key="type">AST</data></edge><edge id="61" source="47" target="52" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="66" source="48" target="51" label="AST"><data key="type">AST</data></edge><edge id="63" source="48" target="49" label="AST"><data key="type">AST</data></edge><edge id="65" source="49" target="50" label="AST"><data key="type">AST</data></edge><edge id="64" source="49" target="51" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="439" source="270" target="271" label="AST"><data key="type">AST</data></edge><edge id="438" source="270" target="272" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="700" source="391" target="395" label="AST"><data key="type">AST</data></edge><edge id="690" source="391" target="392" label="AST"><data key="type">AST</data></edge><edge id="216" source="150" target="151" label="AST"><data key="type">AST</data></edge><edge id="218" source="150" target="152" label="AST"><data key="type">AST</data></edge><edge id="215" source="150" target="155" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="698" source="392" target="394" label="AST"><data key="type">AST</data></edge><edge id="692" source="392" target="393" label="AST"><data key="type">AST</data></edge><edge id="691" source="392" target="395" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="217" source="151" target="152" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="441" source="272" target="273" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="693" source="393" target="340" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="697" source="393" target="340" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="696" source="393" target="394" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="695" source="393" target="340" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="694" source="393" target="394" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="219" source="152" target="153" label="AST"><data key="type">AST</data></edge><edge id="443" source="273" target="274" label="AST"><data key="type">AST</data></edge><edge id="699" source="394" target="390" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="220" source="153" target="154" label="AST"><data key="type">AST</data></edge><edge id="454" source="274" target="279" label="AST"><data key="type">AST</data></edge><edge id="444" source="274" target="275" label="AST"><data key="type">AST</data></edge><edge id="467" source="274" target="283" label="AST"><data key="type">AST</data></edge><edge id="701" source="395" target="396" label="AST"><data key="type">AST</data></edge><edge id="703" source="395" target="397" label="AST"><data key="type">AST</data></edge><edge id="451" source="275" target="277" label="AST"><data key="type">AST</data></edge><edge id="453" source="275" target="278" label="AST"><data key="type">AST</data></edge><edge id="446" source="275" target="276" label="AST"><data key="type">AST</data></edge><edge id="445" source="275" target="279" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="702" source="396" target="397" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="223" source="155" target="156" label="AST"><data key="type">AST</data></edge><edge id="226" source="155" target="157" label="AST"><data key="type">AST</data></edge><edge id="222" source="155" target="158" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="447" source="276" target="267" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="450" source="276" target="267" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="449" source="276" target="267" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="448" source="276" target="277" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="704" source="397" target="398" label="AST"><data key="type">AST</data></edge><edge id="707" source="397" target="399" label="AST"><data key="type">AST</data></edge><edge id="225" source="156" target="157" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="224" source="156" target="157" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="452" source="277" target="278" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="706" source="398" target="394" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="705" source="398" target="399" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="232" source="158" target="161" label="AST"><data key="type">AST</data></edge><edge id="228" source="158" target="159" label="AST"><data key="type">AST</data></edge><edge id="230" source="158" target="160" label="AST"><data key="type">AST</data></edge><edge id="463" source="279" target="282" label="AST"><data key="type">AST</data></edge><edge id="456" source="279" target="280" label="AST"><data key="type">AST</data></edge><edge id="458" source="279" target="281" label="AST"><data key="type">AST</data></edge><edge id="455" source="279" target="283" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="229" source="159" target="160" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="69" source="52" target="53" label="AST"><data key="type">AST</data></edge><edge id="68" source="52" target="60" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="70" source="53" target="54" label="AST"><data key="type">AST</data></edge><edge id="73" source="53" target="56" label="AST"><data key="type">AST</data></edge><edge id="75" source="53" target="57" label="AST"><data key="type">AST</data></edge><edge id="72" source="54" target="55" label="AST"><data key="type">AST</data></edge><edge id="71" source="54" target="56" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="74" source="56" target="57" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="78" source="57" target="59" label="AST"><data key="type">AST</data></edge><edge id="76" source="57" target="58" label="AST"><data key="type">AST</data></edge><edge id="77" source="58" target="59" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="457" source="280" target="281" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="231" source="160" target="161" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="459" source="281" target="259" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="462" source="281" target="259" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="461" source="281" target="259" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="460" source="281" target="282" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="464" source="282" target="263" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="466" source="282" target="263" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="465" source="282" target="263" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="235" source="162" target="163" label="AST"><data key="type">AST</data></edge><edge id="237" source="162" target="164" label="AST"><data key="type">AST</data></edge><edge id="239" source="162" target="165" label="AST"><data key="type">AST</data></edge><edge id="234" source="162" target="169" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="496" source="283" target="293" label="AST"><data key="type">AST</data></edge><edge id="478" source="283" target="288" label="AST"><data key="type">AST</data></edge><edge id="468" source="283" target="284" label="AST"><data key="type">AST</data></edge><edge id="236" source="163" target="164" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="475" source="284" target="286" label="AST"><data key="type">AST</data></edge><edge id="477" source="284" target="287" label="AST"><data key="type">AST</data></edge><edge id="470" source="284" target="285" label="AST"><data key="type">AST</data></edge><edge id="469" source="284" target="288" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="238" source="164" target="165" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="471" source="285" target="267" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="474" source="285" target="276" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="473" source="285" target="276" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="472" source="285" target="286" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="240" source="165" target="166" label="AST"><data key="type">AST</data></edge><edge id="476" source="286" target="287" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="243" source="166" target="168" label="AST"><data key="type">AST</data></edge><edge id="241" source="166" target="167" label="AST"><data key="type">AST</data></edge><edge id="242" source="167" target="168" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="487" source="288" target="291" label="AST"><data key="type">AST</data></edge><edge id="480" source="288" target="289" label="AST"><data key="type">AST</data></edge><edge id="492" source="288" target="292" label="AST"><data key="type">AST</data></edge><edge id="482" source="288" target="290" label="AST"><data key="type">AST</data></edge><edge id="479" source="288" target="293" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="481" source="289" target="290" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="254" source="169" target="175" label="AST"><data key="type">AST</data></edge><edge id="265" source="169" target="182" label="AST"><data key="type">AST</data></edge><edge id="246" source="169" target="170" label="AST"><data key="type">AST</data></edge><edge id="248" source="169" target="171" label="AST"><data key="type">AST</data></edge><edge id="260" source="169" target="179" label="AST"><data key="type">AST</data></edge><edge id="263" source="169" target="181" label="AST"><data key="type">AST</data></edge><edge id="245" source="169" target="254" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="89" source="60" target="66" label="AST"><data key="type">AST</data></edge><edge id="81" source="60" target="61" label="AST"><data key="type">AST</data></edge><edge id="92" source="60" target="68" label="AST"><data key="type">AST</data></edge><edge id="83" source="60" target="62" label="AST"><data key="type">AST</data></edge><edge id="95" source="60" target="70" label="AST"><data key="type">AST</data></edge><edge id="98" source="60" target="72" label="AST"><data key="type">AST</data></edge><edge id="80" source="60" target="78" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="82" source="61" target="62" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="88" source="62" target="65" label="AST"><data key="type">AST</data></edge><edge id="85" source="62" target="63" label="AST"><data key="type">AST</data></edge><edge id="84" source="62" target="66" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="87" source="63" target="64" label="AST"><data key="type">AST</data></edge><edge id="86" source="63" target="65" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="91" source="66" target="67" label="AST"><data key="type">AST</data></edge><edge id="90" source="66" target="68" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="94" source="68" target="69" label="AST"><data key="type">AST</data></edge><edge id="93" source="68" target="70" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="483" source="290" target="267" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="486" source="290" target="285" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="485" source="290" target="285" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="484" source="290" target="291" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="247" source="170" target="171" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="488" source="291" target="259" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="491" source="291" target="281" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="490" source="291" target="259" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="489" source="291" target="292" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="253" source="171" target="174" label="AST"><data key="type">AST</data></edge><edge id="250" source="171" target="172" label="AST"><data key="type">AST</data></edge><edge id="249" source="171" target="175" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="493" source="292" target="263" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="495" source="292" target="282" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="494" source="292" target="263" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="252" source="172" target="173" label="AST"><data key="type">AST</data></edge><edge id="251" source="172" target="174" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="497" source="293" target="294" label="AST"><data key="type">AST</data></edge><edge id="499" source="293" target="295" label="AST"><data key="type">AST</data></edge><edge id="511" source="293" target="298" label="AST"><data key="type">AST</data></edge><edge id="501" source="293" target="296" label="AST"><data key="type">AST</data></edge><edge id="506" source="293" target="297" label="AST"><data key="type">AST</data></edge><edge id="498" source="294" target="295" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="500" source="295" target="296" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="256" source="175" target="176" label="AST"><data key="type">AST</data></edge><edge id="259" source="175" target="178" label="AST"><data key="type">AST</data></edge><edge id="255" source="175" target="179" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="502" source="296" target="259" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="505" source="296" target="291" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="504" source="296" target="259" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="503" source="296" target="297" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="258" source="176" target="177" label="AST"><data key="type">AST</data></edge><edge id="257" source="176" target="178" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="507" source="297" target="263" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="510" source="297" target="292" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="509" source="297" target="263" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="508" source="297" target="298" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="512" source="298" target="267" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="514" source="298" target="290" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="513" source="298" target="285" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="531" source="299" target="309" label="AST"><data key="type">AST</data></edge><edge id="534" source="299" target="311" label="AST"><data key="type">AST</data></edge><edge id="525" source="299" target="305" label="AST"><data key="type">AST</data></edge><edge id="536" source="299" target="312" label="AST"><data key="type">AST</data></edge><edge id="517" source="299" target="300" label="AST"><data key="type">AST</data></edge><edge id="519" source="299" target="301" label="AST"><data key="type">AST</data></edge><edge id="516" source="299" target="469" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="262" source="179" target="180" label="AST"><data key="type">AST</data></edge><edge id="261" source="179" target="181" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="97" source="70" target="71" label="AST"><data key="type">AST</data></edge><edge id="96" source="70" target="72" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="99" source="72" target="73" label="AST"><data key="type">AST</data></edge><edge id="100" source="73" target="74" label="AST"><data key="type">AST</data></edge><edge id="101" source="74" target="75" label="AST"><data key="type">AST</data></edge><edge id="103" source="74" target="76" label="AST"><data key="type">AST</data></edge><edge id="105" source="74" target="77" label="AST"><data key="type">AST</data></edge><edge id="102" source="75" target="76" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="104" source="76" target="77" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="110" source="78" target="80" label="AST"><data key="type">AST</data></edge><edge id="121" source="78" target="87" label="AST"><data key="type">AST</data></edge><edge id="124" source="78" target="89" label="AST"><data key="type">AST</data></edge><edge id="115" source="78" target="83" label="AST"><data key="type">AST</data></edge><edge id="118" source="78" target="85" label="AST"><data key="type">AST</data></edge><edge id="108" source="78" target="79" label="AST"><data key="type">AST</data></edge><edge id="107" source="78" target="98" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="109" source="79" target="80" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="264" source="181" target="182" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="374" source="182" target="233" label="AST"><data key="type">AST</data></edge><edge id="266" source="182" target="183" label="AST"><data key="type">AST</data></edge><edge id="333" source="182" target="215" label="AST"><data key="type">AST</data></edge><edge id="323" source="182" target="211" label="AST"><data key="type">AST</data></edge><edge id="402" source="182" target="250" label="AST"><data key="type">AST</data></edge><edge id="306" source="182" target="204" label="AST"><data key="type">AST</data></edge><edge id="281" source="182" target="191" label="AST"><data key="type">AST</data></edge><edge id="292" source="182" target="199" label="AST"><data key="type">AST</data></edge><edge id="350" source="182" target="224" label="AST"><data key="type">AST</data></edge><edge id="268" source="183" target="184" label="AST"><data key="type">AST</data></edge><edge id="267" source="183" target="191" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="269" source="184" target="185" label="AST"><data key="type">AST</data></edge><edge id="272" source="184" target="187" label="AST"><data key="type">AST</data></edge><edge id="274" source="184" target="188" label="AST"><data key="type">AST</data></edge><edge id="271" source="185" target="186" label="AST"><data key="type">AST</data></edge><edge id="270" source="185" target="187" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="273" source="187" target="188" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="275" source="188" target="189" label="AST"><data key="type">AST</data></edge><edge id="280" source="188" target="190" label="AST"><data key="type">AST</data></edge><edge id="276" source="189" target="178" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="279" source="189" target="178" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="278" source="189" target="178" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="277" source="189" target="190" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="112" source="80" target="81" label="AST"><data key="type">AST</data></edge><edge id="114" source="80" target="82" label="AST"><data key="type">AST</data></edge><edge id="111" source="80" target="83" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="113" source="81" target="82" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="117" source="83" target="84" label="AST"><data key="type">AST</data></edge><edge id="116" source="83" target="85" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="120" source="85" target="86" label="AST"><data key="type">AST</data></edge><edge id="119" source="85" target="87" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="123" source="87" target="88" label="AST"><data key="type">AST</data></edge><edge id="122" source="87" target="89" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="125" source="89" target="90" label="AST"><data key="type">AST</data></edge><edge id="283" source="191" target="192" label="AST"><data key="type">AST</data></edge><edge id="282" source="191" target="199" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="287" source="192" target="195" label="AST"><data key="type">AST</data></edge><edge id="289" source="192" target="196" label="AST"><data key="type">AST</data></edge><edge id="284" source="192" target="193" label="AST"><data key="type">AST</data></edge><edge id="286" source="193" target="194" label="AST"><data key="type">AST</data></edge><edge id="285" source="193" target="195" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="288" source="195" target="196" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="290" source="196" target="197" label="AST"><data key="type">AST</data></edge><edge id="291" source="197" target="198" label="AST"><data key="type">AST</data></edge><edge id="302" source="199" target="203" label="AST"><data key="type">AST</data></edge><edge id="294" source="199" target="200" label="AST"><data key="type">AST</data></edge><edge id="293" source="199" target="204" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="135" source="90" target="97" label="AST"><data key="type">AST</data></edge><edge id="126" source="90" target="91" label="AST"><data key="type">AST</data></edge><edge id="131" source="90" target="94" label="AST"><data key="type">AST</data></edge><edge id="128" source="91" target="92" label="AST"><data key="type">AST</data></edge><edge id="130" source="91" target="93" label="AST"><data key="type">AST</data></edge><edge id="127" source="91" target="94" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="129" source="92" target="93" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="133" source="94" target="95" label="AST"><data key="type">AST</data></edge><edge id="132" source="94" target="97" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="134" source="95" target="96" label="AST"><data key="type">AST</data></edge><edge id="154" source="98" target="109" label="AST"><data key="type">AST</data></edge><edge id="145" source="98" target="103" label="AST"><data key="type">AST</data></edge><edge id="157" source="98" target="111" label="AST"><data key="type">AST</data></edge><edge id="138" source="98" target="99" label="AST"><data key="type">AST</data></edge><edge id="160" source="98" target="113" label="AST"><data key="type">AST</data></edge><edge id="140" source="98" target="100" label="AST"><data key="type">AST</data></edge><edge id="151" source="98" target="107" label="AST"><data key="type">AST</data></edge><edge id="137" source="98" target="123" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="139" source="99" target="100" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge></graph></graphml>
<?xml version="1.0" ?><graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.1/graphml.xsd"><key id="reference" for="node" attr.name="reference" attr.type="string"></key><key id="identifier" for="node" attr.name="identifier" attr.type="string"></key><key id="modifier" for="node" attr.name="modifier" attr.type="string"></key><key id="text" for="node" attr.name="text" attr.type="string"></key><key id="type" for="node" attr.name="type" attr.type="string"></key><key id="parentType" for="node" attr.name="parentType" attr.type="string"></key><key id="type" for="edge" attr.name="type" attr.type="string"></key><graph id="G" edgedefault="directed"><node id="88"><data key="reference"></data><data key="identifier">Override</data><data key="text">Override</data><data key="type">Name</data><data key="parentType">MarkerAnnotationExpr</data></node><node id="89"><data key="reference">userDefinedMethodName</data><data key="identifier">update</data><data key="text">update</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="110"><data key="reference"></data><data key="text">null</data><data key="type">NullLiteralExpr</data><data key="parentType">BinaryExpr</data></node><node id="111"><data key="reference"></data><data key="text">{
    if (!ifExists) {
        throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);
    }
}</data><data key="type">BlockStmt</data><data key="parentType">IfStmt</data></node><node id="112"><data key="reference"></data><data key="text">if (!ifExists) {
    throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);
}</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="113"><data key="reference"></data><data key="text">!ifExists</data><data key="type">UnaryExpr</data><data key="parentType">IfStmt</data></node><node id="114"><data key="reference">boolean</data><data key="identifier">ifExists</data><data key="text">ifExists</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="115"><data key="reference"></data><data key="text">{
    throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);
}</data><data key="type">BlockStmt</data><data key="parentType">IfStmt</data></node><node id="116"><data key="reference"></data><data key="text">throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);</data><data key="type">ThrowStmt</data><data key="parentType">BlockStmt</data></node><node id="90"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">MethodDeclaration</data></node><node id="117"><data key="reference"></data><data key="text">DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName)</data><data key="type">MethodCallExpr</data><data key="parentType">ThrowStmt</data></node><node id="91"><data key="reference"></data><data key="text">{
    session.commit(true);
    Constraint constraint = getSchema().findConstraint(session, constraintName);
    if (constraint == null) {
        if (!ifExists) {
            throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);
        }
    } else {
        session.getUser().checkRight(constraint.getTable(), Right.ALL);
        session.getUser().checkRight(constraint.getRefTable(), Right.ALL);
        session.getDatabase().removeSchemaObject(session, constraint);
    }
    return 0;
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="118"><data key="reference">UnknownType</data><data key="identifier">DbException</data><data key="text">DbException</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="92"><data key="reference"></data><data key="text">session.commit(true)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="119"><data key="reference">otherMethodCall</data><data key="identifier">get</data><data key="text">get</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="93"><data key="reference">org.h2.engine.Session</data><data key="identifier">session</data><data key="text">session</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="94"><data key="reference">otherMethodCall</data><data key="identifier">commit</data><data key="text">commit</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="95"><data key="reference"></data><data key="identifier">true</data><data key="text">true</data><data key="type">BooleanLiteralExpr</data><data key="parentType">MethodCallExpr</data></node><node id="96"><data key="reference"></data><data key="modifier"></data><data key="text">Constraint constraint = getSchema().findConstraint(session, constraintName)</data><data key="type">VariableDeclarationExpr</data><data key="parentType">ExpressionStmt</data></node><node id="97"><data key="reference"></data><data key="text">constraint = getSchema().findConstraint(session, constraintName)</data><data key="type">VariableDeclarator</data><data key="parentType">VariableDeclarationExpr</data></node><node id="10"><data key="reference"></data><data key="identifier">h2</data><data key="text">org.h2</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="98"><data key="reference"></data><data key="text">Constraint</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="11"><data key="reference"></data><data key="identifier">org</data><data key="text">org</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="99"><data key="reference">nonQualifiedClassName</data><data key="identifier">Constraint</data><data key="text">Constraint</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="12"><data key="reference"></data><data key="text">import org.h2.command.CommandInterface;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="13"><data key="reference"></data><data key="identifier">CommandInterface</data><data key="text">org.h2.command.CommandInterface</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="14"><data key="reference"></data><data key="identifier">command</data><data key="text">org.h2.command</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="15"><data key="reference"></data><data key="identifier">h2</data><data key="text">org.h2</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="16"><data key="reference"></data><data key="identifier">org</data><data key="text">org</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="17"><data key="reference"></data><data key="text">import org.h2.constraint.Constraint;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="18"><data key="reference"></data><data key="identifier">Constraint</data><data key="text">org.h2.constraint.Constraint</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="19"><data key="reference"></data><data key="identifier">constraint</data><data key="text">org.h2.constraint</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="120"><data key="reference"></data><data key="text">ErrorCode.CONSTRAINT_NOT_FOUND_1</data><data key="type">FieldAccessExpr</data><data key="parentType">MethodCallExpr</data></node><node id="121"><data key="reference">UnknownType</data><data key="identifier">ErrorCode</data><data key="text">ErrorCode</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="1"><data key="reference"></data><data key="text">/*
 * Copyright 2004-2014 H2 Group. Multiple-Licensed under the MPL 2.0,
 * and the EPL 1.0 (http://h2database.com/html/license.html).
 * Initial Developer: H2 Group
 */
package org.h2.command.ddl;

import org.h2.api.ErrorCode;
import org.h2.command.CommandInterface;
import org.h2.constraint.Constraint;
import org.h2.engine.Right;
import org.h2.engine.Session;
import org.h2.message.DbException;
import org.h2.schema.Schema;

/**
 * This class represents the statement
 * ALTER TABLE DROP CONSTRAINT
 */
public class AlterTableDropConstraint extends SchemaCommand {

    private String constraintName;

    private final boolean ifExists;

    public AlterTableDropConstraint(Session session, Schema schema, boolean ifExists) {
        super(session, schema);
        this.ifExists = ifExists;
    }

    public void setConstraintName(String string) {
        constraintName = string;
    }

    @Override
    public int update() {
        session.commit(true);
        Constraint constraint = getSchema().findConstraint(session, constraintName);
        if (constraint == null) {
            if (!ifExists) {
                throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);
            }
        } else {
            session.getUser().checkRight(constraint.getTable(), Right.ALL);
            session.getUser().checkRight(constraint.getRefTable(), Right.ALL);
            session.getDatabase().removeSchemaObject(session, constraint);
        }
        return 0;
    }

    @Override
    public int getType() {
        return CommandInterface.ALTER_TABLE_DROP_CONSTRAINT;
    }
}
</data><data key="type">CompilationUnit</data></node><node id="122"><data key="reference">int</data><data key="identifier">CONSTRAINT_NOT_FOUND_1</data><data key="text">CONSTRAINT_NOT_FOUND_1</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="2"><data key="reference"></data><data key="text">package org.h2.command.ddl;

</data><data key="type">PackageDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="123"><data key="reference">java.lang.String</data><data key="identifier">constraintName</data><data key="text">constraintName</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="3"><data key="reference"></data><data key="identifier">ddl</data><data key="text">org.h2.command.ddl</data><data key="type">Name</data><data key="parentType">PackageDeclaration</data></node><node id="124"><data key="reference"></data><data key="text">{
    session.getUser().checkRight(constraint.getTable(), Right.ALL);
    session.getUser().checkRight(constraint.getRefTable(), Right.ALL);
    session.getDatabase().removeSchemaObject(session, constraint);
}</data><data key="type">BlockStmt</data><data key="parentType">IfStmt</data></node><node id="4"><data key="reference"></data><data key="identifier">command</data><data key="text">org.h2.command</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="125"><data key="reference"></data><data key="text">session.getUser().checkRight(constraint.getTable(), Right.ALL)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="5"><data key="reference"></data><data key="identifier">h2</data><data key="text">org.h2</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="126"><data key="reference"></data><data key="text">session.getUser()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="6"><data key="reference"></data><data key="identifier">org</data><data key="text">org</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="127"><data key="reference">org.h2.engine.Session</data><data key="identifier">session</data><data key="text">session</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="7"><data key="reference"></data><data key="text">import org.h2.api.ErrorCode;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="128"><data key="reference">otherMethodCall</data><data key="identifier">getUser</data><data key="text">getUser</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="8"><data key="reference"></data><data key="identifier">ErrorCode</data><data key="text">org.h2.api.ErrorCode</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="129"><data key="reference">otherMethodCall</data><data key="identifier">checkRight</data><data key="text">checkRight</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="9"><data key="reference"></data><data key="identifier">api</data><data key="text">org.h2.api</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="20"><data key="reference"></data><data key="identifier">h2</data><data key="text">org.h2</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="21"><data key="reference"></data><data key="identifier">org</data><data key="text">org</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="22"><data key="reference"></data><data key="text">import org.h2.engine.Right;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="23"><data key="reference"></data><data key="identifier">Right</data><data key="text">org.h2.engine.Right</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="24"><data key="reference"></data><data key="identifier">engine</data><data key="text">org.h2.engine</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="25"><data key="reference"></data><data key="identifier">h2</data><data key="text">org.h2</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="26"><data key="reference"></data><data key="identifier">org</data><data key="text">org</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="27"><data key="reference"></data><data key="text">import org.h2.engine.Session;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="28"><data key="reference"></data><data key="identifier">Session</data><data key="text">org.h2.engine.Session</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="29"><data key="reference"></data><data key="identifier">engine</data><data key="text">org.h2.engine</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="130"><data key="reference"></data><data key="text">constraint.getTable()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="131"><data key="reference">org.h2.constraint.Constraint</data><data key="identifier">constraint</data><data key="text">constraint</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="132"><data key="reference">otherMethodCall</data><data key="identifier">getTable</data><data key="text">getTable</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="133"><data key="reference"></data><data key="text">Right.ALL</data><data key="type">FieldAccessExpr</data><data key="parentType">MethodCallExpr</data></node><node id="134"><data key="reference">UnknownType</data><data key="identifier">Right</data><data key="text">Right</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="135"><data key="reference">int</data><data key="identifier">ALL</data><data key="text">ALL</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="136"><data key="reference"></data><data key="text">session.getUser().checkRight(constraint.getRefTable(), Right.ALL)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="137"><data key="reference"></data><data key="text">session.getUser()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="138"><data key="reference">org.h2.engine.Session</data><data key="identifier">session</data><data key="text">session</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="139"><data key="reference">otherMethodCall</data><data key="identifier">getUser</data><data key="text">getUser</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="30"><data key="reference"></data><data key="identifier">h2</data><data key="text">org.h2</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="31"><data key="reference"></data><data key="identifier">org</data><data key="text">org</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="32"><data key="reference"></data><data key="text">import org.h2.message.DbException;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="33"><data key="reference"></data><data key="identifier">DbException</data><data key="text">org.h2.message.DbException</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="34"><data key="reference"></data><data key="identifier">message</data><data key="text">org.h2.message</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="35"><data key="reference"></data><data key="identifier">h2</data><data key="text">org.h2</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="36"><data key="reference"></data><data key="identifier">org</data><data key="text">org</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="37"><data key="reference"></data><data key="text">import org.h2.schema.Schema;
</data><data key="type">ImportDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="38"><data key="reference"></data><data key="identifier">Schema</data><data key="text">org.h2.schema.Schema</data><data key="type">Name</data><data key="parentType">ImportDeclaration</data></node><node id="39"><data key="reference"></data><data key="identifier">schema</data><data key="text">org.h2.schema</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="140"><data key="reference">otherMethodCall</data><data key="identifier">checkRight</data><data key="text">checkRight</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="141"><data key="reference"></data><data key="text">constraint.getRefTable()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="142"><data key="reference">org.h2.constraint.Constraint</data><data key="identifier">constraint</data><data key="text">constraint</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="143"><data key="reference">otherMethodCall</data><data key="identifier">getRefTable</data><data key="text">getRefTable</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="144"><data key="reference"></data><data key="text">Right.ALL</data><data key="type">FieldAccessExpr</data><data key="parentType">MethodCallExpr</data></node><node id="145"><data key="reference">UnknownType</data><data key="identifier">Right</data><data key="text">Right</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="146"><data key="reference">int</data><data key="identifier">ALL</data><data key="text">ALL</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="147"><data key="reference"></data><data key="text">session.getDatabase().removeSchemaObject(session, constraint)</data><data key="type">MethodCallExpr</data><data key="parentType">ExpressionStmt</data></node><node id="148"><data key="reference"></data><data key="text">session.getDatabase()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="149"><data key="reference">org.h2.engine.Session</data><data key="identifier">session</data><data key="text">session</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="40"><data key="reference"></data><data key="identifier">h2</data><data key="text">org.h2</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="41"><data key="reference"></data><data key="identifier">org</data><data key="text">org</data><data key="type">Name</data><data key="parentType">Name</data></node><node id="42"><data key="reference"></data><data key="modifier">public</data><data key="text">/**
 * This class represents the statement
 * ALTER TABLE DROP CONSTRAINT
 */
public class AlterTableDropConstraint extends SchemaCommand {

    private String constraintName;

    private final boolean ifExists;

    public AlterTableDropConstraint(Session session, Schema schema, boolean ifExists) {
        super(session, schema);
        this.ifExists = ifExists;
    }

    public void setConstraintName(String string) {
        constraintName = string;
    }

    @Override
    public int update() {
        session.commit(true);
        Constraint constraint = getSchema().findConstraint(session, constraintName);
        if (constraint == null) {
            if (!ifExists) {
                throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);
            }
        } else {
            session.getUser().checkRight(constraint.getTable(), Right.ALL);
            session.getUser().checkRight(constraint.getRefTable(), Right.ALL);
            session.getDatabase().removeSchemaObject(session, constraint);
        }
        return 0;
    }

    @Override
    public int getType() {
        return CommandInterface.ALTER_TABLE_DROP_CONSTRAINT;
    }
}</data><data key="type">ClassOrInterfaceDeclaration</data><data key="parentType">CompilationUnit</data></node><node id="43"><data key="reference">org.h2.command.ddl.SchemaCommand,org.h2.command.ddl.DefineCommand,org.h2.command.Prepared,java.lang.Object</data><data key="identifier">AlterTableDropConstraint</data><data key="text">AlterTableDropConstraint</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="44"><data key="reference"></data><data key="modifier">private</data><data key="text">private String constraintName;</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="45"><data key="reference"></data><data key="text">constraintName</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="46"><data key="reference"></data><data key="text">String</data><data key="type">ClassOrInterfaceType</data><data key="parentType">VariableDeclarator</data></node><node id="47"><data key="reference">nonQualifiedClassName</data><data key="identifier">String</data><data key="text">String</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="48"><data key="reference">java.lang.String</data><data key="identifier">constraintName</data><data key="text">constraintName</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="49"><data key="reference"></data><data key="modifier">private,final</data><data key="text">private final boolean ifExists;</data><data key="type">FieldDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="150"><data key="reference">otherMethodCall</data><data key="identifier">getDatabase</data><data key="text">getDatabase</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="151"><data key="reference">otherMethodCall</data><data key="identifier">removeSchemaObject</data><data key="text">removeSchemaObject</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="152"><data key="reference">org.h2.engine.Session</data><data key="identifier">session</data><data key="text">session</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="153"><data key="reference">org.h2.constraint.Constraint</data><data key="identifier">constraint</data><data key="text">constraint</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="154"><data key="reference"></data><data key="text">return 0;</data><data key="type">ReturnStmt</data><data key="parentType">BlockStmt</data></node><node id="155"><data key="reference"></data><data key="identifier">0</data><data key="text">0</data><data key="type">IntegerLiteralExpr</data><data key="parentType">ReturnStmt</data></node><node id="156"><data key="reference"></data><data key="modifier">public</data><data key="text">@Override
public int getType() {
    return CommandInterface.ALTER_TABLE_DROP_CONSTRAINT;
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="157"><data key="reference"></data><data key="text">@Override</data><data key="type">MarkerAnnotationExpr</data><data key="parentType">MethodDeclaration</data></node><node id="158"><data key="reference"></data><data key="identifier">Override</data><data key="text">Override</data><data key="type">Name</data><data key="parentType">MarkerAnnotationExpr</data></node><node id="159"><data key="reference">userDefinedMethodName</data><data key="identifier">getType</data><data key="text">getType</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="50"><data key="reference"></data><data key="text">ifExists</data><data key="type">VariableDeclarator</data><data key="parentType">FieldDeclaration</data></node><node id="51"><data key="reference"></data><data key="identifier">boolean</data><data key="text">boolean</data><data key="type">PrimitiveType</data><data key="parentType">VariableDeclarator</data></node><node id="52"><data key="reference">boolean</data><data key="identifier">ifExists</data><data key="text">ifExists</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="53"><data key="reference"></data><data key="modifier">public</data><data key="text">public AlterTableDropConstraint(Session session, Schema schema, boolean ifExists) {
    super(session, schema);
    this.ifExists = ifExists;
}</data><data key="type">ConstructorDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="54"><data key="reference">userDefinedMethodName</data><data key="identifier">AlterTableDropConstraint</data><data key="text">AlterTableDropConstraint</data><data key="type">SimpleName</data><data key="parentType">ConstructorDeclaration</data></node><node id="55"><data key="reference"></data><data key="modifier"></data><data key="text">Session session</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="56"><data key="reference"></data><data key="text">Session</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="57"><data key="reference">nonQualifiedClassName</data><data key="identifier">Session</data><data key="text">Session</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="58"><data key="reference">org.h2.engine.Session</data><data key="identifier">session</data><data key="text">session</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="59"><data key="reference"></data><data key="modifier"></data><data key="text">Schema schema</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="160"><data key="reference"></data><data key="identifier">int</data><data key="text">int</data><data key="type">PrimitiveType</data><data key="parentType">MethodDeclaration</data></node><node id="161"><data key="reference"></data><data key="text">{
    return CommandInterface.ALTER_TABLE_DROP_CONSTRAINT;
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="162"><data key="reference"></data><data key="text">return CommandInterface.ALTER_TABLE_DROP_CONSTRAINT;</data><data key="type">ReturnStmt</data><data key="parentType">BlockStmt</data></node><node id="163"><data key="reference"></data><data key="text">CommandInterface.ALTER_TABLE_DROP_CONSTRAINT</data><data key="type">FieldAccessExpr</data><data key="parentType">ReturnStmt</data></node><node id="164"><data key="reference">UnknownType</data><data key="identifier">CommandInterface</data><data key="text">CommandInterface</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="165"><data key="reference">int</data><data key="identifier">ALTER_TABLE_DROP_CONSTRAINT</data><data key="text">ALTER_TABLE_DROP_CONSTRAINT</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="166"><data key="reference"></data><data key="text">SchemaCommand</data><data key="type">ClassOrInterfaceType</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="167"><data key="reference">nonQualifiedClassName</data><data key="identifier">SchemaCommand</data><data key="text">SchemaCommand</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="60"><data key="reference"></data><data key="text">Schema</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="61"><data key="reference">nonQualifiedClassName</data><data key="identifier">Schema</data><data key="text">Schema</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="62"><data key="reference">org.h2.schema.Schema</data><data key="identifier">schema</data><data key="text">schema</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="63"><data key="reference"></data><data key="modifier"></data><data key="text">boolean ifExists</data><data key="type">Parameter</data><data key="parentType">ConstructorDeclaration</data></node><node id="64"><data key="reference"></data><data key="identifier">boolean</data><data key="text">boolean</data><data key="type">PrimitiveType</data><data key="parentType">Parameter</data></node><node id="65"><data key="reference">boolean</data><data key="identifier">ifExists</data><data key="text">ifExists</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="66"><data key="reference"></data><data key="text">{
    super(session, schema);
    this.ifExists = ifExists;
}</data><data key="type">BlockStmt</data><data key="parentType">ConstructorDeclaration</data></node><node id="67"><data key="reference"></data><data key="text">super(session, schema);</data><data key="type">ExplicitConstructorInvocationStmt</data><data key="parentType">BlockStmt</data></node><node id="68"><data key="reference">org.h2.engine.Session</data><data key="identifier">session</data><data key="text">session</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="69"><data key="reference">org.h2.schema.Schema</data><data key="identifier">schema</data><data key="text">schema</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="70"><data key="reference"></data><data key="identifier">=</data><data key="text">this.ifExists = ifExists</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="71"><data key="reference"></data><data key="text">this.ifExists</data><data key="type">FieldAccessExpr</data><data key="parentType">AssignExpr</data></node><node id="72"><data key="reference"></data><data key="text">this</data><data key="type">ThisExpr</data><data key="parentType">FieldAccessExpr</data></node><node id="73"><data key="reference">boolean</data><data key="identifier">ifExists</data><data key="text">ifExists</data><data key="type">SimpleName</data><data key="parentType">FieldAccessExpr</data></node><node id="74"><data key="reference">boolean</data><data key="identifier">ifExists</data><data key="text">ifExists</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="75"><data key="reference"></data><data key="modifier">public</data><data key="text">public void setConstraintName(String string) {
    constraintName = string;
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="76"><data key="reference">userDefinedMethodName</data><data key="identifier">setConstraintName</data><data key="text">setConstraintName</data><data key="type">SimpleName</data><data key="parentType">MethodDeclaration</data></node><node id="77"><data key="reference"></data><data key="modifier"></data><data key="text">String string</data><data key="type">Parameter</data><data key="parentType">MethodDeclaration</data></node><node id="78"><data key="reference"></data><data key="text">String</data><data key="type">ClassOrInterfaceType</data><data key="parentType">Parameter</data></node><node id="79"><data key="reference">nonQualifiedClassName</data><data key="identifier">String</data><data key="text">String</data><data key="type">SimpleName</data><data key="parentType">ClassOrInterfaceType</data></node><node id="100"><data key="reference">org.h2.constraint.Constraint</data><data key="identifier">constraint</data><data key="text">constraint</data><data key="type">SimpleName</data><data key="parentType">VariableDeclarator</data></node><node id="101"><data key="reference"></data><data key="text">getSchema().findConstraint(session, constraintName)</data><data key="type">MethodCallExpr</data><data key="parentType">VariableDeclarator</data></node><node id="102"><data key="reference"></data><data key="text">getSchema()</data><data key="type">MethodCallExpr</data><data key="parentType">MethodCallExpr</data></node><node id="103"><data key="reference">otherMethodCall</data><data key="identifier">getSchema</data><data key="text">getSchema</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="104"><data key="reference">otherMethodCall</data><data key="identifier">findConstraint</data><data key="text">findConstraint</data><data key="type">SimpleName</data><data key="parentType">MethodCallExpr</data></node><node id="105"><data key="reference">org.h2.engine.Session</data><data key="identifier">session</data><data key="text">session</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="106"><data key="reference">java.lang.String</data><data key="identifier">constraintName</data><data key="text">constraintName</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="80"><data key="reference">java.lang.String</data><data key="identifier">string</data><data key="text">string</data><data key="type">SimpleName</data><data key="parentType">Parameter</data></node><node id="107"><data key="reference"></data><data key="text">if (constraint == null) {
    if (!ifExists) {
        throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);
    }
} else {
    session.getUser().checkRight(constraint.getTable(), Right.ALL);
    session.getUser().checkRight(constraint.getRefTable(), Right.ALL);
    session.getDatabase().removeSchemaObject(session, constraint);
}</data><data key="type">IfStmt</data><data key="parentType">BlockStmt</data></node><node id="81"><data key="reference"></data><data key="text">void</data><data key="type">VoidType</data><data key="parentType">MethodDeclaration</data></node><node id="108"><data key="reference"></data><data key="text">constraint == null</data><data key="type">BinaryExpr</data><data key="parentType">IfStmt</data></node><node id="82"><data key="reference"></data><data key="text">{
    constraintName = string;
}</data><data key="type">BlockStmt</data><data key="parentType">MethodDeclaration</data></node><node id="109"><data key="reference">org.h2.constraint.Constraint</data><data key="identifier">constraint</data><data key="text">constraint</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="83"><data key="reference"></data><data key="identifier">=</data><data key="text">constraintName = string</data><data key="type">AssignExpr</data><data key="parentType">ExpressionStmt</data></node><node id="84"><data key="reference">java.lang.String</data><data key="identifier">constraintName</data><data key="text">constraintName</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="85"><data key="reference">java.lang.String</data><data key="identifier">string</data><data key="text">string</data><data key="type">SimpleName</data><data key="parentType">NameExpr</data></node><node id="86"><data key="reference"></data><data key="modifier">public</data><data key="text">@Override
public int update() {
    session.commit(true);
    Constraint constraint = getSchema().findConstraint(session, constraintName);
    if (constraint == null) {
        if (!ifExists) {
            throw DbException.get(ErrorCode.CONSTRAINT_NOT_FOUND_1, constraintName);
        }
    } else {
        session.getUser().checkRight(constraint.getTable(), Right.ALL);
        session.getUser().checkRight(constraint.getRefTable(), Right.ALL);
        session.getDatabase().removeSchemaObject(session, constraint);
    }
    return 0;
}</data><data key="type">MethodDeclaration</data><data key="parentType">ClassOrInterfaceDeclaration</data></node><node id="87"><data key="reference"></data><data key="text">@Override</data><data key="type">MarkerAnnotationExpr</data><data key="parentType">MethodDeclaration</data></node><edge id="128" source="89" target="90" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="168" source="111" target="112" label="AST"><data key="type">AST</data></edge><edge id="167" source="111" target="124" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="169" source="112" target="113" label="AST"><data key="type">AST</data></edge><edge id="172" source="112" target="115" label="AST"><data key="type">AST</data></edge><edge id="171" source="113" target="114" label="AST"><data key="type">AST</data></edge><edge id="170" source="113" target="115" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="173" source="115" target="116" label="AST"><data key="type">AST</data></edge><edge id="174" source="116" target="117" label="AST"><data key="type">AST</data></edge><edge id="130" source="90" target="91" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="177" source="117" target="119" label="AST"><data key="type">AST</data></edge><edge id="179" source="117" target="120" label="AST"><data key="type">AST</data></edge><edge id="184" source="117" target="123" label="AST"><data key="type">AST</data></edge><edge id="175" source="117" target="118" label="AST"><data key="type">AST</data></edge><edge id="132" source="91" target="92" label="AST"><data key="type">AST</data></edge><edge id="243" source="91" target="154" label="AST"><data key="type">AST</data></edge><edge id="156" source="91" target="107" label="AST"><data key="type">AST</data></edge><edge id="139" source="91" target="96" label="AST"><data key="type">AST</data></edge><edge id="176" source="118" target="119" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="134" source="92" target="93" label="AST"><data key="type">AST</data></edge><edge id="136" source="92" target="94" label="AST"><data key="type">AST</data></edge><edge id="138" source="92" target="95" label="AST"><data key="type">AST</data></edge><edge id="133" source="92" target="96" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="178" source="119" target="120" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="135" source="93" target="94" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="137" source="94" target="95" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="141" source="96" target="97" label="AST"><data key="type">AST</data></edge><edge id="140" source="96" target="107" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="145" source="97" target="100" label="AST"><data key="type">AST</data></edge><edge id="147" source="97" target="101" label="AST"><data key="type">AST</data></edge><edge id="142" source="97" target="98" label="AST"><data key="type">AST</data></edge><edge id="11" source="10" target="11" label="AST"><data key="type">AST</data></edge><edge id="144" source="98" target="99" label="AST"><data key="type">AST</data></edge><edge id="143" source="98" target="100" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="14" source="12" target="13" label="AST"><data key="type">AST</data></edge><edge id="13" source="12" target="17" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="15" source="13" target="14" label="AST"><data key="type">AST</data></edge><edge id="16" source="14" target="15" label="AST"><data key="type">AST</data></edge><edge id="17" source="15" target="16" label="AST"><data key="type">AST</data></edge><edge id="20" source="17" target="18" label="AST"><data key="type">AST</data></edge><edge id="19" source="17" target="22" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="21" source="18" target="19" label="AST"><data key="type">AST</data></edge><edge id="22" source="19" target="20" label="AST"><data key="type">AST</data></edge><edge id="181" source="120" target="121" label="AST"><data key="type">AST</data></edge><edge id="183" source="120" target="122" label="AST"><data key="type">AST</data></edge><edge id="180" source="120" target="123" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="182" source="121" target="122" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="0" source="1" target="2" label="AST"><data key="type">AST</data></edge><edge id="12" source="1" target="12" label="AST"><data key="type">AST</data></edge><edge id="24" source="1" target="22" label="AST"><data key="type">AST</data></edge><edge id="36" source="1" target="32" label="AST"><data key="type">AST</data></edge><edge id="48" source="1" target="42" label="AST"><data key="type">AST</data></edge><edge id="6" source="1" target="7" label="AST"><data key="type">AST</data></edge><edge id="18" source="1" target="17" label="AST"><data key="type">AST</data></edge><edge id="30" source="1" target="27" label="AST"><data key="type">AST</data></edge><edge id="42" source="1" target="37" label="AST"><data key="type">AST</data></edge><edge id="2" source="2" target="3" label="AST"><data key="type">AST</data></edge><edge id="1" source="2" target="7" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="3" source="3" target="4" label="AST"><data key="type">AST</data></edge><edge id="207" source="124" target="136" label="AST"><data key="type">AST</data></edge><edge id="229" source="124" target="147" label="AST"><data key="type">AST</data></edge><edge id="186" source="124" target="125" label="AST"><data key="type">AST</data></edge><edge id="4" source="4" target="5" label="AST"><data key="type">AST</data></edge><edge id="188" source="125" target="126" label="AST"><data key="type">AST</data></edge><edge id="203" source="125" target="133" label="AST"><data key="type">AST</data></edge><edge id="193" source="125" target="129" label="AST"><data key="type">AST</data></edge><edge id="195" source="125" target="130" label="AST"><data key="type">AST</data></edge><edge id="187" source="125" target="136" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="5" source="5" target="6" label="AST"><data key="type">AST</data></edge><edge id="190" source="126" target="127" label="AST"><data key="type">AST</data></edge><edge id="192" source="126" target="128" label="AST"><data key="type">AST</data></edge><edge id="189" source="126" target="129" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="191" source="127" target="128" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="8" source="7" target="8" label="AST"><data key="type">AST</data></edge><edge id="7" source="7" target="12" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="9" source="8" target="9" label="AST"><data key="type">AST</data></edge><edge id="194" source="129" target="130" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="10" source="9" target="10" label="AST"><data key="type">AST</data></edge><edge id="23" source="20" target="21" label="AST"><data key="type">AST</data></edge><edge id="26" source="22" target="23" label="AST"><data key="type">AST</data></edge><edge id="25" source="22" target="27" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="27" source="23" target="24" label="AST"><data key="type">AST</data></edge><edge id="28" source="24" target="25" label="AST"><data key="type">AST</data></edge><edge id="29" source="25" target="26" label="AST"><data key="type">AST</data></edge><edge id="32" source="27" target="28" label="AST"><data key="type">AST</data></edge><edge id="31" source="27" target="32" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="33" source="28" target="29" label="AST"><data key="type">AST</data></edge><edge id="34" source="29" target="30" label="AST"><data key="type">AST</data></edge><edge id="202" source="130" target="132" label="AST"><data key="type">AST</data></edge><edge id="197" source="130" target="131" label="AST"><data key="type">AST</data></edge><edge id="196" source="130" target="133" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="198" source="131" target="100" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="201" source="131" target="109" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="200" source="131" target="109" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="199" source="131" target="132" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="204" source="133" target="134" label="AST"><data key="type">AST</data></edge><edge id="206" source="133" target="135" label="AST"><data key="type">AST</data></edge><edge id="205" source="134" target="135" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="224" source="136" target="144" label="AST"><data key="type">AST</data></edge><edge id="214" source="136" target="140" label="AST"><data key="type">AST</data></edge><edge id="216" source="136" target="141" label="AST"><data key="type">AST</data></edge><edge id="209" source="136" target="137" label="AST"><data key="type">AST</data></edge><edge id="208" source="136" target="147" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="211" source="137" target="138" label="AST"><data key="type">AST</data></edge><edge id="213" source="137" target="139" label="AST"><data key="type">AST</data></edge><edge id="210" source="137" target="140" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="212" source="138" target="139" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="35" source="30" target="31" label="AST"><data key="type">AST</data></edge><edge id="38" source="32" target="33" label="AST"><data key="type">AST</data></edge><edge id="37" source="32" target="37" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="39" source="33" target="34" label="AST"><data key="type">AST</data></edge><edge id="40" source="34" target="35" label="AST"><data key="type">AST</data></edge><edge id="41" source="35" target="36" label="AST"><data key="type">AST</data></edge><edge id="44" source="37" target="38" label="AST"><data key="type">AST</data></edge><edge id="43" source="37" target="42" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="45" source="38" target="39" label="AST"><data key="type">AST</data></edge><edge id="46" source="39" target="40" label="AST"><data key="type">AST</data></edge><edge id="215" source="140" target="141" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="223" source="141" target="143" label="AST"><data key="type">AST</data></edge><edge id="218" source="141" target="142" label="AST"><data key="type">AST</data></edge><edge id="217" source="141" target="144" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="219" source="142" target="100" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="222" source="142" target="131" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="221" source="142" target="131" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="220" source="142" target="143" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="225" source="144" target="145" label="AST"><data key="type">AST</data></edge><edge id="227" source="144" target="146" label="AST"><data key="type">AST</data></edge><edge id="228" source="144" target="133" label="LAST_FIELD_LEX"><data key="type">LAST_FIELD_LEX</data></edge><edge id="226" source="145" target="146" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="235" source="147" target="151" label="AST"><data key="type">AST</data></edge><edge id="237" source="147" target="152" label="AST"><data key="type">AST</data></edge><edge id="239" source="147" target="153" label="AST"><data key="type">AST</data></edge><edge id="230" source="147" target="148" label="AST"><data key="type">AST</data></edge><edge id="232" source="148" target="149" label="AST"><data key="type">AST</data></edge><edge id="234" source="148" target="150" label="AST"><data key="type">AST</data></edge><edge id="231" source="148" target="151" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="233" source="149" target="150" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="47" source="40" target="41" label="AST"><data key="type">AST</data></edge><edge id="122" source="42" target="86" label="AST"><data key="type">AST</data></edge><edge id="101" source="42" target="75" label="AST"><data key="type">AST</data></edge><edge id="58" source="42" target="49" label="AST"><data key="type">AST</data></edge><edge id="246" source="42" target="156" label="AST"><data key="type">AST</data></edge><edge id="49" source="42" target="43" label="AST"><data key="type">AST</data></edge><edge id="51" source="42" target="44" label="AST"><data key="type">AST</data></edge><edge id="64" source="42" target="53" label="AST"><data key="type">AST</data></edge><edge id="262" source="42" target="166" label="AST"><data key="type">AST</data></edge><edge id="50" source="43" target="44" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="53" source="44" target="45" label="AST"><data key="type">AST</data></edge><edge id="52" source="44" target="49" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="57" source="45" target="48" label="AST"><data key="type">AST</data></edge><edge id="54" source="45" target="46" label="AST"><data key="type">AST</data></edge><edge id="56" source="46" target="47" label="AST"><data key="type">AST</data></edge><edge id="55" source="46" target="48" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="60" source="49" target="50" label="AST"><data key="type">AST</data></edge><edge id="59" source="49" target="53" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="236" source="151" target="152" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="238" source="152" target="153" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="240" source="153" target="100" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="242" source="153" target="142" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="241" source="153" target="142" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="244" source="154" target="155" label="AST"><data key="type">AST</data></edge><edge id="245" source="154" target="86" label="RETURNS_TO"><data key="type">RETURNS_TO</data></edge><edge id="253" source="156" target="160" label="AST"><data key="type">AST</data></edge><edge id="255" source="156" target="161" label="AST"><data key="type">AST</data></edge><edge id="248" source="156" target="157" label="AST"><data key="type">AST</data></edge><edge id="251" source="156" target="159" label="AST"><data key="type">AST</data></edge><edge id="247" source="156" target="166" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="250" source="157" target="158" label="AST"><data key="type">AST</data></edge><edge id="249" source="157" target="159" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="252" source="159" target="160" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="61" source="50" target="51" label="AST"><data key="type">AST</data></edge><edge id="63" source="50" target="52" label="AST"><data key="type">AST</data></edge><edge id="62" source="51" target="52" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="66" source="53" target="54" label="AST"><data key="type">AST</data></edge><edge id="68" source="53" target="55" label="AST"><data key="type">AST</data></edge><edge id="80" source="53" target="63" label="AST"><data key="type">AST</data></edge><edge id="74" source="53" target="59" label="AST"><data key="type">AST</data></edge><edge id="85" source="53" target="66" label="AST"><data key="type">AST</data></edge><edge id="65" source="53" target="75" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="67" source="54" target="55" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="70" source="55" target="56" label="AST"><data key="type">AST</data></edge><edge id="73" source="55" target="58" label="AST"><data key="type">AST</data></edge><edge id="69" source="55" target="59" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="72" source="56" target="57" label="AST"><data key="type">AST</data></edge><edge id="71" source="56" target="58" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="79" source="59" target="62" label="AST"><data key="type">AST</data></edge><edge id="76" source="59" target="60" label="AST"><data key="type">AST</data></edge><edge id="75" source="59" target="63" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="254" source="160" target="161" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="256" source="161" target="162" label="AST"><data key="type">AST</data></edge><edge id="257" source="162" target="163" label="AST"><data key="type">AST</data></edge><edge id="261" source="162" target="156" label="RETURNS_TO"><data key="type">RETURNS_TO</data></edge><edge id="258" source="163" target="164" label="AST"><data key="type">AST</data></edge><edge id="260" source="163" target="165" label="AST"><data key="type">AST</data></edge><edge id="259" source="164" target="165" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="263" source="166" target="167" label="AST"><data key="type">AST</data></edge><edge id="78" source="60" target="61" label="AST"><data key="type">AST</data></edge><edge id="77" source="60" target="62" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="82" source="63" target="64" label="AST"><data key="type">AST</data></edge><edge id="84" source="63" target="65" label="AST"><data key="type">AST</data></edge><edge id="81" source="63" target="66" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="83" source="64" target="65" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="91" source="66" target="70" label="AST"><data key="type">AST</data></edge><edge id="86" source="66" target="67" label="AST"><data key="type">AST</data></edge><edge id="88" source="67" target="68" label="AST"><data key="type">AST</data></edge><edge id="90" source="67" target="69" label="AST"><data key="type">AST</data></edge><edge id="87" source="67" target="70" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="89" source="68" target="69" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="100" source="70" target="74" label="AST"><data key="type">AST</data></edge><edge id="92" source="70" target="71" label="AST"><data key="type">AST</data></edge><edge id="94" source="71" target="72" label="AST"><data key="type">AST</data></edge><edge id="96" source="71" target="73" label="AST"><data key="type">AST</data></edge><edge id="99" source="71" target="50" label="LAST_FIELD_LEX"><data key="type">LAST_FIELD_LEX</data></edge><edge id="93" source="71" target="74" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="95" source="72" target="73" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="98" source="73" target="74" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="97" source="73" target="52" label="FIELD"><data key="type">FIELD</data></edge><edge id="111" source="75" target="81" label="AST"><data key="type">AST</data></edge><edge id="113" source="75" target="82" label="AST"><data key="type">AST</data></edge><edge id="103" source="75" target="76" label="AST"><data key="type">AST</data></edge><edge id="105" source="75" target="77" label="AST"><data key="type">AST</data></edge><edge id="102" source="75" target="86" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="104" source="76" target="77" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="110" source="77" target="80" label="AST"><data key="type">AST</data></edge><edge id="107" source="77" target="78" label="AST"><data key="type">AST</data></edge><edge id="106" source="77" target="81" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="109" source="78" target="79" label="AST"><data key="type">AST</data></edge><edge id="108" source="78" target="80" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="146" source="100" target="101" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="155" source="101" target="106" label="AST"><data key="type">AST</data></edge><edge id="148" source="101" target="102" label="AST"><data key="type">AST</data></edge><edge id="151" source="101" target="104" label="AST"><data key="type">AST</data></edge><edge id="153" source="101" target="105" label="AST"><data key="type">AST</data></edge><edge id="150" source="102" target="103" label="AST"><data key="type">AST</data></edge><edge id="149" source="102" target="104" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="152" source="104" target="105" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="154" source="105" target="106" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="166" source="107" target="111" label="AST"><data key="type">AST</data></edge><edge id="158" source="107" target="108" label="AST"><data key="type">AST</data></edge><edge id="185" source="107" target="124" label="AST"><data key="type">AST</data></edge><edge id="157" source="107" target="154" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="112" source="81" target="82" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="165" source="108" target="110" label="AST"><data key="type">AST</data></edge><edge id="160" source="108" target="109" label="AST"><data key="type">AST</data></edge><edge id="159" source="108" target="111" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="114" source="82" target="83" label="AST"><data key="type">AST</data></edge><edge id="161" source="109" target="100" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="164" source="109" target="100" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="163" source="109" target="100" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="162" source="109" target="110" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="115" source="83" target="84" label="AST"><data key="type">AST</data></edge><edge id="118" source="83" target="85" label="AST"><data key="type">AST</data></edge><edge id="117" source="84" target="85" label="COMPUTED_FROM"><data key="type">COMPUTED_FROM</data></edge><edge id="116" source="84" target="85" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="119" source="85" target="80" label="LAST_WRITE"><data key="type">LAST_WRITE</data></edge><edge id="121" source="85" target="80" label="LAST_LEXICAL_SCOPE_USE"><data key="type">LAST_LEXICAL_SCOPE_USE</data></edge><edge id="120" source="85" target="80" label="LAST_READ"><data key="type">LAST_READ</data></edge><edge id="124" source="86" target="87" label="AST"><data key="type">AST</data></edge><edge id="127" source="86" target="89" label="AST"><data key="type">AST</data></edge><edge id="129" source="86" target="90" label="AST"><data key="type">AST</data></edge><edge id="131" source="86" target="91" label="AST"><data key="type">AST</data></edge><edge id="123" source="86" target="156" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge><edge id="126" source="87" target="88" label="AST"><data key="type">AST</data></edge><edge id="125" source="87" target="89" label="NEXT_TOKEN"><data key="type">NEXT_TOKEN</data></edge></graph></graphml>